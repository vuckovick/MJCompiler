// generated with ast extension for cup
// version 0.8
// 18/6/2025 15:55:44


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(OptionalNumConst OptionalNumConst);
    public void visit(FactorOpt FactorOpt);
    public void visit(Mulop Mulop);
    public void visit(GlobalVarItem GlobalVarItem);
    public void visit(DecType DecType);
    public void visit(FormParsOpt FormParsOpt);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(DesignatorOrExprWhile DesignatorOrExprWhile);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(OptionalMethodDecl OptionalMethodDecl);
    public void visit(TermList TermList);
    public void visit(Assignop Assignop);
    public void visit(InterfaceDeclOptList InterfaceDeclOptList);
    public void visit(MethodType MethodType);
    public void visit(CondTermList CondTermList);
    public void visit(DesignatorOpt DesignatorOpt);
    public void visit(FormParItem FormParItem);
    public void visit(OptionalExtends OptionalExtends);
    public void visit(StatementList StatementList);
    public void visit(FactorList FactorList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(CondFactList CondFactList);
    public void visit(DesignatorStatementWhile DesignatorStatementWhile);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(ArrayOpt ArrayOpt);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(FormParsList FormParsList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(ActParsList ActParsList);
    public void visit(InterfaceDeclOpt InterfaceDeclOpt);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(IfConstruction IfConstruction);
    public void visit(Setop Setop);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(GlobalVarList GlobalVarList);
    public void visit(DesignatorOrExpr DesignatorOrExpr);
    public void visit(Consts Consts);
    public void visit(FormPars FormPars);
    public void visit(Union Union);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mull Mull);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(Le Le);
    public void visit(Lt Lt);
    public void visit(Ge Ge);
    public void visit(Gt Gt);
    public void visit(Ne Ne);
    public void visit(Eq Eq);
    public void visit(Assign Assign);
    public void visit(Label Label);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorVar DesignatorVar);
    public void visit(ParenFactor ParenFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumConstFactor NumConstFactor);
    public void visit(DesignatorMethFactor DesignatorMethFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(UnaryMinusFactor UnaryMinusFactor);
    public void visit(NoUnaryFactor NoUnaryFactor);
    public void visit(TermMulFactors TermMulFactors);
    public void visit(TermFactor TermFactor);
    public void visit(Term Term);
    public void visit(AddTerms AddTerms);
    public void visit(AddTerm AddTerm);
    public void visit(MapExpretion MapExpretion);
    public void visit(Expretion Expretion);
    public void visit(ActParams ActParams);
    public void visit(NoActParams NoActParams);
    public void visit(ActPars ActPars);
    public void visit(FuncPars FuncPars);
    public void visit(NoFuncPars NoFuncPars);
    public void visit(Dec Dec);
    public void visit(Inc Inc);
    public void visit(FunctionCall FunctionCall);
    public void visit(DesignatorStmtError DesignatorStmtError);
    public void visit(UnionStmt UnionStmt);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(Assignement Assignement);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(Relops Relops);
    public void visit(NoRelops NoRelops);
    public void visit(AndConditions AndConditions);
    public void visit(ConditionFacts ConditionFacts);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(OrConditions OrConditions);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(Condition Condition);
    public void visit(DesignatorStmtErrorDoWhile DesignatorStmtErrorDoWhile);
    public void visit(UnionStmtDoWhile UnionStmtDoWhile);
    public void visit(DesignatorExprDoWhile DesignatorExprDoWhile);
    public void visit(AssignementDoWhile AssignementDoWhile);
    public void visit(DesignatorStmtDoWhile DesignatorStmtDoWhile);
    public void visit(DoWhileDesignatorStmt DoWhileDesignatorStmt);
    public void visit(NoDoWhileDesignatorStmt NoDoWhileDesignatorStmt);
    public void visit(DoWhileCond DoWhileCond);
    public void visit(NoDoWhileCond NoDoWhileCond);
    public void visit(PrintNumConst PrintNumConst);
    public void visit(NoPrintNumConst NoPrintNumConst);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(NoReturnExpr NoReturnExpr);
    public void visit(BeginDoWhile BeginDoWhile);
    public void visit(MatchedStatements MatchedStatements);
    public void visit(DoWhile DoWhile);
    public void visit(Print Print);
    public void visit(Read Read);
    public void visit(Return Return);
    public void visit(Continue Continue);
    public void visit(Break Break);
    public void visit(MatchedIf MatchedIf);
    public void visit(DesignatorStmtt DesignatorStmtt);
    public void visit(IfError IfError);
    public void visit(If If);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(Type Type);
    public void visit(FormPar FormPar);
    public void visit(FormParItemError FormParItemError);
    public void visit(FormParItemVar FormParItemVar);
    public void visit(FormParsListEnd FormParsListEnd);
    public void visit(FormParamsList FormParamsList);
    public void visit(FormParams FormParams);
    public void visit(Statements Statements);
    public void visit(NoStatements NoStatements);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(NoVarDeclarations NoVarDeclarations);
    public void visit(MethodDecl MethodDecl);
    public void visit(Pars Pars);
    public void visit(NoPars NoPars);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnType ReturnType);
    public void visit(MethodSignature MethodSignature);
    public void visit(Array Array);
    public void visit(NoArray NoArray);
    public void visit(VarItem VarItem);
    public void visit(VarListEnd VarListEnd);
    public void visit(VarListMore VarListMore);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(GlobalVarError GlobalVarError);
    public void visit(GlobalVar GlobalVar);
    public void visit(GlobalVarListEnd GlobalVarListEnd);
    public void visit(GLobalVarListMore GLobalVarListMore);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(ConstItem ConstItem);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(VarDeclType VarDeclType);
    public void visit(ConstDeclType ConstDeclType);
    public void visit(ProgDeclList ProgDeclList);
    public void visit(NoProgDeclList NoProgDeclList);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
