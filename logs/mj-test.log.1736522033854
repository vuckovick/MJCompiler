INFO  20:45:50,630 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  20:45:50,734 - #2 program
INFO  20:45:50,734 - #49 p
INFO  20:45:50,734 - #8 const
INFO  20:45:50,735 - #49 int
INFO  20:45:50,735 - #49 tableSize
INFO  20:45:50,736 - #35 =
INFO  20:45:50,736 - #46 10
INFO  20:45:50,736 - #36 ;
INFO  20:45:50,737 - #49 set
INFO  20:45:50,737 - #49 s1
INFO  20:45:50,737 - #36 ;
INFO  20:45:50,739 - #3 class
INFO  20:45:50,739 - #49 Table
INFO  20:45:50,739 - #44 {
INFO  20:45:50,740 - #49 int
INFO  20:45:50,741 - #49 pos
INFO  20:45:50,741 - #42 [
INFO  20:45:50,741 - #43 ]
INFO  20:45:50,741 - #38 ,
INFO  20:45:50,741 - #38 ,
ERROR 20:45:50,741 - 
Sintaksna greska na liniji 5, na koloni 10
INFO  20:45:50,743 - #49 nn
INFO  20:45:50,743 - #36 ;
INFO  20:45:50,743 - #44 {
INFO  20:45:50,746 - #12 void
INFO  20:45:50,746 - #49 setfactor
INFO  20:45:50,746 - #40 (
INFO  20:45:50,746 - #49 int
INFO  20:45:50,746 - #49 factor
INFO  20:45:50,746 - #41 )
INFO  20:45:50,746 - #44 {
INFO  20:45:50,746 - #49 this
INFO  20:45:50,746 - #39 .
INFO  20:45:50,746 - #49 factor
INFO  20:45:50,746 - #35 =
INFO  20:45:50,746 - #49 factor
INFO  20:45:50,747 - #36 ;
INFO  20:45:50,748 - #45 }
INFO  20:45:50,748 - #12 void
INFO  20:45:50,748 - #49 putp
INFO  20:45:50,748 - #40 (
INFO  20:45:50,748 - #49 int
INFO  20:45:50,748 - #49 a
INFO  20:45:50,748 - #38 ,
INFO  20:45:50,748 - #49 int
INFO  20:45:50,748 - #49 idx
INFO  20:45:50,748 - #41 )
INFO  20:45:50,748 - #44 {
INFO  20:45:50,748 - #49 this
INFO  20:45:50,748 - #39 .
INFO  20:45:50,748 - #49 pos
INFO  20:45:50,748 - #42 [
INFO  20:45:50,748 - #49 idx
INFO  20:45:50,748 - #43 ]
INFO  20:45:50,748 - #35 =
INFO  20:45:50,748 - #49 a
INFO  20:45:50,748 - #36 ;
INFO  20:45:50,748 - #45 }
INFO  20:45:50,748 - #12 void
INFO  20:45:50,748 - #49 putn
INFO  20:45:50,748 - #40 (
INFO  20:45:50,748 - #49 int
INFO  20:45:50,749 - #49 a
INFO  20:45:50,749 - #38 ,
INFO  20:45:50,749 - #49 int
INFO  20:45:50,749 - #49 idx
INFO  20:45:50,749 - #41 )
INFO  20:45:50,749 - #44 {
INFO  20:45:50,749 - #49 this
INFO  20:45:50,749 - #39 .
INFO  20:45:50,749 - #49 neg
INFO  20:45:50,749 - #42 [
INFO  20:45:50,749 - #49 idx
INFO  20:45:50,749 - #43 ]
INFO  20:45:50,749 - #35 =
INFO  20:45:50,749 - #49 a
INFO  20:45:50,749 - #36 ;
INFO  20:45:50,749 - #45 }
INFO  20:45:50,749 - #49 int
INFO  20:45:50,749 - #49 getp
INFO  20:45:50,749 - #40 (
INFO  20:45:50,749 - #49 int
INFO  20:45:50,749 - #49 idx
INFO  20:45:50,749 - #41 )
INFO  20:45:50,749 - #44 {
INFO  20:45:50,749 - #13 return
INFO  20:45:50,749 - #49 pos
INFO  20:45:50,749 - #42 [
INFO  20:45:50,750 - #49 idx
INFO  20:45:50,750 - #43 ]
INFO  20:45:50,750 - #36 ;
INFO  20:45:50,750 - #45 }
INFO  20:45:50,750 - #49 int
INFO  20:45:50,750 - #49 getn
INFO  20:45:50,750 - #40 (
INFO  20:45:50,750 - #49 int
INFO  20:45:50,750 - #49 idx
INFO  20:45:50,750 - #41 )
INFO  20:45:50,750 - #44 {
INFO  20:45:50,750 - #13 return
INFO  20:45:50,750 - #49 neg
INFO  20:45:50,750 - #42 [
INFO  20:45:50,750 - #49 idx
INFO  20:45:50,750 - #43 ]
INFO  20:45:50,750 - #36 ;
INFO  20:45:50,750 - #45 }
INFO  20:45:50,750 - #45 }
INFO  20:45:50,751 - #45 }
INFO  20:45:50,751 - #49 Table
INFO  20:45:50,751 - #49 val
INFO  20:45:50,751 - #36 ;
INFO  20:45:50,751 - #49 int
INFO  20:45:50,751 - #49 rows
INFO  20:45:50,751 - #38 ,
INFO  20:45:50,751 - #49 columns
INFO  20:45:50,751 - #36 ;
INFO  20:45:50,751 - #44 {
INFO  20:45:50,751 - #12 void
INFO  20:45:50,751 - #49 f
INFO  20:45:50,751 - #40 (
INFO  20:45:50,751 - #49 char
INFO  20:45:50,751 - #49 ch
INFO  20:45:50,751 - #38 ,
INFO  20:45:50,751 - #49 int
INFO  20:45:50,751 - #49 a
INFO  20:45:50,752 - #38 ,
INFO  20:45:50,752 - #49 int
INFO  20:45:50,752 - #49 arg
INFO  20:45:50,752 - #41 )
INFO  20:45:50,752 - #49 int
INFO  20:45:50,752 - #49 x
INFO  20:45:50,752 - #36 ;
INFO  20:45:50,752 - #44 {
INFO  20:45:50,752 - #49 x
INFO  20:45:50,753 - #35 =
INFO  20:45:50,753 - #49 arg
INFO  20:45:50,753 - #36 ;
INFO  20:45:50,753 - #45 }
INFO  20:45:50,753 - #12 void
INFO  20:45:50,753 - #49 main
INFO  20:45:50,753 - #40 (
INFO  20:45:50,753 - #41 )
INFO  20:45:50,753 - #49 int
INFO  20:45:50,753 - #49 x
INFO  20:45:50,753 - #38 ,
INFO  20:45:50,753 - #49 i
INFO  20:45:50,753 - #36 ;
INFO  20:45:50,753 - #49 char
INFO  20:45:50,753 - #49 c
INFO  20:45:50,753 - #36 ;
INFO  20:45:50,753 - #49 int
INFO  20:45:50,753 - #49 arr
INFO  20:45:50,753 - #42 [
INFO  20:45:50,753 - #43 ]
INFO  20:45:50,753 - #36 ;
INFO  20:45:50,753 - #44 {
INFO  20:45:50,753 - #49 val
INFO  20:45:50,753 - #35 =
INFO  20:45:50,753 - #11 new
INFO  20:45:50,754 - #49 Table
INFO  20:45:50,754 - #40 (
INFO  20:45:50,754 - #41 )
INFO  20:45:50,754 - #36 ;
INFO  20:45:50,754 - #49 val
INFO  20:45:50,754 - #39 .
INFO  20:45:50,754 - #49 setfactor
INFO  20:45:50,754 - #40 (
INFO  20:45:50,754 - #46 2
INFO  20:45:50,754 - #41 )
INFO  20:45:50,754 - #36 ;
INFO  20:45:50,754 - #49 s1
INFO  20:45:50,754 - #35 =
INFO  20:45:50,754 - #11 new
INFO  20:45:50,754 - #49 set
INFO  20:45:50,754 - #42 [
INFO  20:45:50,754 - #46 5
INFO  20:45:50,754 - #43 ]
INFO  20:45:50,754 - #36 ;
INFO  20:45:50,754 - #49 s1
INFO  20:45:50,754 - #39 .
INFO  20:45:50,754 - #49 add
INFO  20:45:50,754 - #40 (
INFO  20:45:50,754 - #46 5
INFO  20:45:50,754 - #41 )
INFO  20:45:50,754 - #36 ;
INFO  20:45:50,755 - #49 s1
INFO  20:45:50,755 - #39 .
INFO  20:45:50,755 - #49 add
INFO  20:45:50,755 - #40 (
INFO  20:45:50,755 - #46 10
INFO  20:45:50,755 - #41 )
INFO  20:45:50,755 - #36 ;
INFO  20:45:50,755 - #9 print
INFO  20:45:50,755 - #40 (
INFO  20:45:50,755 - #49 s1
INFO  20:45:50,755 - #41 )
INFO  20:45:50,755 - #36 ;
INFO  20:45:50,755 - #49 arr
INFO  20:45:50,755 - #35 =
INFO  20:45:50,755 - #11 new
INFO  20:45:50,755 - #49 int
INFO  20:45:50,755 - #42 [
INFO  20:45:50,755 - #46 3
INFO  20:45:50,755 - #43 ]
INFO  20:45:50,755 - #36 ;
INFO  20:45:50,755 - #49 i
INFO  20:45:50,755 - #35 =
INFO  20:45:50,755 - #46 0
INFO  20:45:50,755 - #36 ;
INFO  20:45:50,755 - #14 do
INFO  20:45:50,755 - #49 arr
INFO  20:45:50,756 - #42 [
INFO  20:45:50,756 - #49 i
INFO  20:45:50,756 - #43 ]
INFO  20:45:50,756 - #35 =
INFO  20:45:50,756 - #49 i
INFO  20:45:50,756 - #36 ;
INFO  20:45:50,756 - #15 while
INFO  20:45:50,756 - #40 (
INFO  20:45:50,756 - #49 i
INFO  20:45:50,756 - #31 <
INFO  20:45:50,756 - #46 3
INFO  20:45:50,756 - #38 ,
INFO  20:45:50,756 - #49 i
INFO  20:45:50,756 - #25 ++
INFO  20:45:50,756 - #41 )
INFO  20:45:50,756 - #36 ;
INFO  20:45:50,756 - #49 i
INFO  20:45:50,756 - #35 =
INFO  20:45:50,756 - #46 0
INFO  20:45:50,756 - #36 ;
INFO  20:45:50,756 - #14 do
INFO  20:45:50,756 - #9 print
INFO  20:45:50,756 - #40 (
INFO  20:45:50,756 - #49 arr
INFO  20:45:50,757 - #42 [
INFO  20:45:50,757 - #49 i
INFO  20:45:50,757 - #43 ]
INFO  20:45:50,757 - #41 )
INFO  20:45:50,757 - #36 ;
INFO  20:45:50,757 - #15 while
INFO  20:45:50,757 - #40 (
INFO  20:45:50,757 - #49 i
INFO  20:45:50,757 - #31 <
INFO  20:45:50,757 - #46 3
INFO  20:45:50,757 - #38 ,
INFO  20:45:50,757 - #49 i
INFO  20:45:50,757 - #25 ++
INFO  20:45:50,757 - #41 )
INFO  20:45:50,757 - #36 ;
INFO  20:45:50,757 - #49 val
INFO  20:45:50,757 - #39 .
INFO  20:45:50,757 - #49 pos
INFO  20:45:50,757 - #35 =
INFO  20:45:50,757 - #11 new
INFO  20:45:50,757 - #49 int
INFO  20:45:50,758 - #42 [
INFO  20:45:50,758 - #49 tableSize
INFO  20:45:50,758 - #43 ]
INFO  20:45:50,758 - #36 ;
INFO  20:45:50,758 - #49 val
INFO  20:45:50,758 - #39 .
INFO  20:45:50,758 - #49 neg
INFO  20:45:50,758 - #35 =
INFO  20:45:50,758 - #11 new
INFO  20:45:50,758 - #49 int
INFO  20:45:50,758 - #42 [
INFO  20:45:50,758 - #49 tableSize
INFO  20:45:50,758 - #43 ]
INFO  20:45:50,758 - #36 ;
INFO  20:45:50,758 - #10 read
INFO  20:45:50,758 - #40 (
INFO  20:45:50,758 - #49 x
INFO  20:45:50,758 - #41 )
INFO  20:45:50,758 - #36 ;
INFO  20:45:50,758 - #49 i
INFO  20:45:50,758 - #35 =
INFO  20:45:50,758 - #46 0
INFO  20:45:50,758 - #36 ;
INFO  20:45:50,758 - #14 do
INFO  20:45:50,758 - #44 {
INFO  20:45:50,758 - #49 val
INFO  20:45:50,758 - #39 .
INFO  20:45:50,759 - #49 putp
INFO  20:45:50,759 - #40 (
INFO  20:45:50,759 - #46 0
INFO  20:45:50,759 - #38 ,
INFO  20:45:50,759 - #49 i
INFO  20:45:50,759 - #41 )
INFO  20:45:50,759 - #36 ;
INFO  20:45:50,759 - #49 val
INFO  20:45:50,759 - #39 .
INFO  20:45:50,759 - #49 putn
INFO  20:45:50,759 - #40 (
INFO  20:45:50,759 - #46 0
INFO  20:45:50,759 - #38 ,
INFO  20:45:50,759 - #49 i
INFO  20:45:50,759 - #41 )
INFO  20:45:50,759 - #36 ;
INFO  20:45:50,759 - #45 }
INFO  20:45:50,759 - #15 while
INFO  20:45:50,759 - #40 (
INFO  20:45:50,759 - #49 i
INFO  20:45:50,759 - #31 <
INFO  20:45:50,759 - #49 tableSize
INFO  20:45:50,759 - #38 ,
INFO  20:45:50,759 - #49 i
INFO  20:45:50,759 - #25 ++
INFO  20:45:50,759 - #41 )
INFO  20:45:50,760 - #36 ;
INFO  20:45:50,760 - #49 f
INFO  20:45:50,760 - #40 (
INFO  20:45:50,760 - #49 c
INFO  20:45:50,760 - #38 ,
INFO  20:45:50,760 - #49 x
INFO  20:45:50,760 - #38 ,
INFO  20:45:50,760 - #49 i
INFO  20:45:50,760 - #41 )
INFO  20:45:50,760 - #36 ;
INFO  20:45:50,760 - #10 read
INFO  20:45:50,760 - #40 (
INFO  20:45:50,761 - #49 rows
INFO  20:45:50,761 - #41 )
INFO  20:45:50,761 - #36 ;
INFO  20:45:50,761 - #49 x
INFO  20:45:50,761 - #35 =
INFO  20:45:50,761 - #49 rows
INFO  20:45:50,761 - #36 ;
INFO  20:45:50,761 - #14 do
INFO  20:45:50,761 - #44 {
INFO  20:45:50,761 - #16 if
INFO  20:45:50,761 - #40 (
INFO  20:45:50,761 - #49 x
INFO  20:45:50,761 - #32 <=
INFO  20:45:50,761 - #46 0
INFO  20:45:50,761 - #41 )
INFO  20:45:50,761 - #19 break
INFO  20:45:50,761 - #36 ;
INFO  20:45:50,761 - #16 if
INFO  20:45:50,761 - #40 (
INFO  20:45:50,761 - #46 0
INFO  20:45:50,761 - #32 <=
INFO  20:45:50,761 - #49 x
INFO  20:45:50,761 - #33 &&
INFO  20:45:50,761 - #49 x
INFO  20:45:50,761 - #31 <
INFO  20:45:50,761 - #49 tableSize
INFO  20:45:50,761 - #41 )
INFO  20:45:50,761 - #44 {
INFO  20:45:50,762 - #49 val
INFO  20:45:50,762 - #39 .
INFO  20:45:50,762 - #49 putp
INFO  20:45:50,762 - #40 (
INFO  20:45:50,762 - #49 val
INFO  20:45:50,762 - #39 .
INFO  20:45:50,762 - #49 getp
INFO  20:45:50,762 - #40 (
INFO  20:45:50,762 - #49 x
INFO  20:45:50,762 - #41 )
INFO  20:45:50,762 - #20 +
INFO  20:45:50,762 - #46 1
INFO  20:45:50,762 - #41 )
INFO  20:45:50,762 - #36 ;
INFO  20:45:50,762 - #45 }
INFO  20:45:50,762 - #17 else
INFO  20:45:50,762 - #16 if
INFO  20:45:50,762 - #40 (
INFO  20:45:50,762 - #21 -
INFO  20:45:50,762 - #49 tableSize
INFO  20:45:50,762 - #31 <
INFO  20:45:50,762 - #49 x
INFO  20:45:50,762 - #33 &&
INFO  20:45:50,762 - #49 x
INFO  20:45:50,762 - #31 <
INFO  20:45:50,762 - #46 0
INFO  20:45:50,762 - #41 )
INFO  20:45:50,762 - #44 {
INFO  20:45:50,762 - #49 val
INFO  20:45:50,762 - #39 .
INFO  20:45:50,762 - #49 putn
INFO  20:45:50,763 - #40 (
INFO  20:45:50,763 - #49 val
INFO  20:45:50,763 - #39 .
INFO  20:45:50,763 - #49 getn
INFO  20:45:50,763 - #40 (
INFO  20:45:50,763 - #21 -
INFO  20:45:50,763 - #49 x
INFO  20:45:50,763 - #41 )
INFO  20:45:50,763 - #20 +
INFO  20:45:50,763 - #46 1
INFO  20:45:50,763 - #41 )
INFO  20:45:50,763 - #36 ;
INFO  20:45:50,763 - #45 }
INFO  20:45:50,763 - #10 read
INFO  20:45:50,763 - #40 (
INFO  20:45:50,763 - #49 x
INFO  20:45:50,763 - #41 )
INFO  20:45:50,763 - #36 ;
INFO  20:45:50,763 - #45 }
INFO  20:45:50,763 - #15 while
INFO  20:45:50,763 - #40 (
INFO  20:45:50,763 - #41 )
INFO  20:45:50,763 - #36 ;
INFO  20:45:50,763 - #45 }
INFO  20:45:50,763 - #45 }
ERROR 20:45:50,763 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
