INFO  20:32:08,350 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  20:32:08,479 - #2 program
INFO  20:32:08,480 - #49 p
INFO  20:32:08,480 - #8 const
INFO  20:32:08,480 - #49 int
INFO  20:32:08,480 - #49 tableSize
INFO  20:32:08,481 - #35 =
INFO  20:32:08,481 - #46 10
INFO  20:32:08,481 - #36 ;
INFO  20:32:08,482 - #49 set
INFO  20:32:08,482 - #49 s1
INFO  20:32:08,482 - #36 ;
INFO  20:32:08,484 - #3 class
INFO  20:32:08,485 - #49 Table
INFO  20:32:08,485 - #44 {
INFO  20:32:08,486 - #49 int
INFO  20:32:08,487 - #49 pos
INFO  20:32:08,487 - #42 [
INFO  20:32:08,488 - #43 ]
INFO  20:32:08,488 - #38 ,
INFO  20:32:08,489 - #38 ,
ERROR 20:32:08,489 - 
Sintaksna greska na liniji 5, na koloni 10
INFO  20:32:08,490 - #49 neg
INFO  20:32:08,490 - #42 [
INFO  20:32:08,490 - #43 ]
INFO  20:32:08,494 - #38 ,
INFO  20:32:08,495 - #49 factor
INFO  20:32:08,495 - #36 ;
INFO  20:32:08,495 - #44 {
INFO  20:32:08,495 - #12 void
INFO  20:32:08,495 - #49 setfactor
INFO  20:32:08,495 - #40 (
INFO  20:32:08,495 - #49 int
INFO  20:32:08,495 - #49 factor
INFO  20:32:08,495 - #41 )
INFO  20:32:08,495 - #44 {
INFO  20:32:08,495 - #49 this
INFO  20:32:08,498 - #39 .
INFO  20:32:08,499 - #49 factor
INFO  20:32:08,499 - #35 =
INFO  20:32:08,499 - #49 factor
INFO  20:32:08,499 - #36 ;
INFO  20:32:08,499 - #45 }
INFO  20:32:08,499 - #12 void
INFO  20:32:08,499 - #49 putp
INFO  20:32:08,499 - #40 (
INFO  20:32:08,499 - #49 int
INFO  20:32:08,499 - #49 a
INFO  20:32:08,499 - #38 ,
INFO  20:32:08,500 - #49 int
INFO  20:32:08,500 - #49 idx
INFO  20:32:08,500 - #41 )
ERROR 20:32:08,500 - 
Sintaksna greska na liniji 8, na koloni 25
INFO  20:32:08,500 - #44 {
INFO  20:32:08,500 - #49 this
INFO  20:32:08,500 - #39 .
INFO  20:32:08,500 - #49 pos
INFO  20:32:08,500 - #42 [
INFO  20:32:08,500 - #49 idx
INFO  20:32:08,501 - #43 ]
INFO  20:32:08,501 - #35 =
INFO  20:32:08,501 - #49 a
INFO  20:32:08,501 - #36 ;
INFO  20:32:08,501 - #45 }
INFO  20:32:08,501 - #12 void
INFO  20:32:08,501 - #49 putn
INFO  20:32:08,501 - #40 (
INFO  20:32:08,501 - #49 int
INFO  20:32:08,501 - #49 a
INFO  20:32:08,501 - #38 ,
INFO  20:32:08,502 - #49 int
INFO  20:32:08,502 - #49 idx
INFO  20:32:08,502 - #41 )
ERROR 20:32:08,502 - 
Sintaksna greska na liniji 9, na koloni 26
INFO  20:32:08,502 - #44 {
INFO  20:32:08,502 - #49 this
INFO  20:32:08,502 - #39 .
INFO  20:32:08,502 - #49 neg
INFO  20:32:08,502 - #42 [
INFO  20:32:08,502 - #49 idx
INFO  20:32:08,503 - #43 ]
INFO  20:32:08,503 - #35 =
INFO  20:32:08,503 - #49 a
INFO  20:32:08,503 - #36 ;
INFO  20:32:08,503 - #45 }
INFO  20:32:08,503 - #49 int
INFO  20:32:08,503 - #49 getp
INFO  20:32:08,503 - #40 (
INFO  20:32:08,503 - #49 int
INFO  20:32:08,503 - #49 idx
INFO  20:32:08,503 - #41 )
INFO  20:32:08,503 - #44 {
INFO  20:32:08,503 - #13 return
INFO  20:32:08,504 - #49 pos
INFO  20:32:08,504 - #42 [
INFO  20:32:08,504 - #49 idx
INFO  20:32:08,504 - #43 ]
INFO  20:32:08,504 - #36 ;
INFO  20:32:08,504 - #45 }
INFO  20:32:08,504 - #49 int
INFO  20:32:08,504 - #49 getn
INFO  20:32:08,504 - #40 (
INFO  20:32:08,504 - #49 int
INFO  20:32:08,504 - #49 idx
INFO  20:32:08,504 - #41 )
INFO  20:32:08,504 - #44 {
INFO  20:32:08,505 - #13 return
INFO  20:32:08,505 - #49 neg
INFO  20:32:08,505 - #42 [
INFO  20:32:08,505 - #49 idx
INFO  20:32:08,505 - #43 ]
INFO  20:32:08,505 - #36 ;
INFO  20:32:08,505 - #45 }
INFO  20:32:08,505 - #45 }
INFO  20:32:08,505 - #45 }
INFO  20:32:08,505 - #49 Table
INFO  20:32:08,505 - #49 val
INFO  20:32:08,506 - #36 ;
INFO  20:32:08,506 - #49 int
INFO  20:32:08,506 - #49 rows
INFO  20:32:08,506 - #38 ,
INFO  20:32:08,506 - #49 columns
INFO  20:32:08,506 - #36 ;
INFO  20:32:08,506 - #44 {
INFO  20:32:08,506 - #12 void
INFO  20:32:08,506 - #49 f
INFO  20:32:08,506 - #40 (
INFO  20:32:08,506 - #49 char
INFO  20:32:08,506 - #49 ch
INFO  20:32:08,506 - #38 ,
INFO  20:32:08,507 - #49 int
INFO  20:32:08,507 - #49 a
INFO  20:32:08,507 - #38 ,
INFO  20:32:08,507 - #49 int
INFO  20:32:08,507 - #49 arg
ERROR 20:32:08,507 - 
Sintaksna greska na liniji 17, na koloni 27
INFO  20:32:08,507 - #41 )
INFO  20:32:08,507 - #49 int
INFO  20:32:08,507 - #49 x
INFO  20:32:08,507 - #36 ;
INFO  20:32:08,507 - #44 {
INFO  20:32:08,507 - #49 x
INFO  20:32:08,507 - #35 =
INFO  20:32:08,507 - #49 arg
INFO  20:32:08,507 - #36 ;
INFO  20:32:08,507 - #45 }
INFO  20:32:08,507 - #12 void
INFO  20:32:08,508 - #49 main
INFO  20:32:08,508 - #40 (
INFO  20:32:08,508 - #41 )
INFO  20:32:08,508 - #49 int
INFO  20:32:08,508 - #49 x
INFO  20:32:08,508 - #38 ,
INFO  20:32:08,508 - #49 i
INFO  20:32:08,508 - #36 ;
INFO  20:32:08,508 - #49 char
INFO  20:32:08,508 - #49 c
INFO  20:32:08,508 - #36 ;
INFO  20:32:08,508 - #49 int
INFO  20:32:08,508 - #49 arr
INFO  20:32:08,508 - #42 [
INFO  20:32:08,508 - #43 ]
INFO  20:32:08,509 - #36 ;
INFO  20:32:08,509 - #44 {
INFO  20:32:08,509 - #49 val
INFO  20:32:08,509 - #35 =
INFO  20:32:08,509 - #11 new
INFO  20:32:08,509 - #49 Table
INFO  20:32:08,509 - #40 (
INFO  20:32:08,509 - #41 )
INFO  20:32:08,509 - #36 ;
INFO  20:32:08,509 - #49 val
INFO  20:32:08,509 - #39 .
INFO  20:32:08,509 - #49 setfactor
INFO  20:32:08,509 - #40 (
INFO  20:32:08,509 - #46 2
INFO  20:32:08,509 - #41 )
INFO  20:32:08,510 - #36 ;
INFO  20:32:08,510 - #49 s1
INFO  20:32:08,510 - #35 =
INFO  20:32:08,510 - #11 new
INFO  20:32:08,510 - #49 set
INFO  20:32:08,510 - #42 [
INFO  20:32:08,511 - #46 5
INFO  20:32:08,511 - #43 ]
INFO  20:32:08,511 - #36 ;
INFO  20:32:08,511 - #49 s1
INFO  20:32:08,511 - #39 .
INFO  20:32:08,511 - #49 add
INFO  20:32:08,511 - #40 (
INFO  20:32:08,511 - #46 5
INFO  20:32:08,512 - #41 )
INFO  20:32:08,512 - #36 ;
INFO  20:32:08,512 - #49 s1
INFO  20:32:08,512 - #39 .
INFO  20:32:08,512 - #49 add
INFO  20:32:08,512 - #40 (
INFO  20:32:08,512 - #46 10
INFO  20:32:08,512 - #41 )
INFO  20:32:08,512 - #36 ;
INFO  20:32:08,512 - #9 print
INFO  20:32:08,512 - #40 (
INFO  20:32:08,512 - #49 s1
INFO  20:32:08,512 - #41 )
INFO  20:32:08,512 - #36 ;
INFO  20:32:08,512 - #49 arr
INFO  20:32:08,512 - #35 =
INFO  20:32:08,513 - #11 new
INFO  20:32:08,513 - #49 int
INFO  20:32:08,513 - #42 [
INFO  20:32:08,513 - #46 3
INFO  20:32:08,513 - #43 ]
INFO  20:32:08,513 - #36 ;
INFO  20:32:08,513 - #49 i
INFO  20:32:08,513 - #35 =
INFO  20:32:08,513 - #46 0
INFO  20:32:08,513 - #36 ;
INFO  20:32:08,513 - #14 do
INFO  20:32:08,513 - #49 arr
INFO  20:32:08,513 - #42 [
INFO  20:32:08,513 - #49 i
INFO  20:32:08,513 - #43 ]
INFO  20:32:08,513 - #35 =
INFO  20:32:08,513 - #49 i
INFO  20:32:08,514 - #36 ;
INFO  20:32:08,514 - #15 while
INFO  20:32:08,514 - #40 (
INFO  20:32:08,514 - #49 i
INFO  20:32:08,514 - #31 <
INFO  20:32:08,514 - #46 3
INFO  20:32:08,514 - #38 ,
INFO  20:32:08,514 - #49 i
INFO  20:32:08,514 - #25 ++
INFO  20:32:08,514 - #41 )
INFO  20:32:08,514 - #36 ;
INFO  20:32:08,514 - #49 i
INFO  20:32:08,514 - #35 =
INFO  20:32:08,514 - #46 0
INFO  20:32:08,514 - #36 ;
INFO  20:32:08,514 - #14 do
INFO  20:32:08,515 - #9 print
INFO  20:32:08,515 - #40 (
INFO  20:32:08,515 - #49 arr
INFO  20:32:08,515 - #42 [
INFO  20:32:08,515 - #49 i
INFO  20:32:08,515 - #43 ]
INFO  20:32:08,515 - #41 )
INFO  20:32:08,515 - #36 ;
INFO  20:32:08,515 - #15 while
INFO  20:32:08,515 - #40 (
INFO  20:32:08,515 - #49 i
INFO  20:32:08,515 - #31 <
INFO  20:32:08,515 - #46 3
INFO  20:32:08,515 - #38 ,
INFO  20:32:08,515 - #49 i
INFO  20:32:08,515 - #25 ++
INFO  20:32:08,516 - #41 )
INFO  20:32:08,516 - #36 ;
INFO  20:32:08,516 - #49 val
INFO  20:32:08,516 - #39 .
INFO  20:32:08,516 - #49 pos
INFO  20:32:08,516 - #35 =
INFO  20:32:08,516 - #11 new
INFO  20:32:08,516 - #49 int
INFO  20:32:08,516 - #42 [
INFO  20:32:08,516 - #49 tableSize
INFO  20:32:08,516 - #43 ]
INFO  20:32:08,516 - #36 ;
INFO  20:32:08,516 - #49 val
INFO  20:32:08,516 - #39 .
INFO  20:32:08,517 - #49 neg
INFO  20:32:08,517 - #35 =
INFO  20:32:08,517 - #11 new
INFO  20:32:08,517 - #49 int
INFO  20:32:08,517 - #42 [
INFO  20:32:08,517 - #49 tableSize
INFO  20:32:08,517 - #43 ]
INFO  20:32:08,517 - #36 ;
INFO  20:32:08,517 - #10 read
INFO  20:32:08,517 - #40 (
INFO  20:32:08,517 - #49 x
INFO  20:32:08,517 - #41 )
INFO  20:32:08,517 - #36 ;
INFO  20:32:08,517 - #49 i
INFO  20:32:08,517 - #35 =
INFO  20:32:08,517 - #46 0
INFO  20:32:08,517 - #36 ;
INFO  20:32:08,517 - #14 do
INFO  20:32:08,517 - #44 {
INFO  20:32:08,517 - #49 val
INFO  20:32:08,517 - #39 .
INFO  20:32:08,517 - #49 putp
INFO  20:32:08,517 - #40 (
INFO  20:32:08,517 - #46 0
INFO  20:32:08,517 - #38 ,
INFO  20:32:08,518 - #49 i
INFO  20:32:08,518 - #41 )
INFO  20:32:08,518 - #36 ;
INFO  20:32:08,518 - #49 val
INFO  20:32:08,518 - #39 .
INFO  20:32:08,518 - #49 putn
INFO  20:32:08,518 - #40 (
INFO  20:32:08,518 - #46 0
INFO  20:32:08,518 - #38 ,
INFO  20:32:08,518 - #49 i
INFO  20:32:08,518 - #41 )
INFO  20:32:08,518 - #36 ;
INFO  20:32:08,518 - #45 }
INFO  20:32:08,518 - #15 while
INFO  20:32:08,518 - #40 (
INFO  20:32:08,519 - #49 i
INFO  20:32:08,519 - #31 <
INFO  20:32:08,519 - #49 tableSize
INFO  20:32:08,519 - #38 ,
INFO  20:32:08,519 - #49 i
INFO  20:32:08,519 - #25 ++
INFO  20:32:08,519 - #41 )
INFO  20:32:08,519 - #36 ;
INFO  20:32:08,519 - #49 f
INFO  20:32:08,519 - #40 (
INFO  20:32:08,519 - #49 c
INFO  20:32:08,519 - #38 ,
INFO  20:32:08,519 - #49 x
INFO  20:32:08,519 - #38 ,
INFO  20:32:08,519 - #49 i
INFO  20:32:08,519 - #41 )
INFO  20:32:08,519 - #36 ;
INFO  20:32:08,519 - #10 read
INFO  20:32:08,519 - #40 (
INFO  20:32:08,519 - #49 rows
INFO  20:32:08,520 - #41 )
INFO  20:32:08,520 - #36 ;
INFO  20:32:08,520 - #49 x
INFO  20:32:08,520 - #35 =
INFO  20:32:08,520 - #49 rows
INFO  20:32:08,520 - #36 ;
INFO  20:32:08,520 - #14 do
INFO  20:32:08,520 - #44 {
INFO  20:32:08,520 - #16 if
INFO  20:32:08,520 - #40 (
INFO  20:32:08,520 - #49 x
INFO  20:32:08,520 - #32 <=
INFO  20:32:08,520 - #46 0
INFO  20:32:08,520 - #41 )
INFO  20:32:08,520 - #19 break
INFO  20:32:08,520 - #36 ;
INFO  20:32:08,520 - #16 if
INFO  20:32:08,520 - #40 (
INFO  20:32:08,520 - #46 0
INFO  20:32:08,520 - #32 <=
INFO  20:32:08,520 - #49 x
INFO  20:32:08,520 - #33 &&
INFO  20:32:08,520 - #49 x
INFO  20:32:08,520 - #31 <
INFO  20:32:08,521 - #49 tableSize
INFO  20:32:08,521 - #41 )
INFO  20:32:08,521 - #44 {
INFO  20:32:08,521 - #49 val
INFO  20:32:08,521 - #39 .
INFO  20:32:08,521 - #49 putp
INFO  20:32:08,521 - #40 (
INFO  20:32:08,521 - #49 val
INFO  20:32:08,521 - #39 .
INFO  20:32:08,521 - #49 getp
INFO  20:32:08,521 - #40 (
INFO  20:32:08,521 - #49 x
INFO  20:32:08,521 - #41 )
INFO  20:32:08,521 - #20 +
INFO  20:32:08,521 - #46 1
INFO  20:32:08,521 - #41 )
INFO  20:32:08,521 - #36 ;
INFO  20:32:08,521 - #45 }
INFO  20:32:08,521 - #17 else
INFO  20:32:08,521 - #16 if
INFO  20:32:08,521 - #40 (
INFO  20:32:08,521 - #21 -
INFO  20:32:08,521 - #49 tableSize
INFO  20:32:08,521 - #31 <
INFO  20:32:08,521 - #49 x
INFO  20:32:08,522 - #33 &&
INFO  20:32:08,522 - #49 x
INFO  20:32:08,522 - #31 <
INFO  20:32:08,522 - #46 0
INFO  20:32:08,522 - #41 )
INFO  20:32:08,522 - #44 {
INFO  20:32:08,522 - #49 val
INFO  20:32:08,522 - #39 .
INFO  20:32:08,522 - #49 putn
INFO  20:32:08,522 - #40 (
INFO  20:32:08,522 - #49 val
INFO  20:32:08,522 - #39 .
INFO  20:32:08,522 - #49 getn
INFO  20:32:08,522 - #40 (
INFO  20:32:08,522 - #21 -
INFO  20:32:08,522 - #49 x
INFO  20:32:08,522 - #41 )
INFO  20:32:08,522 - #20 +
INFO  20:32:08,522 - #46 1
INFO  20:32:08,522 - #41 )
INFO  20:32:08,522 - #36 ;
INFO  20:32:08,522 - #45 }
INFO  20:32:08,522 - #10 read
INFO  20:32:08,522 - #40 (
INFO  20:32:08,522 - #49 x
INFO  20:32:08,523 - #41 )
INFO  20:32:08,523 - #36 ;
INFO  20:32:08,523 - #45 }
INFO  20:32:08,523 - #15 while
INFO  20:32:08,523 - #40 (
INFO  20:32:08,523 - #41 )
INFO  20:32:08,523 - #36 ;
INFO  20:32:08,523 - #45 }
INFO  20:32:08,523 - #45 }
ERROR 20:32:08,523 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
