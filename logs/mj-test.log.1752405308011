INFO  13:14:27,702 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:14:27,911 - #2 program
INFO  13:14:27,911 - #49 prog
INFO  13:14:27,912 - #8 const
INFO  13:14:27,916 - #49 int
INFO  13:14:27,916 - #49 tableSize
INFO  13:14:27,918 - #35 =
INFO  13:14:27,919 - #46 10
INFO  13:14:27,919 - #38 ,
INFO  13:14:27,922 - #49 c
INFO  13:14:27,923 - #35 =
INFO  13:14:27,924 - #46 3
INFO  13:14:27,924 - #38 ,
INFO  13:14:27,924 - #49 d
INFO  13:14:27,924 - #35 =
INFO  13:14:27,925 - #46 5
INFO  13:14:27,925 - #36 ;
INFO  13:14:27,925 - #8 const
INFO  13:14:27,928 - #49 bool
INFO  13:14:27,929 - #49 a
INFO  13:14:27,929 - #35 =
INFO  13:14:27,930 - #47 true
INFO  13:14:27,931 - #38 ,
INFO  13:14:27,931 - #49 b
INFO  13:14:27,931 - #35 =
INFO  13:14:27,931 - #47 false
INFO  13:14:27,931 - #36 ;
INFO  13:14:27,931 - #8 const
INFO  13:14:27,931 - #49 char
INFO  13:14:27,931 - #49 f
INFO  13:14:27,932 - #35 =
INFO  13:14:27,932 - #48 a
INFO  13:14:27,933 - #36 ;
INFO  13:14:27,933 - #49 int
INFO  13:14:27,933 - #49 arr
INFO  13:14:27,933 - #42 [
INFO  13:14:27,933 - #43 ]
INFO  13:14:27,938 - #38 ,
INFO  13:14:27,942 - #49 i
INFO  13:14:27,943 - #36 ;
INFO  13:14:27,944 - #49 int
INFO  13:14:27,945 - #49 aa
INFO  13:14:27,946 - #38 ,
INFO  13:14:27,946 - #49 bb
INFO  13:14:27,946 - #38 ,
INFO  13:14:27,946 - #49 cc
INFO  13:14:27,947 - #38 ,
INFO  13:14:27,947 - #49 dd
INFO  13:14:27,947 - #36 ;
INFO  13:14:27,947 - #49 bool
INFO  13:14:27,948 - #49 o
INFO  13:14:27,948 - #38 ,
INFO  13:14:27,948 - #49 g
INFO  13:14:27,948 - #38 ,
INFO  13:14:27,948 - #49 h
INFO  13:14:27,949 - #36 ;
INFO  13:14:27,949 - #49 char
INFO  13:14:27,949 - #49 n
INFO  13:14:27,949 - #38 ,
INFO  13:14:27,949 - #49 j
INFO  13:14:27,949 - #38 ,
INFO  13:14:27,950 - #49 k
INFO  13:14:27,950 - #36 ;
INFO  13:14:27,950 - #44 {
INFO  13:14:27,950 - #12 void
INFO  13:14:27,952 - #49 fa
INFO  13:14:27,954 - #40 (
INFO  13:14:27,956 - #49 char
INFO  13:14:27,956 - #49 ch
INFO  13:14:27,956 - #38 ,
INFO  13:14:27,958 - #49 int
INFO  13:14:27,958 - #49 arg
INFO  13:14:27,958 - #41 )
INFO  13:14:27,958 - #49 int
INFO  13:14:27,961 - #49 c
INFO  13:14:27,961 - #36 ;
INFO  13:14:27,961 - #44 {
INFO  13:14:27,963 - #49 x
INFO  13:14:27,965 - #35 =
INFO  13:14:27,969 - #49 arg
INFO  13:14:27,972 - #39 .
INFO  13:14:27,972 - #49 a
INFO  13:14:27,973 - #39 .
INFO  13:14:27,973 - #49 b
INFO  13:14:27,973 - #39 .
INFO  13:14:27,973 - #49 c
INFO  13:14:27,973 - #36 ;
INFO  13:14:27,983 - #49 x
INFO  13:14:27,984 - #35 =
INFO  13:14:27,984 - #49 arr
INFO  13:14:27,984 - #42 [
INFO  13:14:27,985 - #46 1
INFO  13:14:27,985 - #43 ]
INFO  13:14:27,985 - #36 ;
INFO  13:14:27,985 - #14 do
INFO  13:14:27,985 - #44 {
INFO  13:14:27,988 - #19 break
INFO  13:14:27,988 - #36 ;
INFO  13:14:27,988 - #45 }
INFO  13:14:27,990 - #15 while
INFO  13:14:27,991 - #40 (
INFO  13:14:27,991 - #49 i
INFO  13:14:27,991 - #31 <
INFO  13:14:27,992 - #49 tableSize
INFO  13:14:27,995 - #38 ,
INFO  13:14:28,001 - #49 i
INFO  13:14:28,001 - #25 ++
INFO  13:14:28,001 - #41 )
INFO  13:14:28,003 - #36 ;
INFO  13:14:28,003 - #45 }
INFO  13:14:28,005 - #12 void
INFO  13:14:28,006 - #49 fa2
INFO  13:14:28,007 - #40 (
INFO  13:14:28,007 - #49 char
INFO  13:14:28,007 - #49 ch
INFO  13:14:28,007 - #38 ,
INFO  13:14:28,007 - #49 int
INFO  13:14:28,007 - #49 j
INFO  13:14:28,007 - #42 [
INFO  13:14:28,007 - #43 ]
INFO  13:14:28,007 - #38 ,
INFO  13:14:28,007 - #49 int
INFO  13:14:28,007 - #49 arg
INFO  13:14:28,008 - #41 )
INFO  13:14:28,008 - #49 int
INFO  13:14:28,008 - #49 c
INFO  13:14:28,008 - #36 ;
INFO  13:14:28,008 - #44 {
INFO  13:14:28,009 - #49 x
INFO  13:14:28,009 - #35 =
INFO  13:14:28,009 - #49 arg
INFO  13:14:28,009 - #39 .
INFO  13:14:28,009 - #49 a
INFO  13:14:28,009 - #39 .
INFO  13:14:28,009 - #49 b
INFO  13:14:28,009 - #39 .
INFO  13:14:28,009 - #49 c
INFO  13:14:28,009 - #36 ;
INFO  13:14:28,010 - #49 x
INFO  13:14:28,010 - #35 =
INFO  13:14:28,010 - #49 arr
INFO  13:14:28,010 - #42 [
INFO  13:14:28,010 - #46 1
INFO  13:14:28,010 - #43 ]
INFO  13:14:28,010 - #36 ;
INFO  13:14:28,011 - #14 do
INFO  13:14:28,011 - #44 {
INFO  13:14:28,011 - #19 break
INFO  13:14:28,011 - #36 ;
INFO  13:14:28,011 - #45 }
INFO  13:14:28,011 - #15 while
INFO  13:14:28,011 - #40 (
INFO  13:14:28,011 - #49 i
INFO  13:14:28,011 - #31 <
INFO  13:14:28,011 - #49 tableSize
INFO  13:14:28,012 - #38 ,
INFO  13:14:28,012 - #49 i
INFO  13:14:28,012 - #25 ++
INFO  13:14:28,012 - #41 )
INFO  13:14:28,012 - #36 ;
INFO  13:14:28,012 - #45 }
INFO  13:14:28,012 - #12 void
INFO  13:14:28,012 - #49 main
INFO  13:14:28,012 - #40 (
INFO  13:14:28,012 - #41 )
INFO  13:14:28,013 - #49 int
INFO  13:14:28,014 - #49 b
INFO  13:14:28,015 - #42 [
INFO  13:14:28,015 - #43 ]
INFO  13:14:28,015 - #36 ;
INFO  13:14:28,015 - #44 {
INFO  13:14:28,015 - #9 print
INFO  13:14:28,015 - #40 (
INFO  13:14:28,015 - #49 b
INFO  13:14:28,015 - #42 [
INFO  13:14:28,016 - #49 b
INFO  13:14:28,016 - #42 [
INFO  13:14:28,016 - #43 ]
ERROR 13:14:28,016 - 
Sintaksna greska na liniji 37, na koloni 18
INFO  13:14:28,016 - #43 ]
INFO  13:14:28,016 - #41 )
INFO  13:14:28,016 - #36 ;
INFO  13:14:28,017 - #45 }
INFO  13:14:28,018 - #45 }
ERROR 13:14:28,018 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39, na koloni 1
