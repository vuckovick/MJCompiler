INFO  13:03:36,060 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:03:36,306 - #2 program
INFO  13:03:36,307 - #49 prog
INFO  13:03:36,307 - #8 const
INFO  13:03:36,311 - #49 int
INFO  13:03:36,311 - #49 tableSize
INFO  13:03:36,313 - #35 =
INFO  13:03:36,314 - #46 10
INFO  13:03:36,314 - #38 ,
INFO  13:03:36,316 - #49 c
INFO  13:03:36,316 - #35 =
INFO  13:03:36,316 - #46 3
INFO  13:03:36,316 - #38 ,
INFO  13:03:36,317 - #49 d
INFO  13:03:36,317 - #35 =
INFO  13:03:36,317 - #46 5
INFO  13:03:36,317 - #36 ;
INFO  13:03:36,317 - #8 const
INFO  13:03:36,320 - #49 bool
INFO  13:03:36,320 - #49 a
INFO  13:03:36,320 - #35 =
INFO  13:03:36,320 - #47 true
INFO  13:03:36,320 - #38 ,
INFO  13:03:36,321 - #49 b
INFO  13:03:36,321 - #35 =
INFO  13:03:36,321 - #47 false
INFO  13:03:36,321 - #36 ;
INFO  13:03:36,321 - #8 const
INFO  13:03:36,321 - #49 char
INFO  13:03:36,321 - #49 f
INFO  13:03:36,321 - #35 =
INFO  13:03:36,322 - #48 a
INFO  13:03:36,322 - #36 ;
INFO  13:03:36,322 - #49 int
INFO  13:03:36,323 - #49 arr
INFO  13:03:36,323 - #42 [
INFO  13:03:36,323 - #43 ]
INFO  13:03:36,326 - #38 ,
INFO  13:03:36,331 - #49 i
INFO  13:03:36,331 - #36 ;
INFO  13:03:36,332 - #49 int
INFO  13:03:36,332 - #49 aa
INFO  13:03:36,333 - #38 ,
INFO  13:03:36,333 - #49 bb
INFO  13:03:36,333 - #38 ,
INFO  13:03:36,333 - #49 cc
INFO  13:03:36,333 - #38 ,
INFO  13:03:36,333 - #49 dd
INFO  13:03:36,334 - #36 ;
INFO  13:03:36,334 - #49 bool
INFO  13:03:36,334 - #49 o
INFO  13:03:36,334 - #38 ,
INFO  13:03:36,334 - #49 g
INFO  13:03:36,334 - #38 ,
INFO  13:03:36,334 - #49 h
INFO  13:03:36,334 - #36 ;
INFO  13:03:36,335 - #49 char
INFO  13:03:36,335 - #49 n
INFO  13:03:36,335 - #38 ,
INFO  13:03:36,335 - #49 j
INFO  13:03:36,335 - #38 ,
INFO  13:03:36,335 - #49 k
INFO  13:03:36,335 - #36 ;
INFO  13:03:36,335 - #44 {
INFO  13:03:36,336 - #12 void
INFO  13:03:36,337 - #49 fa
INFO  13:03:36,339 - #40 (
INFO  13:03:36,341 - #49 char
INFO  13:03:36,341 - #49 ch
INFO  13:03:36,341 - #38 ,
INFO  13:03:36,343 - #49 int
INFO  13:03:36,343 - #49 arg
INFO  13:03:36,343 - #41 )
INFO  13:03:36,343 - #49 int
INFO  13:03:36,346 - #49 c
INFO  13:03:36,346 - #36 ;
INFO  13:03:36,346 - #44 {
INFO  13:03:36,348 - #49 x
INFO  13:03:36,350 - #35 =
INFO  13:03:36,353 - #49 arg
INFO  13:03:36,355 - #39 .
INFO  13:03:36,355 - #49 a
INFO  13:03:36,356 - #39 .
INFO  13:03:36,356 - #49 b
INFO  13:03:36,356 - #39 .
INFO  13:03:36,356 - #49 c
INFO  13:03:36,356 - #36 ;
INFO  13:03:36,364 - #49 x
INFO  13:03:36,365 - #35 =
INFO  13:03:36,366 - #49 arr
INFO  13:03:36,366 - #42 [
INFO  13:03:36,366 - #46 1
INFO  13:03:36,366 - #43 ]
INFO  13:03:36,366 - #36 ;
INFO  13:03:36,366 - #14 do
INFO  13:03:36,366 - #44 {
INFO  13:03:36,368 - #19 break
INFO  13:03:36,368 - #36 ;
INFO  13:03:36,368 - #45 }
INFO  13:03:36,369 - #15 while
INFO  13:03:36,370 - #40 (
INFO  13:03:36,370 - #49 i
INFO  13:03:36,370 - #31 <
INFO  13:03:36,370 - #49 tableSize
INFO  13:03:36,372 - #38 ,
INFO  13:03:36,378 - #49 i
INFO  13:03:36,378 - #25 ++
INFO  13:03:36,378 - #41 )
INFO  13:03:36,380 - #36 ;
INFO  13:03:36,380 - #45 }
INFO  13:03:36,381 - #12 void
INFO  13:03:36,384 - #49 fa2
INFO  13:03:36,384 - #40 (
INFO  13:03:36,384 - #49 char
INFO  13:03:36,384 - #49 ch
INFO  13:03:36,384 - #38 ,
INFO  13:03:36,384 - #49 int
INFO  13:03:36,384 - #49 j
INFO  13:03:36,384 - #42 [
INFO  13:03:36,384 - #43 ]
INFO  13:03:36,384 - #38 ,
INFO  13:03:36,384 - #49 int
INFO  13:03:36,385 - #49 arg
INFO  13:03:36,385 - #41 )
INFO  13:03:36,385 - #49 int
INFO  13:03:36,385 - #49 c
INFO  13:03:36,385 - #36 ;
INFO  13:03:36,385 - #44 {
INFO  13:03:36,385 - #49 x
INFO  13:03:36,385 - #35 =
INFO  13:03:36,386 - #49 arg
INFO  13:03:36,386 - #39 .
INFO  13:03:36,386 - #49 a
INFO  13:03:36,386 - #39 .
INFO  13:03:36,386 - #49 b
INFO  13:03:36,386 - #39 .
INFO  13:03:36,386 - #49 c
INFO  13:03:36,386 - #36 ;
INFO  13:03:36,386 - #49 x
INFO  13:03:36,386 - #35 =
INFO  13:03:36,386 - #49 arr
INFO  13:03:36,386 - #42 [
INFO  13:03:36,387 - #46 1
INFO  13:03:36,387 - #43 ]
INFO  13:03:36,387 - #36 ;
INFO  13:03:36,387 - #14 do
INFO  13:03:36,387 - #44 {
INFO  13:03:36,387 - #19 break
INFO  13:03:36,387 - #36 ;
INFO  13:03:36,387 - #45 }
INFO  13:03:36,387 - #15 while
INFO  13:03:36,387 - #40 (
INFO  13:03:36,387 - #49 i
INFO  13:03:36,387 - #31 <
INFO  13:03:36,387 - #49 tableSize
INFO  13:03:36,387 - #38 ,
INFO  13:03:36,387 - #49 i
INFO  13:03:36,388 - #25 ++
INFO  13:03:36,388 - #41 )
INFO  13:03:36,388 - #36 ;
INFO  13:03:36,388 - #45 }
INFO  13:03:36,388 - #12 void
INFO  13:03:36,388 - #49 main
INFO  13:03:36,388 - #40 (
INFO  13:03:36,388 - #41 )
INFO  13:03:36,388 - #49 int
INFO  13:03:36,390 - #49 b
INFO  13:03:36,390 - #42 [
INFO  13:03:36,390 - #43 ]
INFO  13:03:36,390 - #36 ;
INFO  13:03:36,390 - #44 {
INFO  13:03:36,390 - #9 print
INFO  13:03:36,390 - #40 (
INFO  13:03:36,390 - #49 b
INFO  13:03:36,390 - #42 [
INFO  13:03:36,390 - #43 ]
ERROR 13:03:36,391 - 
Sintaksna greska na liniji 37, na koloni 16
INFO  13:03:36,391 - #41 )
INFO  13:03:36,391 - #36 ;
INFO  13:03:36,391 - #45 }
INFO  13:03:36,392 - #45 }
ERROR 13:03:36,392 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39, na koloni 1
