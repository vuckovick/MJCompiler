INFO  13:01:57,138 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:01:57,294 - #2 program
INFO  13:01:57,295 - #49 prog
INFO  13:01:57,295 - #8 const
INFO  13:01:57,298 - #49 int
INFO  13:01:57,299 - #49 tableSize
INFO  13:01:57,300 - #35 =
INFO  13:01:57,300 - #46 10
INFO  13:01:57,300 - #38 ,
INFO  13:01:57,302 - #49 c
INFO  13:01:57,302 - #35 =
INFO  13:01:57,303 - #46 3
INFO  13:01:57,303 - #38 ,
INFO  13:01:57,303 - #49 d
INFO  13:01:57,303 - #35 =
INFO  13:01:57,303 - #46 5
INFO  13:01:57,303 - #36 ;
INFO  13:01:57,303 - #8 const
INFO  13:01:57,305 - #49 bool
INFO  13:01:57,305 - #49 a
INFO  13:01:57,306 - #35 =
INFO  13:01:57,306 - #47 true
INFO  13:01:57,309 - #38 ,
INFO  13:01:57,309 - #49 b
INFO  13:01:57,309 - #35 =
INFO  13:01:57,309 - #47 false
INFO  13:01:57,309 - #36 ;
INFO  13:01:57,309 - #8 const
INFO  13:01:57,309 - #49 char
INFO  13:01:57,309 - #49 f
INFO  13:01:57,309 - #35 =
INFO  13:01:57,310 - #48 a
INFO  13:01:57,310 - #36 ;
INFO  13:01:57,310 - #49 int
INFO  13:01:57,310 - #49 arr
INFO  13:01:57,311 - #42 [
INFO  13:01:57,311 - #43 ]
INFO  13:01:57,314 - #38 ,
INFO  13:01:57,319 - #49 i
INFO  13:01:57,319 - #36 ;
INFO  13:01:57,320 - #49 int
INFO  13:01:57,321 - #49 aa
INFO  13:01:57,321 - #38 ,
INFO  13:01:57,322 - #49 bb
INFO  13:01:57,322 - #38 ,
INFO  13:01:57,322 - #49 cc
INFO  13:01:57,322 - #38 ,
INFO  13:01:57,322 - #49 dd
INFO  13:01:57,322 - #36 ;
INFO  13:01:57,323 - #49 bool
INFO  13:01:57,323 - #49 o
INFO  13:01:57,323 - #38 ,
INFO  13:01:57,323 - #49 g
INFO  13:01:57,324 - #38 ,
INFO  13:01:57,324 - #49 h
INFO  13:01:57,324 - #36 ;
INFO  13:01:57,324 - #49 char
INFO  13:01:57,325 - #49 n
INFO  13:01:57,325 - #38 ,
INFO  13:01:57,325 - #49 j
INFO  13:01:57,325 - #38 ,
INFO  13:01:57,325 - #49 k
INFO  13:01:57,325 - #36 ;
INFO  13:01:57,325 - #44 {
INFO  13:01:57,326 - #12 void
INFO  13:01:57,328 - #49 fa
INFO  13:01:57,329 - #40 (
INFO  13:01:57,331 - #49 char
INFO  13:01:57,331 - #49 ch
INFO  13:01:57,331 - #38 ,
INFO  13:01:57,333 - #49 int
INFO  13:01:57,333 - #49 arg
INFO  13:01:57,333 - #41 )
INFO  13:01:57,333 - #49 int
INFO  13:01:57,335 - #49 c
INFO  13:01:57,336 - #36 ;
INFO  13:01:57,336 - #44 {
INFO  13:01:57,338 - #49 x
INFO  13:01:57,341 - #35 =
INFO  13:01:57,344 - #49 arg
INFO  13:01:57,347 - #39 .
INFO  13:01:57,348 - #49 a
INFO  13:01:57,348 - #39 .
INFO  13:01:57,348 - #49 b
INFO  13:01:57,349 - #39 .
INFO  13:01:57,349 - #49 c
INFO  13:01:57,349 - #36 ;
INFO  13:01:57,357 - #49 x
INFO  13:01:57,358 - #35 =
INFO  13:01:57,358 - #49 arr
INFO  13:01:57,358 - #42 [
INFO  13:01:57,358 - #46 1
INFO  13:01:57,358 - #43 ]
INFO  13:01:57,359 - #36 ;
INFO  13:01:57,360 - #14 do
INFO  13:01:57,361 - #44 {
INFO  13:01:57,364 - #19 break
INFO  13:01:57,365 - #36 ;
INFO  13:01:57,365 - #45 }
INFO  13:01:57,366 - #15 while
INFO  13:01:57,367 - #40 (
INFO  13:01:57,367 - #49 i
INFO  13:01:57,367 - #31 <
INFO  13:01:57,367 - #49 tableSize
INFO  13:01:57,372 - #38 ,
INFO  13:01:57,380 - #49 i
INFO  13:01:57,380 - #25 ++
INFO  13:01:57,380 - #41 )
INFO  13:01:57,382 - #36 ;
INFO  13:01:57,382 - #45 }
INFO  13:01:57,383 - #12 void
INFO  13:01:57,386 - #49 fa2
INFO  13:01:57,386 - #40 (
INFO  13:01:57,386 - #49 char
INFO  13:01:57,386 - #49 ch
INFO  13:01:57,386 - #38 ,
INFO  13:01:57,386 - #49 int
INFO  13:01:57,386 - #49 j
INFO  13:01:57,386 - #42 [
INFO  13:01:57,386 - #43 ]
INFO  13:01:57,386 - #38 ,
INFO  13:01:57,387 - #49 int
INFO  13:01:57,387 - #49 arg
INFO  13:01:57,387 - #41 )
INFO  13:01:57,387 - #49 int
INFO  13:01:57,388 - #49 c
INFO  13:01:57,388 - #36 ;
INFO  13:01:57,388 - #44 {
INFO  13:01:57,388 - #49 x
INFO  13:01:57,388 - #35 =
INFO  13:01:57,388 - #49 arg
INFO  13:01:57,388 - #39 .
INFO  13:01:57,388 - #49 a
INFO  13:01:57,388 - #39 .
INFO  13:01:57,388 - #49 b
INFO  13:01:57,388 - #39 .
INFO  13:01:57,388 - #49 c
INFO  13:01:57,389 - #36 ;
INFO  13:01:57,389 - #49 x
INFO  13:01:57,389 - #35 =
INFO  13:01:57,389 - #49 arr
INFO  13:01:57,389 - #42 [
INFO  13:01:57,389 - #46 1
INFO  13:01:57,389 - #43 ]
INFO  13:01:57,389 - #36 ;
INFO  13:01:57,389 - #14 do
INFO  13:01:57,390 - #44 {
INFO  13:01:57,390 - #19 break
INFO  13:01:57,390 - #36 ;
INFO  13:01:57,390 - #45 }
INFO  13:01:57,390 - #15 while
INFO  13:01:57,390 - #40 (
INFO  13:01:57,390 - #49 i
INFO  13:01:57,390 - #31 <
INFO  13:01:57,390 - #49 tableSize
INFO  13:01:57,390 - #38 ,
INFO  13:01:57,390 - #49 i
INFO  13:01:57,390 - #25 ++
INFO  13:01:57,391 - #41 )
INFO  13:01:57,391 - #36 ;
INFO  13:01:57,391 - #45 }
INFO  13:01:57,391 - #12 void
INFO  13:01:57,392 - #49 main
INFO  13:01:57,392 - #40 (
INFO  13:01:57,392 - #41 )
INFO  13:01:57,392 - #49 int
INFO  13:01:57,394 - #49 b
INFO  13:01:57,395 - #42 [
INFO  13:01:57,395 - #43 ]
INFO  13:01:57,395 - #36 ;
INFO  13:01:57,395 - #44 {
INFO  13:01:57,396 - #9 print
INFO  13:01:57,396 - #40 (
INFO  13:01:57,396 - #49 b
INFO  13:01:57,396 - #42 [
INFO  13:01:57,396 - #42 [
ERROR 13:01:57,396 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  13:01:57,397 - #43 ]
INFO  13:01:57,397 - #43 ]
INFO  13:01:57,397 - #41 )
INFO  13:01:57,398 - #36 ;
INFO  13:01:57,398 - #45 }
INFO  13:01:57,398 - #45 }
ERROR 13:01:57,398 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
