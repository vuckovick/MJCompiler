INFO  20:32:05,645 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  20:32:05,832 - #2 program
INFO  20:32:05,832 - #49 p
INFO  20:32:05,833 - #8 const
INFO  20:32:05,834 - #49 int
INFO  20:32:05,834 - #49 tableSize
INFO  20:32:05,834 - #35 =
INFO  20:32:05,834 - #46 10
INFO  20:32:05,834 - #36 ;
INFO  20:32:05,836 - #49 set
INFO  20:32:05,836 - #49 s1
INFO  20:32:05,836 - #36 ;
INFO  20:32:05,841 - #3 class
INFO  20:32:05,841 - #49 Table
INFO  20:32:05,841 - #44 {
INFO  20:32:05,843 - #49 int
INFO  20:32:05,845 - #49 pos
INFO  20:32:05,845 - #42 [
INFO  20:32:05,845 - #43 ]
INFO  20:32:05,845 - #38 ,
INFO  20:32:05,846 - #38 ,
ERROR 20:32:05,846 - 
Sintaksna greska na liniji 5, na koloni 10
INFO  20:32:05,847 - #49 neg
INFO  20:32:05,847 - #42 [
INFO  20:32:05,847 - #43 ]
INFO  20:32:05,852 - #38 ,
INFO  20:32:05,852 - #49 factor
INFO  20:32:05,852 - #36 ;
INFO  20:32:05,852 - #44 {
INFO  20:32:05,852 - #12 void
INFO  20:32:05,852 - #49 setfactor
INFO  20:32:05,852 - #40 (
INFO  20:32:05,852 - #49 int
INFO  20:32:05,853 - #49 factor
INFO  20:32:05,853 - #41 )
INFO  20:32:05,853 - #44 {
INFO  20:32:05,853 - #49 this
INFO  20:32:05,856 - #39 .
INFO  20:32:05,857 - #49 factor
INFO  20:32:05,857 - #35 =
INFO  20:32:05,857 - #49 factor
INFO  20:32:05,857 - #36 ;
INFO  20:32:05,857 - #45 }
INFO  20:32:05,857 - #12 void
INFO  20:32:05,857 - #49 putp
INFO  20:32:05,857 - #40 (
INFO  20:32:05,857 - #49 int
INFO  20:32:05,857 - #49 a
INFO  20:32:05,857 - #38 ,
INFO  20:32:05,857 - #49 int
INFO  20:32:05,857 - #49 idx
INFO  20:32:05,859 - #41 )
ERROR 20:32:05,859 - 
Sintaksna greska na liniji 8, na koloni 25
INFO  20:32:05,859 - #44 {
INFO  20:32:05,859 - #49 this
INFO  20:32:05,859 - #39 .
INFO  20:32:05,859 - #49 pos
INFO  20:32:05,859 - #42 [
INFO  20:32:05,859 - #49 idx
INFO  20:32:05,860 - #43 ]
INFO  20:32:05,860 - #35 =
INFO  20:32:05,860 - #49 a
INFO  20:32:05,860 - #36 ;
INFO  20:32:05,860 - #45 }
INFO  20:32:05,860 - #12 void
INFO  20:32:05,860 - #49 putn
INFO  20:32:05,860 - #40 (
INFO  20:32:05,860 - #49 int
INFO  20:32:05,860 - #49 a
INFO  20:32:05,860 - #38 ,
INFO  20:32:05,860 - #49 int
INFO  20:32:05,860 - #49 idx
INFO  20:32:05,860 - #41 )
ERROR 20:32:05,860 - 
Sintaksna greska na liniji 9, na koloni 26
INFO  20:32:05,860 - #44 {
INFO  20:32:05,860 - #49 this
INFO  20:32:05,861 - #39 .
INFO  20:32:05,861 - #49 neg
INFO  20:32:05,861 - #42 [
INFO  20:32:05,861 - #49 idx
INFO  20:32:05,861 - #43 ]
INFO  20:32:05,861 - #35 =
INFO  20:32:05,861 - #49 a
INFO  20:32:05,861 - #36 ;
INFO  20:32:05,861 - #45 }
INFO  20:32:05,861 - #49 int
INFO  20:32:05,861 - #49 getp
INFO  20:32:05,861 - #40 (
INFO  20:32:05,861 - #49 int
INFO  20:32:05,862 - #49 idx
INFO  20:32:05,862 - #41 )
INFO  20:32:05,862 - #44 {
INFO  20:32:05,862 - #13 return
INFO  20:32:05,862 - #49 pos
INFO  20:32:05,862 - #42 [
INFO  20:32:05,862 - #49 idx
INFO  20:32:05,862 - #43 ]
INFO  20:32:05,862 - #36 ;
INFO  20:32:05,862 - #45 }
INFO  20:32:05,862 - #49 int
INFO  20:32:05,862 - #49 getn
INFO  20:32:05,863 - #40 (
INFO  20:32:05,863 - #49 int
INFO  20:32:05,863 - #49 idx
INFO  20:32:05,863 - #41 )
INFO  20:32:05,863 - #44 {
INFO  20:32:05,863 - #13 return
INFO  20:32:05,863 - #49 neg
INFO  20:32:05,863 - #42 [
INFO  20:32:05,863 - #49 idx
INFO  20:32:05,863 - #43 ]
INFO  20:32:05,863 - #36 ;
INFO  20:32:05,863 - #45 }
INFO  20:32:05,864 - #45 }
INFO  20:32:05,864 - #45 }
INFO  20:32:05,864 - #49 Table
INFO  20:32:05,864 - #49 val
INFO  20:32:05,864 - #36 ;
INFO  20:32:05,864 - #49 int
INFO  20:32:05,864 - #49 rows
INFO  20:32:05,864 - #38 ,
INFO  20:32:05,864 - #49 columns
INFO  20:32:05,864 - #36 ;
INFO  20:32:05,864 - #44 {
INFO  20:32:05,864 - #12 void
INFO  20:32:05,865 - #49 f
INFO  20:32:05,865 - #40 (
INFO  20:32:05,865 - #49 char
INFO  20:32:05,865 - #49 ch
INFO  20:32:05,865 - #38 ,
INFO  20:32:05,865 - #49 int
INFO  20:32:05,865 - #49 a
INFO  20:32:05,865 - #38 ,
INFO  20:32:05,865 - #49 int
INFO  20:32:05,865 - #49 arg
ERROR 20:32:05,865 - 
Sintaksna greska na liniji 17, na koloni 27
INFO  20:32:05,865 - #41 )
INFO  20:32:05,866 - #49 int
INFO  20:32:05,866 - #49 x
INFO  20:32:05,866 - #36 ;
INFO  20:32:05,866 - #44 {
INFO  20:32:05,866 - #49 x
INFO  20:32:05,866 - #35 =
INFO  20:32:05,866 - #49 arg
INFO  20:32:05,866 - #36 ;
INFO  20:32:05,866 - #45 }
INFO  20:32:05,866 - #12 void
INFO  20:32:05,866 - #49 main
INFO  20:32:05,866 - #40 (
INFO  20:32:05,866 - #41 )
INFO  20:32:05,866 - #49 int
INFO  20:32:05,867 - #49 x
INFO  20:32:05,867 - #38 ,
INFO  20:32:05,867 - #49 i
INFO  20:32:05,867 - #36 ;
INFO  20:32:05,867 - #49 char
INFO  20:32:05,867 - #49 c
INFO  20:32:05,867 - #36 ;
INFO  20:32:05,867 - #49 int
INFO  20:32:05,867 - #49 arr
INFO  20:32:05,867 - #42 [
INFO  20:32:05,867 - #43 ]
INFO  20:32:05,867 - #36 ;
INFO  20:32:05,867 - #44 {
INFO  20:32:05,867 - #49 val
INFO  20:32:05,867 - #35 =
INFO  20:32:05,867 - #11 new
INFO  20:32:05,867 - #49 Table
INFO  20:32:05,867 - #40 (
INFO  20:32:05,867 - #41 )
INFO  20:32:05,869 - #36 ;
INFO  20:32:05,869 - #49 val
INFO  20:32:05,869 - #39 .
INFO  20:32:05,869 - #49 setfactor
INFO  20:32:05,869 - #40 (
INFO  20:32:05,869 - #46 2
INFO  20:32:05,869 - #41 )
INFO  20:32:05,869 - #36 ;
INFO  20:32:05,869 - #49 s1
INFO  20:32:05,869 - #35 =
INFO  20:32:05,869 - #11 new
INFO  20:32:05,870 - #49 set
INFO  20:32:05,870 - #42 [
INFO  20:32:05,870 - #46 5
INFO  20:32:05,870 - #43 ]
INFO  20:32:05,870 - #36 ;
INFO  20:32:05,870 - #49 s1
INFO  20:32:05,870 - #39 .
INFO  20:32:05,870 - #49 add
INFO  20:32:05,870 - #40 (
INFO  20:32:05,870 - #46 5
INFO  20:32:05,870 - #41 )
INFO  20:32:05,870 - #36 ;
INFO  20:32:05,870 - #49 s1
INFO  20:32:05,870 - #39 .
INFO  20:32:05,870 - #49 add
INFO  20:32:05,871 - #40 (
INFO  20:32:05,871 - #46 10
INFO  20:32:05,871 - #41 )
INFO  20:32:05,871 - #36 ;
INFO  20:32:05,871 - #9 print
INFO  20:32:05,871 - #40 (
INFO  20:32:05,871 - #49 s1
INFO  20:32:05,871 - #41 )
INFO  20:32:05,871 - #36 ;
INFO  20:32:05,871 - #49 arr
INFO  20:32:05,871 - #35 =
INFO  20:32:05,871 - #11 new
INFO  20:32:05,871 - #49 int
INFO  20:32:05,871 - #42 [
INFO  20:32:05,871 - #46 3
INFO  20:32:05,871 - #43 ]
INFO  20:32:05,872 - #36 ;
INFO  20:32:05,872 - #49 i
INFO  20:32:05,872 - #35 =
INFO  20:32:05,872 - #46 0
INFO  20:32:05,872 - #36 ;
INFO  20:32:05,872 - #14 do
INFO  20:32:05,872 - #49 arr
INFO  20:32:05,872 - #42 [
INFO  20:32:05,872 - #49 i
INFO  20:32:05,872 - #43 ]
INFO  20:32:05,872 - #35 =
INFO  20:32:05,872 - #49 i
INFO  20:32:05,872 - #36 ;
INFO  20:32:05,872 - #15 while
INFO  20:32:05,872 - #40 (
INFO  20:32:05,872 - #49 i
INFO  20:32:05,872 - #31 <
INFO  20:32:05,873 - #46 3
INFO  20:32:05,873 - #38 ,
INFO  20:32:05,873 - #49 i
INFO  20:32:05,873 - #25 ++
INFO  20:32:05,873 - #41 )
INFO  20:32:05,873 - #36 ;
INFO  20:32:05,873 - #49 i
INFO  20:32:05,873 - #35 =
INFO  20:32:05,873 - #46 0
INFO  20:32:05,873 - #36 ;
INFO  20:32:05,873 - #14 do
INFO  20:32:05,873 - #9 print
INFO  20:32:05,873 - #40 (
INFO  20:32:05,873 - #49 arr
INFO  20:32:05,873 - #42 [
INFO  20:32:05,873 - #49 i
INFO  20:32:05,873 - #43 ]
INFO  20:32:05,873 - #41 )
INFO  20:32:05,874 - #36 ;
INFO  20:32:05,874 - #15 while
INFO  20:32:05,874 - #40 (
INFO  20:32:05,874 - #49 i
INFO  20:32:05,874 - #31 <
INFO  20:32:05,874 - #46 3
INFO  20:32:05,874 - #38 ,
INFO  20:32:05,874 - #49 i
INFO  20:32:05,874 - #25 ++
INFO  20:32:05,875 - #41 )
INFO  20:32:05,876 - #36 ;
INFO  20:32:05,876 - #49 val
INFO  20:32:05,876 - #39 .
INFO  20:32:05,876 - #49 pos
INFO  20:32:05,876 - #35 =
INFO  20:32:05,876 - #11 new
INFO  20:32:05,876 - #49 int
INFO  20:32:05,876 - #42 [
INFO  20:32:05,876 - #49 tableSize
INFO  20:32:05,876 - #43 ]
INFO  20:32:05,876 - #36 ;
INFO  20:32:05,876 - #49 val
INFO  20:32:05,876 - #39 .
INFO  20:32:05,876 - #49 neg
INFO  20:32:05,876 - #35 =
INFO  20:32:05,876 - #11 new
INFO  20:32:05,876 - #49 int
INFO  20:32:05,877 - #42 [
INFO  20:32:05,877 - #49 tableSize
INFO  20:32:05,877 - #43 ]
INFO  20:32:05,877 - #36 ;
INFO  20:32:05,877 - #10 read
INFO  20:32:05,877 - #40 (
INFO  20:32:05,877 - #49 x
INFO  20:32:05,877 - #41 )
INFO  20:32:05,877 - #36 ;
INFO  20:32:05,877 - #49 i
INFO  20:32:05,877 - #35 =
INFO  20:32:05,877 - #46 0
INFO  20:32:05,877 - #36 ;
INFO  20:32:05,877 - #14 do
INFO  20:32:05,877 - #44 {
INFO  20:32:05,877 - #49 val
INFO  20:32:05,877 - #39 .
INFO  20:32:05,877 - #49 putp
INFO  20:32:05,877 - #40 (
INFO  20:32:05,877 - #46 0
INFO  20:32:05,877 - #38 ,
INFO  20:32:05,877 - #49 i
INFO  20:32:05,877 - #41 )
INFO  20:32:05,877 - #36 ;
INFO  20:32:05,877 - #49 val
INFO  20:32:05,878 - #39 .
INFO  20:32:05,878 - #49 putn
INFO  20:32:05,878 - #40 (
INFO  20:32:05,878 - #46 0
INFO  20:32:05,878 - #38 ,
INFO  20:32:05,878 - #49 i
INFO  20:32:05,878 - #41 )
INFO  20:32:05,878 - #36 ;
INFO  20:32:05,878 - #45 }
INFO  20:32:05,878 - #15 while
INFO  20:32:05,878 - #40 (
INFO  20:32:05,878 - #49 i
INFO  20:32:05,878 - #31 <
INFO  20:32:05,878 - #49 tableSize
INFO  20:32:05,878 - #38 ,
INFO  20:32:05,878 - #49 i
INFO  20:32:05,878 - #25 ++
INFO  20:32:05,878 - #41 )
INFO  20:32:05,878 - #36 ;
INFO  20:32:05,878 - #49 f
INFO  20:32:05,878 - #40 (
INFO  20:32:05,878 - #49 c
INFO  20:32:05,878 - #38 ,
INFO  20:32:05,878 - #49 x
INFO  20:32:05,878 - #38 ,
INFO  20:32:05,879 - #49 i
INFO  20:32:05,879 - #41 )
INFO  20:32:05,879 - #36 ;
INFO  20:32:05,879 - #10 read
INFO  20:32:05,879 - #40 (
INFO  20:32:05,879 - #49 rows
INFO  20:32:05,879 - #41 )
INFO  20:32:05,879 - #36 ;
INFO  20:32:05,879 - #49 x
INFO  20:32:05,879 - #35 =
INFO  20:32:05,879 - #49 rows
INFO  20:32:05,879 - #36 ;
INFO  20:32:05,879 - #14 do
INFO  20:32:05,879 - #44 {
INFO  20:32:05,879 - #16 if
INFO  20:32:05,879 - #40 (
INFO  20:32:05,879 - #49 x
INFO  20:32:05,879 - #32 <=
INFO  20:32:05,880 - #46 0
INFO  20:32:05,880 - #41 )
INFO  20:32:05,880 - #19 break
INFO  20:32:05,880 - #36 ;
INFO  20:32:05,880 - #16 if
INFO  20:32:05,880 - #40 (
INFO  20:32:05,880 - #46 0
INFO  20:32:05,880 - #32 <=
INFO  20:32:05,880 - #49 x
INFO  20:32:05,880 - #33 &&
INFO  20:32:05,880 - #49 x
INFO  20:32:05,880 - #31 <
INFO  20:32:05,880 - #49 tableSize
INFO  20:32:05,880 - #41 )
INFO  20:32:05,880 - #44 {
INFO  20:32:05,880 - #49 val
INFO  20:32:05,880 - #39 .
INFO  20:32:05,880 - #49 putp
INFO  20:32:05,880 - #40 (
INFO  20:32:05,880 - #49 val
INFO  20:32:05,881 - #39 .
INFO  20:32:05,881 - #49 getp
INFO  20:32:05,881 - #40 (
INFO  20:32:05,881 - #49 x
INFO  20:32:05,881 - #41 )
INFO  20:32:05,881 - #20 +
INFO  20:32:05,881 - #46 1
INFO  20:32:05,881 - #41 )
INFO  20:32:05,881 - #36 ;
INFO  20:32:05,881 - #45 }
INFO  20:32:05,881 - #17 else
INFO  20:32:05,881 - #16 if
INFO  20:32:05,881 - #40 (
INFO  20:32:05,881 - #21 -
INFO  20:32:05,881 - #49 tableSize
INFO  20:32:05,881 - #31 <
INFO  20:32:05,881 - #49 x
INFO  20:32:05,881 - #33 &&
INFO  20:32:05,881 - #49 x
INFO  20:32:05,881 - #31 <
INFO  20:32:05,881 - #46 0
INFO  20:32:05,882 - #41 )
INFO  20:32:05,882 - #44 {
INFO  20:32:05,882 - #49 val
INFO  20:32:05,882 - #39 .
INFO  20:32:05,882 - #49 putn
INFO  20:32:05,882 - #40 (
INFO  20:32:05,882 - #49 val
INFO  20:32:05,882 - #39 .
INFO  20:32:05,882 - #49 getn
INFO  20:32:05,882 - #40 (
INFO  20:32:05,882 - #21 -
INFO  20:32:05,882 - #49 x
INFO  20:32:05,882 - #41 )
INFO  20:32:05,882 - #20 +
INFO  20:32:05,882 - #46 1
INFO  20:32:05,882 - #41 )
INFO  20:32:05,882 - #36 ;
INFO  20:32:05,882 - #45 }
INFO  20:32:05,882 - #10 read
INFO  20:32:05,882 - #40 (
INFO  20:32:05,882 - #49 x
INFO  20:32:05,882 - #41 )
INFO  20:32:05,882 - #36 ;
INFO  20:32:05,883 - #45 }
INFO  20:32:05,883 - #15 while
INFO  20:32:05,883 - #40 (
INFO  20:32:05,883 - #41 )
INFO  20:32:05,883 - #36 ;
INFO  20:32:05,883 - #45 }
INFO  20:32:05,883 - #45 }
ERROR 20:32:05,883 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
