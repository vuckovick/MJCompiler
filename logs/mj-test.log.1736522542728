INFO  16:15:36,923 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  16:15:37,035 - #2 program
INFO  16:15:37,035 - #49 p
INFO  16:15:37,035 - #8 const
INFO  16:15:37,036 - #49 int
INFO  16:15:37,036 - #49 tableSize
INFO  16:15:37,037 - #35 =
INFO  16:15:37,037 - #46 10
INFO  16:15:37,037 - #36 ;
INFO  16:15:37,038 - #49 set
INFO  16:15:37,039 - #49 s1
INFO  16:15:37,039 - #36 ;
INFO  16:15:37,041 - #3 class
INFO  16:15:37,042 - #49 Table
INFO  16:15:37,042 - #44 {
INFO  16:15:37,043 - #49 int
INFO  16:15:37,044 - #49 pos
INFO  16:15:37,044 - #42 [
INFO  16:15:37,045 - #43 ]
INFO  16:15:37,045 - #20 +
ERROR 16:15:37,045 - 
Sintaksna greska na liniji 5, na koloni 9
INFO  16:15:37,071 - #38 ,
INFO  16:15:37,072 - #49 a
INFO  16:15:37,072 - #36 ;
INFO  16:15:37,074 - #44 {
INFO  16:15:37,074 - #12 void
INFO  16:15:37,074 - #49 setfactor
INFO  16:15:37,074 - #40 (
INFO  16:15:37,074 - #49 int
INFO  16:15:37,074 - #49 factor
INFO  16:15:37,074 - #41 )
INFO  16:15:37,074 - #44 {
INFO  16:15:37,075 - #49 this
INFO  16:15:37,075 - #39 .
INFO  16:15:37,075 - #49 factor
INFO  16:15:37,075 - #35 =
INFO  16:15:37,075 - #49 factor
INFO  16:15:37,077 - #36 ;
INFO  16:15:37,077 - #45 }
INFO  16:15:37,077 - #12 void
INFO  16:15:37,077 - #49 putp
INFO  16:15:37,077 - #40 (
INFO  16:15:37,077 - #49 int
INFO  16:15:37,078 - #49 a
INFO  16:15:37,078 - #38 ,
INFO  16:15:37,078 - #49 int
INFO  16:15:37,078 - #49 idx
INFO  16:15:37,078 - #41 )
INFO  16:15:37,078 - #44 {
INFO  16:15:37,078 - #49 this
INFO  16:15:37,078 - #39 .
INFO  16:15:37,078 - #49 pos
INFO  16:15:37,078 - #42 [
INFO  16:15:37,078 - #49 idx
INFO  16:15:37,078 - #43 ]
INFO  16:15:37,078 - #35 =
INFO  16:15:37,078 - #49 a
INFO  16:15:37,078 - #36 ;
INFO  16:15:37,078 - #45 }
INFO  16:15:37,078 - #12 void
INFO  16:15:37,079 - #49 putn
INFO  16:15:37,079 - #40 (
INFO  16:15:37,079 - #49 int
INFO  16:15:37,079 - #49 a
INFO  16:15:37,079 - #38 ,
INFO  16:15:37,079 - #49 int
INFO  16:15:37,079 - #49 idx
INFO  16:15:37,079 - #41 )
INFO  16:15:37,079 - #44 {
INFO  16:15:37,079 - #49 this
INFO  16:15:37,079 - #39 .
INFO  16:15:37,079 - #49 neg
INFO  16:15:37,079 - #42 [
INFO  16:15:37,079 - #49 idx
INFO  16:15:37,079 - #43 ]
INFO  16:15:37,080 - #35 =
INFO  16:15:37,080 - #49 a
INFO  16:15:37,080 - #36 ;
INFO  16:15:37,080 - #45 }
INFO  16:15:37,080 - #49 int
INFO  16:15:37,080 - #49 getp
INFO  16:15:37,080 - #40 (
INFO  16:15:37,080 - #49 int
INFO  16:15:37,080 - #49 idx
INFO  16:15:37,080 - #41 )
INFO  16:15:37,080 - #44 {
INFO  16:15:37,080 - #13 return
INFO  16:15:37,080 - #49 pos
INFO  16:15:37,080 - #42 [
INFO  16:15:37,080 - #49 idx
INFO  16:15:37,081 - #43 ]
INFO  16:15:37,081 - #36 ;
INFO  16:15:37,081 - #45 }
INFO  16:15:37,081 - #49 int
INFO  16:15:37,081 - #49 getn
INFO  16:15:37,081 - #40 (
INFO  16:15:37,081 - #49 int
INFO  16:15:37,081 - #49 idx
INFO  16:15:37,081 - #41 )
INFO  16:15:37,081 - #44 {
INFO  16:15:37,081 - #13 return
INFO  16:15:37,081 - #49 neg
INFO  16:15:37,081 - #42 [
INFO  16:15:37,081 - #49 idx
INFO  16:15:37,081 - #43 ]
INFO  16:15:37,081 - #36 ;
INFO  16:15:37,081 - #45 }
INFO  16:15:37,081 - #45 }
INFO  16:15:37,081 - #45 }
INFO  16:15:37,081 - #49 Table
INFO  16:15:37,082 - #49 val
INFO  16:15:37,082 - #36 ;
INFO  16:15:37,082 - #49 int
INFO  16:15:37,082 - #49 rows
INFO  16:15:37,082 - #38 ,
INFO  16:15:37,082 - #49 columns
INFO  16:15:37,082 - #36 ;
INFO  16:15:37,082 - #44 {
INFO  16:15:37,082 - #12 void
INFO  16:15:37,082 - #49 f
INFO  16:15:37,082 - #40 (
INFO  16:15:37,082 - #49 char
INFO  16:15:37,082 - #49 ch
INFO  16:15:37,082 - #38 ,
INFO  16:15:37,082 - #49 int
INFO  16:15:37,082 - #49 a
INFO  16:15:37,082 - #38 ,
INFO  16:15:37,083 - #49 int
INFO  16:15:37,083 - #49 arg
INFO  16:15:37,083 - #41 )
INFO  16:15:37,083 - #49 int
INFO  16:15:37,083 - #49 x
INFO  16:15:37,083 - #36 ;
INFO  16:15:37,083 - #44 {
INFO  16:15:37,083 - #49 x
INFO  16:15:37,083 - #35 =
INFO  16:15:37,083 - #49 arg
INFO  16:15:37,083 - #36 ;
INFO  16:15:37,083 - #45 }
INFO  16:15:37,083 - #12 void
INFO  16:15:37,083 - #49 main
INFO  16:15:37,084 - #40 (
INFO  16:15:37,084 - #41 )
INFO  16:15:37,084 - #49 int
INFO  16:15:37,084 - #49 x
INFO  16:15:37,084 - #38 ,
INFO  16:15:37,084 - #49 i
INFO  16:15:37,084 - #36 ;
INFO  16:15:37,084 - #49 char
INFO  16:15:37,084 - #49 c
INFO  16:15:37,084 - #36 ;
INFO  16:15:37,084 - #49 int
INFO  16:15:37,084 - #49 arr
INFO  16:15:37,084 - #42 [
INFO  16:15:37,084 - #43 ]
INFO  16:15:37,084 - #36 ;
INFO  16:15:37,084 - #44 {
INFO  16:15:37,084 - #49 val
INFO  16:15:37,084 - #35 =
INFO  16:15:37,084 - #11 new
INFO  16:15:37,084 - #49 Table
INFO  16:15:37,085 - #40 (
INFO  16:15:37,085 - #41 )
INFO  16:15:37,085 - #36 ;
INFO  16:15:37,085 - #49 val
INFO  16:15:37,085 - #39 .
INFO  16:15:37,085 - #49 setfactor
INFO  16:15:37,085 - #40 (
INFO  16:15:37,085 - #46 2
INFO  16:15:37,085 - #41 )
INFO  16:15:37,085 - #36 ;
INFO  16:15:37,085 - #49 s1
INFO  16:15:37,085 - #35 =
INFO  16:15:37,085 - #11 new
INFO  16:15:37,085 - #49 set
INFO  16:15:37,085 - #42 [
INFO  16:15:37,085 - #46 5
INFO  16:15:37,085 - #43 ]
INFO  16:15:37,085 - #36 ;
INFO  16:15:37,085 - #49 s1
INFO  16:15:37,086 - #39 .
INFO  16:15:37,086 - #49 add
INFO  16:15:37,086 - #40 (
INFO  16:15:37,086 - #46 5
INFO  16:15:37,086 - #41 )
INFO  16:15:37,086 - #36 ;
INFO  16:15:37,086 - #49 s1
INFO  16:15:37,086 - #39 .
INFO  16:15:37,086 - #49 add
INFO  16:15:37,086 - #40 (
INFO  16:15:37,086 - #46 10
INFO  16:15:37,086 - #41 )
INFO  16:15:37,086 - #36 ;
INFO  16:15:37,086 - #9 print
INFO  16:15:37,086 - #40 (
INFO  16:15:37,086 - #49 s1
INFO  16:15:37,086 - #41 )
INFO  16:15:37,086 - #36 ;
INFO  16:15:37,087 - #49 arr
INFO  16:15:37,087 - #35 =
INFO  16:15:37,087 - #11 new
INFO  16:15:37,087 - #49 int
INFO  16:15:37,087 - #42 [
INFO  16:15:37,087 - #46 3
INFO  16:15:37,087 - #43 ]
INFO  16:15:37,087 - #36 ;
INFO  16:15:37,087 - #49 i
INFO  16:15:37,087 - #35 =
INFO  16:15:37,087 - #46 0
INFO  16:15:37,087 - #36 ;
INFO  16:15:37,087 - #14 do
INFO  16:15:37,087 - #49 arr
INFO  16:15:37,087 - #42 [
INFO  16:15:37,087 - #49 i
INFO  16:15:37,087 - #43 ]
INFO  16:15:37,087 - #35 =
INFO  16:15:37,087 - #49 i
INFO  16:15:37,087 - #36 ;
INFO  16:15:37,087 - #15 while
INFO  16:15:37,087 - #40 (
INFO  16:15:37,087 - #49 i
INFO  16:15:37,087 - #31 <
INFO  16:15:37,088 - #46 3
INFO  16:15:37,088 - #38 ,
INFO  16:15:37,088 - #49 i
INFO  16:15:37,088 - #25 ++
INFO  16:15:37,088 - #41 )
INFO  16:15:37,088 - #36 ;
INFO  16:15:37,088 - #49 i
INFO  16:15:37,088 - #35 =
INFO  16:15:37,088 - #46 0
INFO  16:15:37,088 - #36 ;
INFO  16:15:37,088 - #14 do
INFO  16:15:37,088 - #9 print
INFO  16:15:37,088 - #40 (
INFO  16:15:37,088 - #49 arr
INFO  16:15:37,088 - #42 [
INFO  16:15:37,088 - #49 i
INFO  16:15:37,088 - #43 ]
INFO  16:15:37,088 - #41 )
INFO  16:15:37,088 - #36 ;
INFO  16:15:37,088 - #15 while
INFO  16:15:37,088 - #40 (
INFO  16:15:37,088 - #49 i
INFO  16:15:37,088 - #31 <
INFO  16:15:37,088 - #46 3
INFO  16:15:37,088 - #38 ,
INFO  16:15:37,088 - #49 i
INFO  16:15:37,088 - #25 ++
INFO  16:15:37,089 - #41 )
INFO  16:15:37,089 - #36 ;
INFO  16:15:37,089 - #49 val
INFO  16:15:37,089 - #39 .
INFO  16:15:37,089 - #49 pos
INFO  16:15:37,089 - #35 =
INFO  16:15:37,089 - #11 new
INFO  16:15:37,089 - #49 int
INFO  16:15:37,089 - #42 [
INFO  16:15:37,089 - #49 tableSize
INFO  16:15:37,089 - #43 ]
INFO  16:15:37,089 - #36 ;
INFO  16:15:37,089 - #49 val
INFO  16:15:37,089 - #39 .
INFO  16:15:37,089 - #49 neg
INFO  16:15:37,089 - #35 =
INFO  16:15:37,089 - #11 new
INFO  16:15:37,089 - #49 int
INFO  16:15:37,089 - #42 [
INFO  16:15:37,089 - #49 tableSize
INFO  16:15:37,090 - #43 ]
INFO  16:15:37,090 - #36 ;
INFO  16:15:37,090 - #10 read
INFO  16:15:37,090 - #40 (
INFO  16:15:37,090 - #49 x
INFO  16:15:37,090 - #41 )
INFO  16:15:37,090 - #36 ;
INFO  16:15:37,090 - #49 i
INFO  16:15:37,090 - #35 =
INFO  16:15:37,090 - #46 0
INFO  16:15:37,090 - #36 ;
INFO  16:15:37,090 - #14 do
INFO  16:15:37,090 - #44 {
INFO  16:15:37,090 - #49 val
INFO  16:15:37,090 - #39 .
INFO  16:15:37,090 - #49 putp
INFO  16:15:37,090 - #40 (
INFO  16:15:37,090 - #46 0
INFO  16:15:37,090 - #38 ,
INFO  16:15:37,090 - #49 i
INFO  16:15:37,090 - #41 )
INFO  16:15:37,090 - #36 ;
INFO  16:15:37,090 - #49 val
INFO  16:15:37,090 - #39 .
INFO  16:15:37,091 - #49 putn
INFO  16:15:37,091 - #40 (
INFO  16:15:37,091 - #46 0
INFO  16:15:37,091 - #38 ,
INFO  16:15:37,091 - #49 i
INFO  16:15:37,091 - #41 )
INFO  16:15:37,091 - #36 ;
INFO  16:15:37,091 - #45 }
INFO  16:15:37,091 - #15 while
INFO  16:15:37,091 - #40 (
INFO  16:15:37,091 - #49 i
INFO  16:15:37,091 - #31 <
INFO  16:15:37,091 - #49 tableSize
INFO  16:15:37,091 - #38 ,
INFO  16:15:37,091 - #49 i
INFO  16:15:37,091 - #25 ++
INFO  16:15:37,091 - #41 )
INFO  16:15:37,091 - #36 ;
INFO  16:15:37,091 - #49 f
INFO  16:15:37,091 - #40 (
INFO  16:15:37,091 - #49 c
INFO  16:15:37,091 - #38 ,
INFO  16:15:37,091 - #49 x
INFO  16:15:37,091 - #38 ,
INFO  16:15:37,091 - #49 i
INFO  16:15:37,091 - #41 )
INFO  16:15:37,092 - #36 ;
INFO  16:15:37,092 - #10 read
INFO  16:15:37,092 - #40 (
INFO  16:15:37,092 - #49 rows
INFO  16:15:37,092 - #41 )
INFO  16:15:37,092 - #36 ;
INFO  16:15:37,092 - #49 x
INFO  16:15:37,092 - #35 =
INFO  16:15:37,092 - #49 rows
INFO  16:15:37,092 - #36 ;
INFO  16:15:37,092 - #14 do
INFO  16:15:37,092 - #44 {
INFO  16:15:37,092 - #16 if
INFO  16:15:37,092 - #40 (
INFO  16:15:37,092 - #49 x
INFO  16:15:37,092 - #32 <=
INFO  16:15:37,092 - #46 0
INFO  16:15:37,092 - #41 )
INFO  16:15:37,092 - #19 break
INFO  16:15:37,092 - #36 ;
INFO  16:15:37,092 - #16 if
INFO  16:15:37,092 - #40 (
INFO  16:15:37,092 - #46 0
INFO  16:15:37,092 - #32 <=
INFO  16:15:37,092 - #49 x
INFO  16:15:37,092 - #33 &&
INFO  16:15:37,092 - #49 x
INFO  16:15:37,093 - #31 <
INFO  16:15:37,093 - #49 tableSize
INFO  16:15:37,093 - #41 )
INFO  16:15:37,093 - #44 {
INFO  16:15:37,093 - #49 val
INFO  16:15:37,093 - #39 .
INFO  16:15:37,093 - #49 putp
INFO  16:15:37,093 - #40 (
INFO  16:15:37,093 - #49 val
INFO  16:15:37,093 - #39 .
INFO  16:15:37,093 - #49 getp
INFO  16:15:37,093 - #40 (
INFO  16:15:37,093 - #49 x
INFO  16:15:37,093 - #41 )
INFO  16:15:37,093 - #20 +
INFO  16:15:37,093 - #46 1
INFO  16:15:37,093 - #41 )
INFO  16:15:37,093 - #36 ;
INFO  16:15:37,093 - #45 }
INFO  16:15:37,093 - #17 else
INFO  16:15:37,093 - #16 if
INFO  16:15:37,093 - #40 (
INFO  16:15:37,093 - #21 -
INFO  16:15:37,093 - #49 tableSize
INFO  16:15:37,093 - #31 <
INFO  16:15:37,093 - #49 x
INFO  16:15:37,093 - #33 &&
INFO  16:15:37,093 - #49 x
INFO  16:15:37,093 - #31 <
INFO  16:15:37,093 - #46 0
INFO  16:15:37,093 - #41 )
INFO  16:15:37,094 - #44 {
INFO  16:15:37,094 - #49 val
INFO  16:15:37,094 - #39 .
INFO  16:15:37,094 - #49 putn
INFO  16:15:37,094 - #40 (
INFO  16:15:37,094 - #49 val
INFO  16:15:37,094 - #39 .
INFO  16:15:37,094 - #49 getn
INFO  16:15:37,094 - #40 (
INFO  16:15:37,094 - #21 -
INFO  16:15:37,094 - #49 x
INFO  16:15:37,094 - #41 )
INFO  16:15:37,094 - #20 +
INFO  16:15:37,094 - #46 1
INFO  16:15:37,094 - #41 )
INFO  16:15:37,094 - #36 ;
INFO  16:15:37,094 - #45 }
INFO  16:15:37,094 - #10 read
INFO  16:15:37,094 - #40 (
INFO  16:15:37,094 - #49 x
INFO  16:15:37,094 - #41 )
INFO  16:15:37,094 - #36 ;
INFO  16:15:37,094 - #45 }
INFO  16:15:37,094 - #15 while
INFO  16:15:37,094 - #40 (
INFO  16:15:37,094 - #41 )
INFO  16:15:37,094 - #36 ;
INFO  16:15:37,095 - #45 }
INFO  16:15:37,095 - #45 }
ERROR 16:15:37,095 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
