INFO  13:02:40,815 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:02:40,968 - #2 program
INFO  13:02:40,968 - #49 prog
INFO  13:02:40,968 - #8 const
INFO  13:02:40,971 - #49 int
INFO  13:02:40,971 - #49 tableSize
INFO  13:02:40,972 - #35 =
INFO  13:02:40,972 - #46 10
INFO  13:02:40,972 - #38 ,
INFO  13:02:40,973 - #49 c
INFO  13:02:40,974 - #35 =
INFO  13:02:40,974 - #46 3
INFO  13:02:40,974 - #38 ,
INFO  13:02:40,974 - #49 d
INFO  13:02:40,974 - #35 =
INFO  13:02:40,974 - #46 5
INFO  13:02:40,974 - #36 ;
INFO  13:02:40,974 - #8 const
INFO  13:02:40,975 - #49 bool
INFO  13:02:40,975 - #49 a
INFO  13:02:40,975 - #35 =
INFO  13:02:40,975 - #47 true
INFO  13:02:40,977 - #38 ,
INFO  13:02:40,978 - #49 b
INFO  13:02:40,978 - #35 =
INFO  13:02:40,978 - #47 false
INFO  13:02:40,978 - #36 ;
INFO  13:02:40,978 - #8 const
INFO  13:02:40,978 - #49 char
INFO  13:02:40,978 - #49 f
INFO  13:02:40,978 - #35 =
INFO  13:02:40,978 - #48 a
INFO  13:02:40,978 - #36 ;
INFO  13:02:40,978 - #49 int
INFO  13:02:40,978 - #49 arr
INFO  13:02:40,978 - #42 [
INFO  13:02:40,979 - #43 ]
INFO  13:02:40,980 - #38 ,
INFO  13:02:40,983 - #49 i
INFO  13:02:40,983 - #36 ;
INFO  13:02:40,983 - #49 int
INFO  13:02:40,984 - #49 aa
INFO  13:02:40,984 - #38 ,
INFO  13:02:40,984 - #49 bb
INFO  13:02:40,984 - #38 ,
INFO  13:02:40,984 - #49 cc
INFO  13:02:40,984 - #38 ,
INFO  13:02:40,984 - #49 dd
INFO  13:02:40,984 - #36 ;
INFO  13:02:40,984 - #49 bool
INFO  13:02:40,984 - #49 o
INFO  13:02:40,984 - #38 ,
INFO  13:02:40,984 - #49 g
INFO  13:02:40,984 - #38 ,
INFO  13:02:40,984 - #49 h
INFO  13:02:40,984 - #36 ;
INFO  13:02:40,985 - #49 char
INFO  13:02:40,985 - #49 n
INFO  13:02:40,985 - #38 ,
INFO  13:02:40,985 - #49 j
INFO  13:02:40,985 - #38 ,
INFO  13:02:40,985 - #49 k
INFO  13:02:40,985 - #36 ;
INFO  13:02:40,985 - #44 {
INFO  13:02:40,985 - #12 void
INFO  13:02:40,986 - #49 fa
INFO  13:02:40,987 - #40 (
INFO  13:02:40,988 - #49 char
INFO  13:02:40,988 - #49 ch
INFO  13:02:40,988 - #38 ,
INFO  13:02:40,989 - #49 int
INFO  13:02:40,989 - #49 arg
INFO  13:02:40,989 - #41 )
INFO  13:02:40,989 - #49 int
INFO  13:02:40,990 - #49 c
INFO  13:02:40,990 - #36 ;
INFO  13:02:40,990 - #44 {
INFO  13:02:40,991 - #49 x
INFO  13:02:40,992 - #35 =
INFO  13:02:40,994 - #49 arg
INFO  13:02:40,995 - #39 .
INFO  13:02:40,995 - #49 a
INFO  13:02:40,995 - #39 .
INFO  13:02:40,995 - #49 b
INFO  13:02:40,995 - #39 .
INFO  13:02:40,995 - #49 c
INFO  13:02:40,995 - #36 ;
INFO  13:02:40,998 - #49 x
INFO  13:02:40,999 - #35 =
INFO  13:02:40,999 - #49 arr
INFO  13:02:40,999 - #42 [
INFO  13:02:40,999 - #46 1
INFO  13:02:40,999 - #43 ]
INFO  13:02:40,999 - #36 ;
INFO  13:02:40,999 - #14 do
INFO  13:02:40,999 - #44 {
INFO  13:02:41,000 - #19 break
INFO  13:02:41,000 - #36 ;
INFO  13:02:41,000 - #45 }
INFO  13:02:41,001 - #15 while
INFO  13:02:41,001 - #40 (
INFO  13:02:41,001 - #49 i
INFO  13:02:41,001 - #31 <
INFO  13:02:41,001 - #49 tableSize
INFO  13:02:41,002 - #38 ,
INFO  13:02:41,005 - #49 i
INFO  13:02:41,005 - #25 ++
INFO  13:02:41,005 - #41 )
INFO  13:02:41,005 - #36 ;
INFO  13:02:41,005 - #45 }
INFO  13:02:41,006 - #12 void
INFO  13:02:41,007 - #49 fa2
INFO  13:02:41,007 - #40 (
INFO  13:02:41,007 - #49 char
INFO  13:02:41,007 - #49 ch
INFO  13:02:41,007 - #38 ,
INFO  13:02:41,007 - #49 int
INFO  13:02:41,007 - #49 j
INFO  13:02:41,007 - #42 [
INFO  13:02:41,007 - #43 ]
INFO  13:02:41,007 - #38 ,
INFO  13:02:41,007 - #49 int
INFO  13:02:41,007 - #49 arg
INFO  13:02:41,007 - #41 )
INFO  13:02:41,007 - #49 int
INFO  13:02:41,007 - #49 c
INFO  13:02:41,007 - #36 ;
INFO  13:02:41,008 - #44 {
INFO  13:02:41,008 - #49 x
INFO  13:02:41,008 - #35 =
INFO  13:02:41,008 - #49 arg
INFO  13:02:41,008 - #39 .
INFO  13:02:41,008 - #49 a
INFO  13:02:41,008 - #39 .
INFO  13:02:41,008 - #49 b
INFO  13:02:41,008 - #39 .
INFO  13:02:41,008 - #49 c
INFO  13:02:41,008 - #36 ;
INFO  13:02:41,008 - #49 x
INFO  13:02:41,008 - #35 =
INFO  13:02:41,008 - #49 arr
INFO  13:02:41,008 - #42 [
INFO  13:02:41,009 - #46 1
INFO  13:02:41,009 - #43 ]
INFO  13:02:41,009 - #36 ;
INFO  13:02:41,009 - #14 do
INFO  13:02:41,009 - #44 {
INFO  13:02:41,009 - #19 break
INFO  13:02:41,009 - #36 ;
INFO  13:02:41,009 - #45 }
INFO  13:02:41,009 - #15 while
INFO  13:02:41,009 - #40 (
INFO  13:02:41,009 - #49 i
INFO  13:02:41,009 - #31 <
INFO  13:02:41,009 - #49 tableSize
INFO  13:02:41,009 - #38 ,
INFO  13:02:41,009 - #49 i
INFO  13:02:41,009 - #25 ++
INFO  13:02:41,009 - #41 )
INFO  13:02:41,009 - #36 ;
INFO  13:02:41,009 - #45 }
INFO  13:02:41,009 - #12 void
INFO  13:02:41,009 - #49 main
INFO  13:02:41,010 - #40 (
INFO  13:02:41,010 - #41 )
INFO  13:02:41,010 - #49 int
INFO  13:02:41,011 - #49 b
INFO  13:02:41,011 - #36 ;
INFO  13:02:41,011 - #44 {
INFO  13:02:41,011 - #9 print
INFO  13:02:41,011 - #40 (
INFO  13:02:41,011 - #49 b
INFO  13:02:41,011 - #42 [
INFO  13:02:41,011 - #43 ]
ERROR 13:02:41,011 - 
Sintaksna greska na liniji 37, na koloni 16
INFO  13:02:41,011 - #41 )
INFO  13:02:41,011 - #36 ;
INFO  13:02:41,011 - #45 }
INFO  13:02:41,012 - #45 }
ERROR 13:02:41,012 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39, na koloni 1
