INFO  16:24:04,697 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  16:24:04,819 - #2 program
INFO  16:24:04,819 - #49 p
INFO  16:24:04,819 - #8 const
INFO  16:24:04,820 - #49 int
INFO  16:24:04,820 - #49 tableSize
INFO  16:24:04,820 - #35 =
INFO  16:24:04,821 - #46 10
INFO  16:24:04,821 - #36 ;
INFO  16:24:04,822 - #49 set
INFO  16:24:04,822 - #49 s1
INFO  16:24:04,822 - #36 ;
INFO  16:24:04,825 - #3 class
INFO  16:24:04,825 - #49 Table
INFO  16:24:04,825 - #44 {
INFO  16:24:04,826 - #49 int
INFO  16:24:04,828 - #49 pos
INFO  16:24:04,828 - #42 [
INFO  16:24:04,828 - #43 ]
INFO  16:24:04,828 - #38 ,
INFO  16:24:04,829 - #49 a
INFO  16:24:04,829 - #20 +
ERROR 16:24:04,831 - 
Sintaksna greska na liniji 5, na koloni 12
INFO  16:24:04,831 - #38 ,
INFO  16:24:04,831 - #49 b
INFO  16:24:04,832 - #38 ,
INFO  16:24:04,834 - #49 c
INFO  16:24:04,834 - #36 ;
INFO  16:24:04,834 - #44 {
INFO  16:24:04,834 - #12 void
INFO  16:24:04,834 - #49 setfactor
INFO  16:24:04,834 - #40 (
INFO  16:24:04,834 - #49 int
INFO  16:24:04,834 - #49 factor
INFO  16:24:04,834 - #41 )
INFO  16:24:04,835 - #44 {
INFO  16:24:04,835 - #49 this
INFO  16:24:04,837 - #39 .
INFO  16:24:04,837 - #49 factor
INFO  16:24:04,837 - #35 =
INFO  16:24:04,837 - #49 factor
INFO  16:24:04,837 - #36 ;
INFO  16:24:04,838 - #45 }
INFO  16:24:04,838 - #12 void
INFO  16:24:04,838 - #49 putp
INFO  16:24:04,838 - #40 (
INFO  16:24:04,838 - #49 int
INFO  16:24:04,838 - #49 a
INFO  16:24:04,838 - #38 ,
INFO  16:24:04,838 - #49 int
INFO  16:24:04,838 - #49 idx
INFO  16:24:04,838 - #41 )
INFO  16:24:04,838 - #44 {
INFO  16:24:04,838 - #49 this
INFO  16:24:04,838 - #39 .
INFO  16:24:04,838 - #49 pos
INFO  16:24:04,838 - #42 [
INFO  16:24:04,838 - #49 idx
INFO  16:24:04,839 - #43 ]
INFO  16:24:04,839 - #35 =
INFO  16:24:04,839 - #49 a
INFO  16:24:04,839 - #36 ;
INFO  16:24:04,839 - #45 }
INFO  16:24:04,839 - #12 void
INFO  16:24:04,839 - #49 putn
INFO  16:24:04,839 - #40 (
INFO  16:24:04,839 - #49 int
INFO  16:24:04,839 - #49 a
INFO  16:24:04,839 - #38 ,
INFO  16:24:04,839 - #49 int
INFO  16:24:04,839 - #49 idx
INFO  16:24:04,839 - #41 )
INFO  16:24:04,839 - #44 {
INFO  16:24:04,840 - #49 this
INFO  16:24:04,840 - #39 .
INFO  16:24:04,840 - #49 neg
INFO  16:24:04,840 - #42 [
INFO  16:24:04,840 - #49 idx
INFO  16:24:04,840 - #43 ]
INFO  16:24:04,840 - #35 =
INFO  16:24:04,840 - #49 a
INFO  16:24:04,840 - #36 ;
INFO  16:24:04,840 - #45 }
INFO  16:24:04,840 - #49 int
INFO  16:24:04,840 - #49 getp
INFO  16:24:04,840 - #40 (
INFO  16:24:04,840 - #49 int
INFO  16:24:04,840 - #49 idx
INFO  16:24:04,840 - #41 )
INFO  16:24:04,840 - #44 {
INFO  16:24:04,840 - #13 return
INFO  16:24:04,841 - #49 pos
INFO  16:24:04,841 - #42 [
INFO  16:24:04,841 - #49 idx
INFO  16:24:04,841 - #43 ]
INFO  16:24:04,841 - #36 ;
INFO  16:24:04,841 - #45 }
INFO  16:24:04,841 - #49 int
INFO  16:24:04,841 - #49 getn
INFO  16:24:04,841 - #40 (
INFO  16:24:04,841 - #49 int
INFO  16:24:04,841 - #49 idx
INFO  16:24:04,841 - #41 )
INFO  16:24:04,841 - #44 {
INFO  16:24:04,841 - #13 return
INFO  16:24:04,841 - #49 neg
INFO  16:24:04,841 - #42 [
INFO  16:24:04,841 - #49 idx
INFO  16:24:04,841 - #43 ]
INFO  16:24:04,842 - #36 ;
INFO  16:24:04,842 - #45 }
INFO  16:24:04,842 - #45 }
INFO  16:24:04,842 - #45 }
INFO  16:24:04,842 - #49 Table
INFO  16:24:04,842 - #49 val
INFO  16:24:04,842 - #36 ;
INFO  16:24:04,842 - #49 int
INFO  16:24:04,842 - #49 rows
INFO  16:24:04,842 - #38 ,
INFO  16:24:04,842 - #49 columns
INFO  16:24:04,842 - #36 ;
INFO  16:24:04,842 - #44 {
INFO  16:24:04,842 - #12 void
INFO  16:24:04,842 - #49 f
INFO  16:24:04,842 - #40 (
INFO  16:24:04,842 - #49 char
INFO  16:24:04,842 - #49 ch
INFO  16:24:04,843 - #38 ,
INFO  16:24:04,843 - #49 int
INFO  16:24:04,843 - #49 a
INFO  16:24:04,843 - #38 ,
INFO  16:24:04,843 - #49 int
INFO  16:24:04,843 - #49 arg
INFO  16:24:04,843 - #41 )
INFO  16:24:04,843 - #49 int
INFO  16:24:04,843 - #49 x
INFO  16:24:04,843 - #36 ;
INFO  16:24:04,843 - #44 {
INFO  16:24:04,843 - #49 x
INFO  16:24:04,843 - #35 =
INFO  16:24:04,843 - #49 arg
INFO  16:24:04,843 - #36 ;
INFO  16:24:04,843 - #45 }
INFO  16:24:04,843 - #12 void
INFO  16:24:04,844 - #49 main
INFO  16:24:04,844 - #40 (
INFO  16:24:04,844 - #41 )
INFO  16:24:04,844 - #49 int
INFO  16:24:04,844 - #49 x
INFO  16:24:04,844 - #38 ,
INFO  16:24:04,844 - #49 i
INFO  16:24:04,844 - #36 ;
INFO  16:24:04,844 - #49 char
INFO  16:24:04,844 - #49 c
INFO  16:24:04,844 - #36 ;
INFO  16:24:04,844 - #49 int
INFO  16:24:04,844 - #49 arr
INFO  16:24:04,844 - #42 [
INFO  16:24:04,844 - #43 ]
INFO  16:24:04,844 - #36 ;
INFO  16:24:04,845 - #44 {
INFO  16:24:04,845 - #49 val
INFO  16:24:04,845 - #35 =
INFO  16:24:04,845 - #11 new
INFO  16:24:04,845 - #49 Table
INFO  16:24:04,845 - #40 (
INFO  16:24:04,845 - #41 )
INFO  16:24:04,845 - #36 ;
INFO  16:24:04,845 - #49 val
INFO  16:24:04,845 - #39 .
INFO  16:24:04,845 - #49 setfactor
INFO  16:24:04,845 - #40 (
INFO  16:24:04,845 - #46 2
INFO  16:24:04,845 - #41 )
INFO  16:24:04,845 - #36 ;
INFO  16:24:04,845 - #49 s1
INFO  16:24:04,845 - #35 =
INFO  16:24:04,845 - #11 new
INFO  16:24:04,845 - #49 set
INFO  16:24:04,846 - #42 [
INFO  16:24:04,846 - #46 5
INFO  16:24:04,846 - #43 ]
INFO  16:24:04,846 - #36 ;
INFO  16:24:04,846 - #49 s1
INFO  16:24:04,846 - #39 .
INFO  16:24:04,846 - #49 add
INFO  16:24:04,846 - #40 (
INFO  16:24:04,846 - #46 5
INFO  16:24:04,846 - #41 )
INFO  16:24:04,846 - #36 ;
INFO  16:24:04,846 - #49 s1
INFO  16:24:04,846 - #39 .
INFO  16:24:04,846 - #49 add
INFO  16:24:04,846 - #40 (
INFO  16:24:04,846 - #46 10
INFO  16:24:04,846 - #41 )
INFO  16:24:04,846 - #36 ;
INFO  16:24:04,846 - #9 print
INFO  16:24:04,847 - #40 (
INFO  16:24:04,847 - #49 s1
INFO  16:24:04,847 - #41 )
INFO  16:24:04,847 - #36 ;
INFO  16:24:04,847 - #49 arr
INFO  16:24:04,847 - #35 =
INFO  16:24:04,847 - #11 new
INFO  16:24:04,847 - #49 int
INFO  16:24:04,847 - #42 [
INFO  16:24:04,847 - #46 3
INFO  16:24:04,847 - #43 ]
INFO  16:24:04,847 - #36 ;
INFO  16:24:04,847 - #49 i
INFO  16:24:04,847 - #35 =
INFO  16:24:04,847 - #46 0
INFO  16:24:04,847 - #36 ;
INFO  16:24:04,847 - #14 do
INFO  16:24:04,847 - #49 arr
INFO  16:24:04,847 - #42 [
INFO  16:24:04,847 - #49 i
INFO  16:24:04,847 - #43 ]
INFO  16:24:04,847 - #35 =
INFO  16:24:04,847 - #49 i
INFO  16:24:04,847 - #36 ;
INFO  16:24:04,847 - #15 while
INFO  16:24:04,847 - #40 (
INFO  16:24:04,847 - #49 i
INFO  16:24:04,848 - #31 <
INFO  16:24:04,848 - #46 3
INFO  16:24:04,848 - #38 ,
INFO  16:24:04,848 - #49 i
INFO  16:24:04,848 - #25 ++
INFO  16:24:04,848 - #41 )
INFO  16:24:04,848 - #36 ;
INFO  16:24:04,848 - #49 i
INFO  16:24:04,848 - #35 =
INFO  16:24:04,848 - #46 0
INFO  16:24:04,848 - #36 ;
INFO  16:24:04,848 - #14 do
INFO  16:24:04,848 - #9 print
INFO  16:24:04,848 - #40 (
INFO  16:24:04,848 - #49 arr
INFO  16:24:04,848 - #42 [
INFO  16:24:04,848 - #49 i
INFO  16:24:04,848 - #43 ]
INFO  16:24:04,848 - #41 )
INFO  16:24:04,848 - #36 ;
INFO  16:24:04,848 - #15 while
INFO  16:24:04,848 - #40 (
INFO  16:24:04,848 - #49 i
INFO  16:24:04,848 - #31 <
INFO  16:24:04,848 - #46 3
INFO  16:24:04,849 - #38 ,
INFO  16:24:04,849 - #49 i
INFO  16:24:04,849 - #25 ++
INFO  16:24:04,849 - #41 )
INFO  16:24:04,849 - #36 ;
INFO  16:24:04,849 - #49 val
INFO  16:24:04,849 - #39 .
INFO  16:24:04,849 - #49 pos
INFO  16:24:04,849 - #35 =
INFO  16:24:04,849 - #11 new
INFO  16:24:04,849 - #49 int
INFO  16:24:04,849 - #42 [
INFO  16:24:04,849 - #49 tableSize
INFO  16:24:04,849 - #43 ]
INFO  16:24:04,849 - #36 ;
INFO  16:24:04,849 - #49 val
INFO  16:24:04,849 - #39 .
INFO  16:24:04,849 - #49 neg
INFO  16:24:04,849 - #35 =
INFO  16:24:04,850 - #11 new
INFO  16:24:04,850 - #49 int
INFO  16:24:04,850 - #42 [
INFO  16:24:04,850 - #49 tableSize
INFO  16:24:04,850 - #43 ]
INFO  16:24:04,850 - #36 ;
INFO  16:24:04,850 - #10 read
INFO  16:24:04,850 - #40 (
INFO  16:24:04,850 - #49 x
INFO  16:24:04,850 - #41 )
INFO  16:24:04,850 - #36 ;
INFO  16:24:04,850 - #49 i
INFO  16:24:04,850 - #35 =
INFO  16:24:04,850 - #46 0
INFO  16:24:04,850 - #36 ;
INFO  16:24:04,850 - #14 do
INFO  16:24:04,850 - #44 {
INFO  16:24:04,850 - #49 val
INFO  16:24:04,850 - #39 .
INFO  16:24:04,850 - #49 putp
INFO  16:24:04,850 - #40 (
INFO  16:24:04,850 - #46 0
INFO  16:24:04,851 - #38 ,
INFO  16:24:04,851 - #49 i
INFO  16:24:04,851 - #41 )
INFO  16:24:04,851 - #36 ;
INFO  16:24:04,851 - #49 val
INFO  16:24:04,851 - #39 .
INFO  16:24:04,851 - #49 putn
INFO  16:24:04,851 - #40 (
INFO  16:24:04,851 - #46 0
INFO  16:24:04,851 - #38 ,
INFO  16:24:04,851 - #49 i
INFO  16:24:04,851 - #41 )
INFO  16:24:04,851 - #36 ;
INFO  16:24:04,851 - #45 }
INFO  16:24:04,851 - #15 while
INFO  16:24:04,851 - #40 (
INFO  16:24:04,851 - #49 i
INFO  16:24:04,851 - #31 <
INFO  16:24:04,851 - #49 tableSize
INFO  16:24:04,851 - #38 ,
INFO  16:24:04,851 - #49 i
INFO  16:24:04,851 - #25 ++
INFO  16:24:04,852 - #41 )
INFO  16:24:04,852 - #36 ;
INFO  16:24:04,852 - #49 f
INFO  16:24:04,852 - #40 (
INFO  16:24:04,852 - #49 c
INFO  16:24:04,852 - #38 ,
INFO  16:24:04,852 - #49 x
INFO  16:24:04,852 - #38 ,
INFO  16:24:04,852 - #49 i
INFO  16:24:04,852 - #41 )
INFO  16:24:04,852 - #36 ;
INFO  16:24:04,852 - #10 read
INFO  16:24:04,852 - #40 (
INFO  16:24:04,852 - #49 rows
INFO  16:24:04,852 - #41 )
INFO  16:24:04,852 - #36 ;
INFO  16:24:04,852 - #49 x
INFO  16:24:04,852 - #35 =
INFO  16:24:04,852 - #49 rows
INFO  16:24:04,853 - #36 ;
INFO  16:24:04,853 - #14 do
INFO  16:24:04,853 - #44 {
INFO  16:24:04,853 - #16 if
INFO  16:24:04,853 - #40 (
INFO  16:24:04,853 - #49 x
INFO  16:24:04,853 - #32 <=
INFO  16:24:04,853 - #46 0
INFO  16:24:04,853 - #41 )
INFO  16:24:04,853 - #19 break
INFO  16:24:04,853 - #36 ;
INFO  16:24:04,853 - #16 if
INFO  16:24:04,853 - #40 (
INFO  16:24:04,853 - #46 0
INFO  16:24:04,853 - #32 <=
INFO  16:24:04,853 - #49 x
INFO  16:24:04,853 - #33 &&
INFO  16:24:04,853 - #49 x
INFO  16:24:04,853 - #31 <
INFO  16:24:04,853 - #49 tableSize
INFO  16:24:04,853 - #41 )
INFO  16:24:04,853 - #44 {
INFO  16:24:04,853 - #49 val
INFO  16:24:04,853 - #39 .
INFO  16:24:04,853 - #49 putp
INFO  16:24:04,854 - #40 (
INFO  16:24:04,854 - #49 val
INFO  16:24:04,854 - #39 .
INFO  16:24:04,854 - #49 getp
INFO  16:24:04,854 - #40 (
INFO  16:24:04,854 - #49 x
INFO  16:24:04,854 - #41 )
INFO  16:24:04,854 - #20 +
INFO  16:24:04,854 - #46 1
INFO  16:24:04,854 - #41 )
INFO  16:24:04,854 - #36 ;
INFO  16:24:04,854 - #45 }
INFO  16:24:04,854 - #17 else
INFO  16:24:04,854 - #16 if
INFO  16:24:04,854 - #40 (
INFO  16:24:04,854 - #21 -
INFO  16:24:04,854 - #49 tableSize
INFO  16:24:04,854 - #31 <
INFO  16:24:04,854 - #49 x
INFO  16:24:04,854 - #33 &&
INFO  16:24:04,854 - #49 x
INFO  16:24:04,854 - #31 <
INFO  16:24:04,854 - #46 0
INFO  16:24:04,854 - #41 )
INFO  16:24:04,854 - #44 {
INFO  16:24:04,854 - #49 val
INFO  16:24:04,854 - #39 .
INFO  16:24:04,854 - #49 putn
INFO  16:24:04,854 - #40 (
INFO  16:24:04,854 - #49 val
INFO  16:24:04,854 - #39 .
INFO  16:24:04,854 - #49 getn
INFO  16:24:04,854 - #40 (
INFO  16:24:04,854 - #21 -
INFO  16:24:04,854 - #49 x
INFO  16:24:04,854 - #41 )
INFO  16:24:04,854 - #20 +
INFO  16:24:04,855 - #46 1
INFO  16:24:04,855 - #41 )
INFO  16:24:04,855 - #36 ;
INFO  16:24:04,855 - #45 }
INFO  16:24:04,855 - #10 read
INFO  16:24:04,855 - #40 (
INFO  16:24:04,855 - #49 x
INFO  16:24:04,855 - #41 )
INFO  16:24:04,855 - #36 ;
INFO  16:24:04,855 - #45 }
INFO  16:24:04,855 - #15 while
INFO  16:24:04,855 - #40 (
INFO  16:24:04,855 - #41 )
INFO  16:24:04,855 - #36 ;
INFO  16:24:04,855 - #45 }
INFO  16:24:04,855 - #45 }
ERROR 16:24:04,855 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
