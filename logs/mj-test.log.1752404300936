INFO  10:58:31,083 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  10:58:31,200 - #2 program
INFO  10:58:31,201 - #49 prog
INFO  10:58:31,201 - #8 const
INFO  10:58:31,202 - #49 int
INFO  10:58:31,203 - #49 tableSize
INFO  10:58:31,203 - #35 =
INFO  10:58:31,203 - #46 10
INFO  10:58:31,203 - #38 ,
INFO  10:58:31,204 - #49 c
INFO  10:58:31,204 - #35 =
INFO  10:58:31,204 - #46 3
INFO  10:58:31,204 - #38 ,
INFO  10:58:31,204 - #49 d
INFO  10:58:31,205 - #35 =
INFO  10:58:31,205 - #46 5
INFO  10:58:31,205 - #36 ;
INFO  10:58:31,205 - #8 const
INFO  10:58:31,206 - #49 bool
INFO  10:58:31,206 - #49 a
INFO  10:58:31,206 - #35 =
INFO  10:58:31,206 - #47 true
INFO  10:58:31,208 - #38 ,
INFO  10:58:31,208 - #49 b
INFO  10:58:31,208 - #35 =
INFO  10:58:31,208 - #47 false
INFO  10:58:31,208 - #36 ;
INFO  10:58:31,208 - #8 const
INFO  10:58:31,208 - #49 char
INFO  10:58:31,208 - #49 f
INFO  10:58:31,208 - #35 =
INFO  10:58:31,209 - #48 a
INFO  10:58:31,209 - #36 ;
INFO  10:58:31,209 - #49 int
INFO  10:58:31,209 - #49 arr
INFO  10:58:31,209 - #42 [
INFO  10:58:31,209 - #43 ]
INFO  10:58:31,210 - #38 ,
INFO  10:58:31,212 - #49 i
INFO  10:58:31,212 - #36 ;
INFO  10:58:31,213 - #49 int
INFO  10:58:31,213 - #49 aa
INFO  10:58:31,213 - #38 ,
INFO  10:58:31,213 - #49 bb
INFO  10:58:31,213 - #38 ,
INFO  10:58:31,213 - #49 cc
INFO  10:58:31,213 - #38 ,
INFO  10:58:31,214 - #49 dd
INFO  10:58:31,214 - #36 ;
INFO  10:58:31,214 - #49 bool
INFO  10:58:31,214 - #49 o
INFO  10:58:31,214 - #38 ,
INFO  10:58:31,214 - #49 g
INFO  10:58:31,214 - #38 ,
INFO  10:58:31,214 - #49 h
INFO  10:58:31,214 - #36 ;
INFO  10:58:31,214 - #49 char
INFO  10:58:31,214 - #49 n
INFO  10:58:31,214 - #38 ,
INFO  10:58:31,214 - #49 j
INFO  10:58:31,214 - #38 ,
INFO  10:58:31,214 - #49 k
INFO  10:58:31,214 - #36 ;
INFO  10:58:31,214 - #44 {
INFO  10:58:31,214 - #12 void
INFO  10:58:31,215 - #49 fa
INFO  10:58:31,216 - #40 (
INFO  10:58:31,217 - #49 char
INFO  10:58:31,217 - #49 ch
INFO  10:58:31,218 - #38 ,
INFO  10:58:31,218 - #49 int
INFO  10:58:31,218 - #49 arg
INFO  10:58:31,218 - #41 )
INFO  10:58:31,218 - #49 int
INFO  10:58:31,219 - #49 c
INFO  10:58:31,220 - #36 ;
INFO  10:58:31,220 - #44 {
INFO  10:58:31,220 - #49 x
INFO  10:58:31,221 - #35 =
INFO  10:58:31,222 - #49 arg
INFO  10:58:31,223 - #39 .
INFO  10:58:31,223 - #49 a
INFO  10:58:31,223 - #39 .
INFO  10:58:31,223 - #49 b
INFO  10:58:31,223 - #39 .
INFO  10:58:31,223 - #49 c
INFO  10:58:31,223 - #36 ;
INFO  10:58:31,226 - #49 x
INFO  10:58:31,226 - #35 =
INFO  10:58:31,226 - #49 arr
INFO  10:58:31,226 - #42 [
INFO  10:58:31,226 - #46 1
INFO  10:58:31,226 - #43 ]
INFO  10:58:31,226 - #36 ;
INFO  10:58:31,227 - #14 do
INFO  10:58:31,227 - #44 {
INFO  10:58:31,228 - #19 break
INFO  10:58:31,228 - #36 ;
INFO  10:58:31,228 - #45 }
INFO  10:58:31,229 - #15 while
INFO  10:58:31,229 - #40 (
INFO  10:58:31,229 - #49 i
INFO  10:58:31,229 - #31 <
INFO  10:58:31,229 - #49 tableSize
INFO  10:58:31,231 - #38 ,
INFO  10:58:31,234 - #49 i
INFO  10:58:31,234 - #25 ++
INFO  10:58:31,234 - #41 )
INFO  10:58:31,235 - #36 ;
INFO  10:58:31,236 - #45 }
INFO  10:58:31,236 - #12 void
INFO  10:58:31,237 - #49 fa2
INFO  10:58:31,237 - #40 (
INFO  10:58:31,238 - #49 char
INFO  10:58:31,238 - #49 ch
INFO  10:58:31,238 - #38 ,
INFO  10:58:31,238 - #49 int
INFO  10:58:31,238 - #49 j
INFO  10:58:31,238 - #42 [
INFO  10:58:31,238 - #43 ]
INFO  10:58:31,238 - #38 ,
INFO  10:58:31,238 - #49 int
INFO  10:58:31,238 - #49 arg
INFO  10:58:31,238 - #41 )
INFO  10:58:31,238 - #49 int
INFO  10:58:31,238 - #49 c
INFO  10:58:31,238 - #36 ;
INFO  10:58:31,239 - #44 {
INFO  10:58:31,239 - #49 x
INFO  10:58:31,239 - #35 =
INFO  10:58:31,239 - #49 arg
INFO  10:58:31,239 - #39 .
INFO  10:58:31,239 - #49 a
INFO  10:58:31,239 - #39 .
INFO  10:58:31,239 - #49 b
INFO  10:58:31,239 - #39 .
INFO  10:58:31,239 - #49 c
INFO  10:58:31,239 - #36 ;
INFO  10:58:31,239 - #49 x
INFO  10:58:31,239 - #35 =
INFO  10:58:31,239 - #49 arr
INFO  10:58:31,239 - #42 [
INFO  10:58:31,239 - #46 1
INFO  10:58:31,240 - #43 ]
INFO  10:58:31,240 - #36 ;
INFO  10:58:31,240 - #14 do
INFO  10:58:31,240 - #44 {
INFO  10:58:31,240 - #19 break
INFO  10:58:31,240 - #36 ;
INFO  10:58:31,240 - #45 }
INFO  10:58:31,240 - #15 while
INFO  10:58:31,240 - #40 (
INFO  10:58:31,240 - #49 i
INFO  10:58:31,240 - #31 <
INFO  10:58:31,240 - #49 tableSize
INFO  10:58:31,240 - #38 ,
INFO  10:58:31,240 - #49 i
INFO  10:58:31,240 - #25 ++
INFO  10:58:31,240 - #41 )
INFO  10:58:31,240 - #36 ;
INFO  10:58:31,240 - #45 }
INFO  10:58:31,240 - #12 void
INFO  10:58:31,240 - #49 main
INFO  10:58:31,240 - #40 (
INFO  10:58:31,241 - #41 )
INFO  10:58:31,241 - #49 int
INFO  10:58:31,242 - #49 b
INFO  10:58:31,242 - #42 [
INFO  10:58:31,242 - #42 [
ERROR 10:58:31,242 - 
Sintaksna greska na liniji 35, na koloni 22
INFO  10:58:31,242 - #43 ]
INFO  10:58:31,242 - #43 ]
INFO  10:58:31,242 - #36 ;
INFO  10:58:31,243 - #44 {
INFO  10:58:31,243 - #9 print
INFO  10:58:31,243 - #40 (
INFO  10:58:31,244 - #49 b
INFO  10:58:31,244 - #42 [
INFO  10:58:31,244 - #43 ]
ERROR 10:58:31,244 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  10:58:31,244 - #41 )
INFO  10:58:31,244 - #36 ;
INFO  10:58:31,244 - #45 }
INFO  10:58:31,244 - #45 }
ERROR 10:58:31,244 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
