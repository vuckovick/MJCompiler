INFO  16:32:37,975 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  16:32:38,176 - #2 program
INFO  16:32:38,176 - #49 p
INFO  16:32:38,176 - #8 const
INFO  16:32:38,178 - #49 int
INFO  16:32:38,178 - #49 tableSize
INFO  16:32:38,178 - #35 =
INFO  16:32:38,178 - #46 10
INFO  16:32:38,178 - #36 ;
INFO  16:32:38,180 - #49 set
INFO  16:32:38,180 - #49 s1
INFO  16:32:38,180 - #36 ;
INFO  16:32:38,184 - #3 class
INFO  16:32:38,184 - #49 Table
INFO  16:32:38,184 - #44 {
INFO  16:32:38,187 - #49 int
INFO  16:32:38,189 - #49 pos
INFO  16:32:38,189 - #42 [
INFO  16:32:38,189 - #43 ]
INFO  16:32:38,189 - #38 ,
INFO  16:32:38,190 - #49 a
INFO  16:32:38,190 - #20 +
ERROR 16:32:38,191 - 
Sintaksna greska na liniji 5, na koloni 12
INFO  16:32:38,191 - #38 ,
INFO  16:32:38,191 - #49 b
INFO  16:32:38,191 - #38 ,
INFO  16:32:38,196 - #49 c
INFO  16:32:38,196 - #36 ;
INFO  16:32:38,196 - #44 {
INFO  16:32:38,196 - #12 void
INFO  16:32:38,196 - #49 setfactor
INFO  16:32:38,196 - #40 (
INFO  16:32:38,196 - #49 int
INFO  16:32:38,196 - #49 factor
INFO  16:32:38,196 - #41 )
INFO  16:32:38,196 - #44 {
INFO  16:32:38,197 - #49 this
INFO  16:32:38,199 - #39 .
INFO  16:32:38,200 - #49 factor
INFO  16:32:38,200 - #35 =
INFO  16:32:38,200 - #49 factor
INFO  16:32:38,200 - #36 ;
INFO  16:32:38,200 - #45 }
INFO  16:32:38,200 - #12 void
INFO  16:32:38,200 - #49 putp
INFO  16:32:38,200 - #40 (
INFO  16:32:38,200 - #49 int
INFO  16:32:38,200 - #49 a
INFO  16:32:38,200 - #38 ,
INFO  16:32:38,200 - #49 int
INFO  16:32:38,200 - #49 idx
INFO  16:32:38,200 - #41 )
INFO  16:32:38,200 - #44 {
INFO  16:32:38,201 - #49 this
INFO  16:32:38,201 - #39 .
INFO  16:32:38,201 - #49 pos
INFO  16:32:38,201 - #42 [
INFO  16:32:38,201 - #49 idx
INFO  16:32:38,201 - #43 ]
INFO  16:32:38,201 - #35 =
INFO  16:32:38,202 - #49 a
INFO  16:32:38,202 - #36 ;
INFO  16:32:38,202 - #45 }
INFO  16:32:38,202 - #12 void
INFO  16:32:38,202 - #49 putn
INFO  16:32:38,202 - #40 (
INFO  16:32:38,202 - #49 int
INFO  16:32:38,203 - #49 a
INFO  16:32:38,203 - #38 ,
INFO  16:32:38,203 - #49 int
INFO  16:32:38,203 - #49 idx
INFO  16:32:38,203 - #41 )
INFO  16:32:38,203 - #44 {
INFO  16:32:38,203 - #49 this
INFO  16:32:38,203 - #39 .
INFO  16:32:38,203 - #49 neg
INFO  16:32:38,203 - #42 [
INFO  16:32:38,203 - #49 idx
INFO  16:32:38,204 - #43 ]
INFO  16:32:38,204 - #35 =
INFO  16:32:38,204 - #49 a
INFO  16:32:38,204 - #36 ;
INFO  16:32:38,204 - #45 }
INFO  16:32:38,204 - #49 int
INFO  16:32:38,205 - #49 getp
INFO  16:32:38,205 - #40 (
INFO  16:32:38,206 - #49 int
INFO  16:32:38,206 - #49 idx
INFO  16:32:38,206 - #41 )
INFO  16:32:38,206 - #44 {
INFO  16:32:38,206 - #13 return
INFO  16:32:38,206 - #49 pos
INFO  16:32:38,206 - #42 [
INFO  16:32:38,207 - #49 idx
INFO  16:32:38,207 - #43 ]
INFO  16:32:38,207 - #36 ;
INFO  16:32:38,207 - #45 }
INFO  16:32:38,207 - #49 int
INFO  16:32:38,207 - #49 getn
INFO  16:32:38,208 - #40 (
INFO  16:32:38,208 - #49 int
INFO  16:32:38,208 - #49 idx
INFO  16:32:38,208 - #41 )
INFO  16:32:38,208 - #44 {
INFO  16:32:38,208 - #13 return
INFO  16:32:38,208 - #49 neg
INFO  16:32:38,208 - #42 [
INFO  16:32:38,208 - #49 idx
INFO  16:32:38,208 - #43 ]
INFO  16:32:38,209 - #36 ;
INFO  16:32:38,209 - #45 }
INFO  16:32:38,209 - #45 }
INFO  16:32:38,209 - #45 }
INFO  16:32:38,209 - #49 Table
INFO  16:32:38,209 - #49 val
INFO  16:32:38,209 - #36 ;
INFO  16:32:38,209 - #49 int
INFO  16:32:38,209 - #49 rows
INFO  16:32:38,209 - #38 ,
INFO  16:32:38,209 - #49 columns
INFO  16:32:38,209 - #36 ;
INFO  16:32:38,209 - #44 {
INFO  16:32:38,210 - #12 void
INFO  16:32:38,210 - #49 f
INFO  16:32:38,210 - #40 (
INFO  16:32:38,210 - #49 char
INFO  16:32:38,210 - #49 ch
INFO  16:32:38,210 - #38 ,
INFO  16:32:38,210 - #49 int
INFO  16:32:38,210 - #49 a
INFO  16:32:38,210 - #38 ,
INFO  16:32:38,210 - #49 int
INFO  16:32:38,210 - #49 arg
INFO  16:32:38,210 - #41 )
INFO  16:32:38,210 - #49 int
INFO  16:32:38,211 - #49 x
INFO  16:32:38,211 - #36 ;
INFO  16:32:38,211 - #44 {
INFO  16:32:38,211 - #49 x
INFO  16:32:38,211 - #35 =
INFO  16:32:38,211 - #49 arg
INFO  16:32:38,211 - #36 ;
INFO  16:32:38,211 - #45 }
INFO  16:32:38,211 - #12 void
INFO  16:32:38,211 - #49 main
INFO  16:32:38,211 - #40 (
INFO  16:32:38,211 - #41 )
INFO  16:32:38,211 - #49 int
INFO  16:32:38,211 - #49 x
INFO  16:32:38,212 - #38 ,
INFO  16:32:38,212 - #49 i
INFO  16:32:38,212 - #36 ;
INFO  16:32:38,212 - #49 char
INFO  16:32:38,213 - #49 c
INFO  16:32:38,213 - #36 ;
INFO  16:32:38,213 - #49 int
INFO  16:32:38,213 - #49 arr
INFO  16:32:38,213 - #42 [
INFO  16:32:38,213 - #43 ]
INFO  16:32:38,213 - #36 ;
INFO  16:32:38,213 - #44 {
INFO  16:32:38,213 - #49 val
INFO  16:32:38,213 - #35 =
INFO  16:32:38,213 - #11 new
INFO  16:32:38,213 - #49 Table
INFO  16:32:38,213 - #40 (
INFO  16:32:38,213 - #41 )
INFO  16:32:38,213 - #36 ;
INFO  16:32:38,214 - #49 val
INFO  16:32:38,214 - #39 .
INFO  16:32:38,214 - #49 setfactor
INFO  16:32:38,214 - #40 (
INFO  16:32:38,214 - #46 2
INFO  16:32:38,214 - #41 )
INFO  16:32:38,214 - #36 ;
INFO  16:32:38,214 - #49 s1
INFO  16:32:38,214 - #35 =
INFO  16:32:38,214 - #11 new
INFO  16:32:38,215 - #49 set
INFO  16:32:38,215 - #42 [
INFO  16:32:38,216 - #46 5
INFO  16:32:38,216 - #43 ]
INFO  16:32:38,216 - #36 ;
INFO  16:32:38,216 - #49 s1
INFO  16:32:38,216 - #39 .
INFO  16:32:38,216 - #49 add
INFO  16:32:38,216 - #40 (
INFO  16:32:38,216 - #46 5
INFO  16:32:38,216 - #41 )
INFO  16:32:38,216 - #36 ;
INFO  16:32:38,216 - #49 s1
INFO  16:32:38,217 - #39 .
INFO  16:32:38,218 - #49 add
INFO  16:32:38,218 - #40 (
INFO  16:32:38,218 - #46 10
INFO  16:32:38,218 - #41 )
INFO  16:32:38,218 - #36 ;
INFO  16:32:38,218 - #9 print
INFO  16:32:38,218 - #40 (
INFO  16:32:38,218 - #49 s1
INFO  16:32:38,218 - #41 )
INFO  16:32:38,218 - #36 ;
INFO  16:32:38,218 - #49 arr
INFO  16:32:38,218 - #35 =
INFO  16:32:38,218 - #11 new
INFO  16:32:38,218 - #49 int
INFO  16:32:38,218 - #42 [
INFO  16:32:38,218 - #46 3
INFO  16:32:38,218 - #43 ]
INFO  16:32:38,219 - #36 ;
INFO  16:32:38,219 - #49 i
INFO  16:32:38,219 - #35 =
INFO  16:32:38,219 - #46 0
INFO  16:32:38,219 - #36 ;
INFO  16:32:38,219 - #14 do
INFO  16:32:38,219 - #49 arr
INFO  16:32:38,219 - #42 [
INFO  16:32:38,219 - #49 i
INFO  16:32:38,219 - #43 ]
INFO  16:32:38,219 - #35 =
INFO  16:32:38,219 - #49 i
INFO  16:32:38,219 - #36 ;
INFO  16:32:38,219 - #15 while
INFO  16:32:38,219 - #40 (
INFO  16:32:38,219 - #49 i
INFO  16:32:38,219 - #31 <
INFO  16:32:38,219 - #46 3
INFO  16:32:38,219 - #38 ,
INFO  16:32:38,219 - #49 i
INFO  16:32:38,219 - #25 ++
INFO  16:32:38,220 - #41 )
INFO  16:32:38,220 - #36 ;
INFO  16:32:38,220 - #49 i
INFO  16:32:38,220 - #35 =
INFO  16:32:38,220 - #46 0
INFO  16:32:38,220 - #36 ;
INFO  16:32:38,220 - #14 do
INFO  16:32:38,220 - #9 print
INFO  16:32:38,220 - #40 (
INFO  16:32:38,220 - #49 arr
INFO  16:32:38,220 - #42 [
INFO  16:32:38,220 - #49 i
INFO  16:32:38,220 - #43 ]
INFO  16:32:38,220 - #41 )
INFO  16:32:38,220 - #36 ;
INFO  16:32:38,220 - #15 while
INFO  16:32:38,220 - #40 (
INFO  16:32:38,220 - #49 i
INFO  16:32:38,221 - #31 <
INFO  16:32:38,221 - #46 3
INFO  16:32:38,221 - #38 ,
INFO  16:32:38,221 - #49 i
INFO  16:32:38,221 - #25 ++
INFO  16:32:38,221 - #41 )
INFO  16:32:38,221 - #36 ;
INFO  16:32:38,221 - #49 val
INFO  16:32:38,221 - #39 .
INFO  16:32:38,221 - #49 pos
INFO  16:32:38,221 - #35 =
INFO  16:32:38,221 - #11 new
INFO  16:32:38,221 - #49 int
INFO  16:32:38,221 - #42 [
INFO  16:32:38,222 - #49 tableSize
INFO  16:32:38,222 - #43 ]
INFO  16:32:38,222 - #36 ;
INFO  16:32:38,222 - #49 val
INFO  16:32:38,222 - #39 .
INFO  16:32:38,222 - #49 neg
INFO  16:32:38,222 - #35 =
INFO  16:32:38,222 - #11 new
INFO  16:32:38,222 - #49 int
INFO  16:32:38,222 - #42 [
INFO  16:32:38,222 - #49 tableSize
INFO  16:32:38,222 - #43 ]
INFO  16:32:38,222 - #36 ;
INFO  16:32:38,222 - #10 read
INFO  16:32:38,222 - #40 (
INFO  16:32:38,222 - #49 x
INFO  16:32:38,222 - #41 )
INFO  16:32:38,223 - #36 ;
INFO  16:32:38,223 - #49 i
INFO  16:32:38,223 - #35 =
INFO  16:32:38,223 - #46 0
INFO  16:32:38,223 - #36 ;
INFO  16:32:38,223 - #14 do
INFO  16:32:38,223 - #44 {
INFO  16:32:38,223 - #49 val
INFO  16:32:38,223 - #39 .
INFO  16:32:38,223 - #49 putp
INFO  16:32:38,223 - #40 (
INFO  16:32:38,223 - #46 0
INFO  16:32:38,223 - #38 ,
INFO  16:32:38,223 - #49 i
INFO  16:32:38,223 - #41 )
INFO  16:32:38,223 - #36 ;
INFO  16:32:38,223 - #49 val
INFO  16:32:38,223 - #39 .
INFO  16:32:38,223 - #49 putn
INFO  16:32:38,223 - #40 (
INFO  16:32:38,223 - #46 0
INFO  16:32:38,223 - #38 ,
INFO  16:32:38,223 - #49 i
INFO  16:32:38,223 - #41 )
INFO  16:32:38,223 - #36 ;
INFO  16:32:38,223 - #45 }
INFO  16:32:38,223 - #15 while
INFO  16:32:38,224 - #40 (
INFO  16:32:38,224 - #49 i
INFO  16:32:38,224 - #31 <
INFO  16:32:38,224 - #49 tableSize
INFO  16:32:38,224 - #38 ,
INFO  16:32:38,224 - #49 i
INFO  16:32:38,224 - #25 ++
INFO  16:32:38,224 - #41 )
INFO  16:32:38,224 - #36 ;
INFO  16:32:38,224 - #49 f
INFO  16:32:38,224 - #40 (
INFO  16:32:38,224 - #49 c
INFO  16:32:38,224 - #38 ,
INFO  16:32:38,224 - #49 x
INFO  16:32:38,224 - #38 ,
INFO  16:32:38,224 - #49 i
INFO  16:32:38,224 - #41 )
INFO  16:32:38,224 - #36 ;
INFO  16:32:38,224 - #10 read
INFO  16:32:38,225 - #40 (
INFO  16:32:38,225 - #49 rows
INFO  16:32:38,225 - #41 )
INFO  16:32:38,225 - #36 ;
INFO  16:32:38,225 - #49 x
INFO  16:32:38,225 - #35 =
INFO  16:32:38,225 - #49 rows
INFO  16:32:38,225 - #36 ;
INFO  16:32:38,225 - #14 do
INFO  16:32:38,225 - #44 {
INFO  16:32:38,225 - #16 if
INFO  16:32:38,225 - #40 (
INFO  16:32:38,225 - #49 x
INFO  16:32:38,225 - #32 <=
INFO  16:32:38,225 - #46 0
INFO  16:32:38,225 - #41 )
INFO  16:32:38,225 - #19 break
INFO  16:32:38,225 - #36 ;
INFO  16:32:38,225 - #16 if
INFO  16:32:38,226 - #40 (
INFO  16:32:38,226 - #46 0
INFO  16:32:38,226 - #32 <=
INFO  16:32:38,226 - #49 x
INFO  16:32:38,226 - #33 &&
INFO  16:32:38,226 - #49 x
INFO  16:32:38,226 - #31 <
INFO  16:32:38,226 - #49 tableSize
INFO  16:32:38,226 - #41 )
INFO  16:32:38,226 - #44 {
INFO  16:32:38,226 - #49 val
INFO  16:32:38,226 - #39 .
INFO  16:32:38,226 - #49 putp
INFO  16:32:38,226 - #40 (
INFO  16:32:38,226 - #49 val
INFO  16:32:38,226 - #39 .
INFO  16:32:38,226 - #49 getp
INFO  16:32:38,226 - #40 (
INFO  16:32:38,226 - #49 x
INFO  16:32:38,226 - #41 )
INFO  16:32:38,226 - #20 +
INFO  16:32:38,227 - #46 1
INFO  16:32:38,227 - #41 )
INFO  16:32:38,227 - #36 ;
INFO  16:32:38,227 - #45 }
INFO  16:32:38,227 - #17 else
INFO  16:32:38,227 - #16 if
INFO  16:32:38,227 - #40 (
INFO  16:32:38,227 - #21 -
INFO  16:32:38,227 - #49 tableSize
INFO  16:32:38,227 - #31 <
INFO  16:32:38,227 - #49 x
INFO  16:32:38,227 - #33 &&
INFO  16:32:38,227 - #49 x
INFO  16:32:38,227 - #31 <
INFO  16:32:38,227 - #46 0
INFO  16:32:38,227 - #41 )
INFO  16:32:38,227 - #44 {
INFO  16:32:38,227 - #49 val
INFO  16:32:38,227 - #39 .
INFO  16:32:38,228 - #49 putn
INFO  16:32:38,228 - #40 (
INFO  16:32:38,228 - #49 val
INFO  16:32:38,228 - #39 .
INFO  16:32:38,228 - #49 getn
INFO  16:32:38,228 - #40 (
INFO  16:32:38,228 - #21 -
INFO  16:32:38,228 - #49 x
INFO  16:32:38,228 - #41 )
INFO  16:32:38,228 - #20 +
INFO  16:32:38,228 - #46 1
INFO  16:32:38,228 - #41 )
INFO  16:32:38,228 - #36 ;
INFO  16:32:38,228 - #45 }
INFO  16:32:38,228 - #10 read
INFO  16:32:38,228 - #40 (
INFO  16:32:38,228 - #49 x
INFO  16:32:38,228 - #41 )
INFO  16:32:38,228 - #36 ;
INFO  16:32:38,228 - #45 }
INFO  16:32:38,228 - #15 while
INFO  16:32:38,229 - #40 (
INFO  16:32:38,229 - #41 )
INFO  16:32:38,229 - #36 ;
INFO  16:32:38,229 - #45 }
INFO  16:32:38,229 - #45 }
ERROR 16:32:38,229 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
