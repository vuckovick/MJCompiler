INFO  10:47:09,125 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  10:47:09,404 - #2 program
INFO  10:47:09,404 - #49 prog
INFO  10:47:09,404 - #8 const
INFO  10:47:09,408 - #49 int
INFO  10:47:09,408 - #49 tableSize
INFO  10:47:09,411 - #35 =
INFO  10:47:09,411 - #46 10
INFO  10:47:09,411 - #38 ,
INFO  10:47:09,413 - #49 c
INFO  10:47:09,413 - #35 =
INFO  10:47:09,413 - #46 3
INFO  10:47:09,413 - #38 ,
INFO  10:47:09,414 - #49 d
INFO  10:47:09,414 - #35 =
INFO  10:47:09,414 - #46 5
INFO  10:47:09,414 - #36 ;
INFO  10:47:09,414 - #8 const
INFO  10:47:09,416 - #49 bool
INFO  10:47:09,416 - #49 a
INFO  10:47:09,416 - #35 =
INFO  10:47:09,416 - #47 true
INFO  10:47:09,417 - #38 ,
INFO  10:47:09,417 - #49 b
INFO  10:47:09,417 - #35 =
INFO  10:47:09,417 - #47 false
INFO  10:47:09,417 - #36 ;
INFO  10:47:09,417 - #8 const
INFO  10:47:09,418 - #49 char
INFO  10:47:09,418 - #49 f
INFO  10:47:09,418 - #35 =
INFO  10:47:09,418 - #48 a
INFO  10:47:09,418 - #36 ;
INFO  10:47:09,419 - #49 int
INFO  10:47:09,419 - #49 arr
INFO  10:47:09,419 - #42 [
INFO  10:47:09,419 - #43 ]
INFO  10:47:09,424 - #38 ,
INFO  10:47:09,430 - #49 i
INFO  10:47:09,430 - #36 ;
INFO  10:47:09,431 - #49 int
INFO  10:47:09,432 - #49 aa
INFO  10:47:09,432 - #38 ,
INFO  10:47:09,432 - #49 bb
INFO  10:47:09,432 - #38 ,
INFO  10:47:09,432 - #49 cc
INFO  10:47:09,432 - #38 ,
INFO  10:47:09,432 - #49 dd
INFO  10:47:09,432 - #36 ;
INFO  10:47:09,433 - #49 bool
INFO  10:47:09,433 - #49 o
INFO  10:47:09,433 - #38 ,
INFO  10:47:09,433 - #49 g
INFO  10:47:09,434 - #38 ,
INFO  10:47:09,434 - #49 h
INFO  10:47:09,434 - #36 ;
INFO  10:47:09,434 - #49 char
INFO  10:47:09,434 - #49 n
INFO  10:47:09,434 - #38 ,
INFO  10:47:09,434 - #49 j
INFO  10:47:09,435 - #38 ,
INFO  10:47:09,435 - #49 k
INFO  10:47:09,435 - #36 ;
INFO  10:47:09,435 - #44 {
INFO  10:47:09,435 - #12 void
INFO  10:47:09,437 - #49 fa
INFO  10:47:09,438 - #40 (
INFO  10:47:09,440 - #49 char
INFO  10:47:09,440 - #49 ch
INFO  10:47:09,440 - #38 ,
INFO  10:47:09,442 - #49 int
INFO  10:47:09,442 - #49 arg
INFO  10:47:09,442 - #41 )
INFO  10:47:09,443 - #49 int
INFO  10:47:09,446 - #49 c
INFO  10:47:09,446 - #36 ;
INFO  10:47:09,446 - #44 {
INFO  10:47:09,448 - #49 x
INFO  10:47:09,449 - #35 =
INFO  10:47:09,452 - #49 arg
INFO  10:47:09,454 - #39 .
INFO  10:47:09,454 - #49 a
INFO  10:47:09,454 - #39 .
INFO  10:47:09,454 - #49 b
INFO  10:47:09,454 - #39 .
INFO  10:47:09,454 - #49 c
INFO  10:47:09,455 - #36 ;
INFO  10:47:09,462 - #49 x
INFO  10:47:09,464 - #35 =
INFO  10:47:09,464 - #49 arr
INFO  10:47:09,464 - #42 [
INFO  10:47:09,464 - #46 1
INFO  10:47:09,464 - #43 ]
INFO  10:47:09,465 - #36 ;
INFO  10:47:09,465 - #14 do
INFO  10:47:09,465 - #44 {
INFO  10:47:09,467 - #19 break
INFO  10:47:09,467 - #36 ;
INFO  10:47:09,468 - #45 }
INFO  10:47:09,469 - #15 while
INFO  10:47:09,470 - #40 (
INFO  10:47:09,470 - #49 i
INFO  10:47:09,470 - #31 <
INFO  10:47:09,470 - #49 tableSize
INFO  10:47:09,473 - #38 ,
INFO  10:47:09,481 - #49 i
INFO  10:47:09,482 - #25 ++
INFO  10:47:09,482 - #41 )
INFO  10:47:09,483 - #36 ;
INFO  10:47:09,484 - #45 }
INFO  10:47:09,485 - #12 void
INFO  10:47:09,487 - #49 fa2
INFO  10:47:09,488 - #40 (
INFO  10:47:09,488 - #49 char
INFO  10:47:09,488 - #49 ch
INFO  10:47:09,488 - #38 ,
INFO  10:47:09,488 - #49 int
INFO  10:47:09,488 - #49 j
INFO  10:47:09,488 - #42 [
INFO  10:47:09,488 - #43 ]
INFO  10:47:09,488 - #38 ,
INFO  10:47:09,488 - #49 int
INFO  10:47:09,489 - #49 arg
INFO  10:47:09,489 - #41 )
INFO  10:47:09,489 - #49 int
INFO  10:47:09,490 - #49 c
INFO  10:47:09,490 - #36 ;
INFO  10:47:09,490 - #44 {
INFO  10:47:09,490 - #49 x
INFO  10:47:09,490 - #35 =
INFO  10:47:09,490 - #49 arg
INFO  10:47:09,490 - #39 .
INFO  10:47:09,490 - #49 a
INFO  10:47:09,490 - #39 .
INFO  10:47:09,490 - #49 b
INFO  10:47:09,490 - #39 .
INFO  10:47:09,492 - #49 c
INFO  10:47:09,492 - #36 ;
INFO  10:47:09,492 - #49 x
INFO  10:47:09,492 - #35 =
INFO  10:47:09,492 - #49 arr
INFO  10:47:09,492 - #42 [
INFO  10:47:09,492 - #46 1
INFO  10:47:09,492 - #43 ]
INFO  10:47:09,493 - #36 ;
INFO  10:47:09,493 - #14 do
INFO  10:47:09,493 - #44 {
INFO  10:47:09,493 - #19 break
INFO  10:47:09,493 - #36 ;
INFO  10:47:09,493 - #45 }
INFO  10:47:09,493 - #15 while
INFO  10:47:09,493 - #40 (
INFO  10:47:09,493 - #49 i
INFO  10:47:09,493 - #31 <
INFO  10:47:09,493 - #49 tableSize
INFO  10:47:09,494 - #38 ,
INFO  10:47:09,494 - #49 i
INFO  10:47:09,494 - #25 ++
INFO  10:47:09,494 - #41 )
INFO  10:47:09,494 - #36 ;
INFO  10:47:09,494 - #45 }
INFO  10:47:09,494 - #12 void
INFO  10:47:09,494 - #49 main
INFO  10:47:09,494 - #40 (
INFO  10:47:09,494 - #41 )
INFO  10:47:09,494 - #49 int
INFO  10:47:09,497 - #49 b
INFO  10:47:09,497 - #42 [
INFO  10:47:09,497 - #43 ]
INFO  10:47:09,497 - #36 ;
INFO  10:47:09,498 - #44 {
INFO  10:47:09,498 - #9 print
INFO  10:47:09,498 - #40 (
INFO  10:47:09,498 - #49 b
INFO  10:47:09,499 - #42 [
INFO  10:47:09,499 - #49 a
INFO  10:47:09,500 - #38 ,
ERROR 10:47:09,500 - 
Sintaksna greska na liniji 36, na koloni 17
INFO  10:47:09,500 - #49 b
INFO  10:47:09,500 - #43 ]
INFO  10:47:09,500 - #41 )
INFO  10:47:09,501 - #36 ;
INFO  10:47:09,502 - #45 }
INFO  10:47:09,502 - #45 }
ERROR 10:47:09,502 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
