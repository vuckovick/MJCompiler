INFO  10:58:11,783 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  10:58:11,991 - #2 program
INFO  10:58:11,991 - #49 prog
INFO  10:58:11,991 - #8 const
INFO  10:58:11,995 - #49 int
INFO  10:58:11,995 - #49 tableSize
INFO  10:58:11,997 - #35 =
INFO  10:58:11,997 - #46 10
INFO  10:58:11,997 - #38 ,
INFO  10:58:11,999 - #49 c
INFO  10:58:11,999 - #35 =
INFO  10:58:11,999 - #46 3
INFO  10:58:11,999 - #38 ,
INFO  10:58:12,000 - #49 d
INFO  10:58:12,000 - #35 =
INFO  10:58:12,000 - #46 5
INFO  10:58:12,000 - #36 ;
INFO  10:58:12,000 - #8 const
INFO  10:58:12,003 - #49 bool
INFO  10:58:12,003 - #49 a
INFO  10:58:12,003 - #35 =
INFO  10:58:12,003 - #47 true
INFO  10:58:12,006 - #38 ,
INFO  10:58:12,006 - #49 b
INFO  10:58:12,006 - #35 =
INFO  10:58:12,006 - #47 false
INFO  10:58:12,006 - #36 ;
INFO  10:58:12,006 - #8 const
INFO  10:58:12,007 - #49 char
INFO  10:58:12,007 - #49 f
INFO  10:58:12,007 - #35 =
INFO  10:58:12,007 - #48 a
INFO  10:58:12,007 - #36 ;
INFO  10:58:12,008 - #49 int
INFO  10:58:12,008 - #49 arr
INFO  10:58:12,008 - #42 [
INFO  10:58:12,008 - #43 ]
INFO  10:58:12,012 - #38 ,
INFO  10:58:12,017 - #49 i
INFO  10:58:12,017 - #36 ;
INFO  10:58:12,018 - #49 int
INFO  10:58:12,019 - #49 aa
INFO  10:58:12,019 - #38 ,
INFO  10:58:12,019 - #49 bb
INFO  10:58:12,019 - #38 ,
INFO  10:58:12,019 - #49 cc
INFO  10:58:12,019 - #38 ,
INFO  10:58:12,019 - #49 dd
INFO  10:58:12,019 - #36 ;
INFO  10:58:12,020 - #49 bool
INFO  10:58:12,020 - #49 o
INFO  10:58:12,020 - #38 ,
INFO  10:58:12,020 - #49 g
INFO  10:58:12,020 - #38 ,
INFO  10:58:12,020 - #49 h
INFO  10:58:12,020 - #36 ;
INFO  10:58:12,021 - #49 char
INFO  10:58:12,021 - #49 n
INFO  10:58:12,021 - #38 ,
INFO  10:58:12,021 - #49 j
INFO  10:58:12,021 - #38 ,
INFO  10:58:12,021 - #49 k
INFO  10:58:12,021 - #36 ;
INFO  10:58:12,021 - #44 {
INFO  10:58:12,022 - #12 void
INFO  10:58:12,024 - #49 fa
INFO  10:58:12,025 - #40 (
INFO  10:58:12,027 - #49 char
INFO  10:58:12,027 - #49 ch
INFO  10:58:12,027 - #38 ,
INFO  10:58:12,029 - #49 int
INFO  10:58:12,029 - #49 arg
INFO  10:58:12,029 - #41 )
INFO  10:58:12,029 - #49 int
INFO  10:58:12,032 - #49 c
INFO  10:58:12,032 - #36 ;
INFO  10:58:12,032 - #44 {
INFO  10:58:12,033 - #49 x
INFO  10:58:12,035 - #35 =
INFO  10:58:12,037 - #49 arg
INFO  10:58:12,039 - #39 .
INFO  10:58:12,039 - #49 a
INFO  10:58:12,039 - #39 .
INFO  10:58:12,039 - #49 b
INFO  10:58:12,039 - #39 .
INFO  10:58:12,040 - #49 c
INFO  10:58:12,040 - #36 ;
INFO  10:58:12,044 - #49 x
INFO  10:58:12,045 - #35 =
INFO  10:58:12,045 - #49 arr
INFO  10:58:12,045 - #42 [
INFO  10:58:12,045 - #46 1
INFO  10:58:12,045 - #43 ]
INFO  10:58:12,045 - #36 ;
INFO  10:58:12,045 - #14 do
INFO  10:58:12,046 - #44 {
INFO  10:58:12,047 - #19 break
INFO  10:58:12,047 - #36 ;
INFO  10:58:12,047 - #45 }
INFO  10:58:12,049 - #15 while
INFO  10:58:12,049 - #40 (
INFO  10:58:12,049 - #49 i
INFO  10:58:12,049 - #31 <
INFO  10:58:12,049 - #49 tableSize
INFO  10:58:12,051 - #38 ,
INFO  10:58:12,056 - #49 i
INFO  10:58:12,056 - #25 ++
INFO  10:58:12,056 - #41 )
INFO  10:58:12,058 - #36 ;
INFO  10:58:12,058 - #45 }
INFO  10:58:12,058 - #12 void
INFO  10:58:12,059 - #49 fa2
INFO  10:58:12,060 - #40 (
INFO  10:58:12,060 - #49 char
INFO  10:58:12,060 - #49 ch
INFO  10:58:12,060 - #38 ,
INFO  10:58:12,060 - #49 int
INFO  10:58:12,060 - #49 j
INFO  10:58:12,060 - #42 [
INFO  10:58:12,060 - #43 ]
INFO  10:58:12,060 - #38 ,
INFO  10:58:12,060 - #49 int
INFO  10:58:12,060 - #49 arg
INFO  10:58:12,060 - #41 )
INFO  10:58:12,060 - #49 int
INFO  10:58:12,060 - #49 c
INFO  10:58:12,061 - #36 ;
INFO  10:58:12,061 - #44 {
INFO  10:58:12,061 - #49 x
INFO  10:58:12,061 - #35 =
INFO  10:58:12,061 - #49 arg
INFO  10:58:12,061 - #39 .
INFO  10:58:12,061 - #49 a
INFO  10:58:12,061 - #39 .
INFO  10:58:12,061 - #49 b
INFO  10:58:12,061 - #39 .
INFO  10:58:12,061 - #49 c
INFO  10:58:12,061 - #36 ;
INFO  10:58:12,061 - #49 x
INFO  10:58:12,062 - #35 =
INFO  10:58:12,062 - #49 arr
INFO  10:58:12,062 - #42 [
INFO  10:58:12,062 - #46 1
INFO  10:58:12,062 - #43 ]
INFO  10:58:12,062 - #36 ;
INFO  10:58:12,062 - #14 do
INFO  10:58:12,062 - #44 {
INFO  10:58:12,062 - #19 break
INFO  10:58:12,062 - #36 ;
INFO  10:58:12,062 - #45 }
INFO  10:58:12,062 - #15 while
INFO  10:58:12,062 - #40 (
INFO  10:58:12,062 - #49 i
INFO  10:58:12,062 - #31 <
INFO  10:58:12,063 - #49 tableSize
INFO  10:58:12,063 - #38 ,
INFO  10:58:12,063 - #49 i
INFO  10:58:12,063 - #25 ++
INFO  10:58:12,063 - #41 )
INFO  10:58:12,063 - #36 ;
INFO  10:58:12,063 - #45 }
INFO  10:58:12,063 - #12 void
INFO  10:58:12,063 - #49 main
INFO  10:58:12,063 - #40 (
INFO  10:58:12,063 - #41 )
INFO  10:58:12,063 - #49 int
INFO  10:58:12,065 - #49 b
INFO  10:58:12,065 - #42 [
INFO  10:58:12,065 - #43 ]
INFO  10:58:12,065 - #42 [
ERROR 10:58:12,065 - 
Sintaksna greska na liniji 35, na koloni 23
INFO  10:58:12,065 - #43 ]
INFO  10:58:12,065 - #36 ;
INFO  10:58:12,065 - #44 {
INFO  10:58:12,066 - #9 print
INFO  10:58:12,066 - #40 (
INFO  10:58:12,067 - #49 b
INFO  10:58:12,067 - #42 [
INFO  10:58:12,067 - #43 ]
ERROR 10:58:12,067 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  10:58:12,067 - #41 )
INFO  10:58:12,067 - #36 ;
INFO  10:58:12,067 - #45 }
INFO  10:58:12,067 - #45 }
ERROR 10:58:12,067 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
