INFO  10:45:49,619 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  10:45:49,766 - #2 program
INFO  10:45:49,766 - #49 prog
INFO  10:45:49,766 - #8 const
INFO  10:45:49,769 - #49 int
INFO  10:45:49,769 - #49 tableSize
INFO  10:45:49,770 - #35 =
INFO  10:45:49,770 - #46 10
INFO  10:45:49,770 - #38 ,
INFO  10:45:49,772 - #49 c
INFO  10:45:49,772 - #35 =
INFO  10:45:49,772 - #46 3
INFO  10:45:49,772 - #38 ,
INFO  10:45:49,772 - #49 d
INFO  10:45:49,772 - #35 =
INFO  10:45:49,772 - #46 5
INFO  10:45:49,772 - #36 ;
INFO  10:45:49,772 - #8 const
INFO  10:45:49,775 - #49 bool
INFO  10:45:49,775 - #49 a
INFO  10:45:49,775 - #35 =
INFO  10:45:49,775 - #47 true
INFO  10:45:49,777 - #38 ,
INFO  10:45:49,777 - #49 b
INFO  10:45:49,777 - #35 =
INFO  10:45:49,778 - #47 false
INFO  10:45:49,778 - #36 ;
INFO  10:45:49,778 - #8 const
INFO  10:45:49,778 - #49 char
INFO  10:45:49,778 - #49 f
INFO  10:45:49,778 - #35 =
INFO  10:45:49,778 - #48 a
INFO  10:45:49,778 - #36 ;
INFO  10:45:49,778 - #49 int
INFO  10:45:49,778 - #49 arr
INFO  10:45:49,778 - #42 [
INFO  10:45:49,778 - #43 ]
INFO  10:45:49,778 - #38 ,
INFO  10:45:49,783 - #49 i
INFO  10:45:49,783 - #36 ;
INFO  10:45:49,784 - #49 int
INFO  10:45:49,785 - #49 aa
INFO  10:45:49,785 - #38 ,
INFO  10:45:49,785 - #49 bb
INFO  10:45:49,785 - #38 ,
INFO  10:45:49,785 - #49 cc
INFO  10:45:49,785 - #38 ,
INFO  10:45:49,785 - #49 dd
INFO  10:45:49,785 - #36 ;
INFO  10:45:49,785 - #49 bool
INFO  10:45:49,785 - #49 o
INFO  10:45:49,785 - #38 ,
INFO  10:45:49,786 - #49 g
INFO  10:45:49,786 - #38 ,
INFO  10:45:49,786 - #49 h
INFO  10:45:49,786 - #36 ;
INFO  10:45:49,786 - #49 char
INFO  10:45:49,786 - #49 n
INFO  10:45:49,786 - #38 ,
INFO  10:45:49,786 - #49 j
INFO  10:45:49,786 - #38 ,
INFO  10:45:49,786 - #49 k
INFO  10:45:49,786 - #36 ;
INFO  10:45:49,786 - #44 {
INFO  10:45:49,786 - #12 void
INFO  10:45:49,788 - #49 fa
INFO  10:45:49,789 - #40 (
INFO  10:45:49,790 - #49 char
INFO  10:45:49,791 - #49 ch
INFO  10:45:49,791 - #38 ,
INFO  10:45:49,792 - #49 int
INFO  10:45:49,792 - #49 arg
INFO  10:45:49,792 - #41 )
INFO  10:45:49,792 - #49 int
INFO  10:45:49,794 - #49 c
INFO  10:45:49,794 - #36 ;
INFO  10:45:49,794 - #44 {
INFO  10:45:49,795 - #49 x
INFO  10:45:49,797 - #35 =
INFO  10:45:49,799 - #49 arg
INFO  10:45:49,801 - #39 .
INFO  10:45:49,801 - #49 a
INFO  10:45:49,801 - #39 .
INFO  10:45:49,801 - #49 b
INFO  10:45:49,801 - #39 .
INFO  10:45:49,801 - #49 c
INFO  10:45:49,801 - #36 ;
INFO  10:45:49,806 - #49 x
INFO  10:45:49,806 - #35 =
INFO  10:45:49,806 - #49 arr
INFO  10:45:49,806 - #42 [
INFO  10:45:49,807 - #46 1
INFO  10:45:49,807 - #43 ]
INFO  10:45:49,807 - #36 ;
INFO  10:45:49,807 - #14 do
INFO  10:45:49,807 - #44 {
INFO  10:45:49,808 - #19 break
INFO  10:45:49,808 - #36 ;
INFO  10:45:49,808 - #45 }
INFO  10:45:49,809 - #15 while
INFO  10:45:49,810 - #40 (
INFO  10:45:49,812 - #49 i
INFO  10:45:49,812 - #31 <
INFO  10:45:49,812 - #49 tableSize
INFO  10:45:49,815 - #38 ,
INFO  10:45:49,818 - #49 i
INFO  10:45:49,818 - #25 ++
INFO  10:45:49,818 - #41 )
INFO  10:45:49,819 - #36 ;
INFO  10:45:49,819 - #45 }
INFO  10:45:49,820 - #12 void
INFO  10:45:49,821 - #49 fa2
INFO  10:45:49,821 - #40 (
INFO  10:45:49,821 - #49 char
INFO  10:45:49,821 - #49 ch
INFO  10:45:49,821 - #38 ,
INFO  10:45:49,821 - #49 int
INFO  10:45:49,821 - #49 j
INFO  10:45:49,822 - #42 [
INFO  10:45:49,822 - #43 ]
INFO  10:45:49,822 - #38 ,
INFO  10:45:49,822 - #49 int
INFO  10:45:49,822 - #49 arg
INFO  10:45:49,822 - #41 )
INFO  10:45:49,822 - #49 int
INFO  10:45:49,822 - #49 c
INFO  10:45:49,822 - #36 ;
INFO  10:45:49,822 - #44 {
INFO  10:45:49,823 - #49 x
INFO  10:45:49,823 - #35 =
INFO  10:45:49,823 - #49 arg
INFO  10:45:49,823 - #39 .
INFO  10:45:49,823 - #49 a
INFO  10:45:49,823 - #39 .
INFO  10:45:49,823 - #49 b
INFO  10:45:49,823 - #39 .
INFO  10:45:49,823 - #49 c
INFO  10:45:49,823 - #36 ;
INFO  10:45:49,823 - #49 x
INFO  10:45:49,823 - #35 =
INFO  10:45:49,823 - #49 arr
INFO  10:45:49,823 - #42 [
INFO  10:45:49,823 - #46 1
INFO  10:45:49,823 - #43 ]
INFO  10:45:49,823 - #36 ;
INFO  10:45:49,824 - #14 do
INFO  10:45:49,824 - #44 {
INFO  10:45:49,824 - #19 break
INFO  10:45:49,824 - #36 ;
INFO  10:45:49,824 - #45 }
INFO  10:45:49,824 - #15 while
INFO  10:45:49,824 - #40 (
INFO  10:45:49,824 - #49 i
INFO  10:45:49,824 - #31 <
INFO  10:45:49,824 - #49 tableSize
INFO  10:45:49,824 - #38 ,
INFO  10:45:49,824 - #49 i
INFO  10:45:49,824 - #25 ++
INFO  10:45:49,824 - #41 )
INFO  10:45:49,824 - #36 ;
INFO  10:45:49,824 - #45 }
INFO  10:45:49,824 - #12 void
INFO  10:45:49,824 - #49 main
INFO  10:45:49,824 - #40 (
INFO  10:45:49,824 - #41 )
INFO  10:45:49,825 - #49 int
INFO  10:45:49,826 - #49 b
INFO  10:45:49,826 - #42 [
INFO  10:45:49,826 - #43 ]
INFO  10:45:49,826 - #36 ;
INFO  10:45:49,826 - #44 {
INFO  10:45:49,826 - #9 print
INFO  10:45:49,826 - #40 (
INFO  10:45:49,826 - #49 b
INFO  10:45:49,826 - #42 [
INFO  10:45:49,826 - #49 a
INFO  10:45:49,826 - #38 ,
ERROR 10:45:49,826 - 
Sintaksna greska na liniji 36, na koloni 17
INFO  10:45:49,826 - #49 b
INFO  10:45:49,827 - #43 ]
INFO  10:45:49,827 - #41 )
INFO  10:45:49,827 - #36 ;
INFO  10:45:49,828 - #45 }
INFO  10:45:49,828 - #45 }
ERROR 10:45:49,828 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
