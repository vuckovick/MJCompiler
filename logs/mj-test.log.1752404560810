INFO  13:02:07,375 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:02:07,521 - #2 program
INFO  13:02:07,522 - #49 prog
INFO  13:02:07,522 - #8 const
INFO  13:02:07,525 - #49 int
INFO  13:02:07,525 - #49 tableSize
INFO  13:02:07,527 - #35 =
INFO  13:02:07,527 - #46 10
INFO  13:02:07,527 - #38 ,
INFO  13:02:07,529 - #49 c
INFO  13:02:07,530 - #35 =
INFO  13:02:07,530 - #46 3
INFO  13:02:07,530 - #38 ,
INFO  13:02:07,530 - #49 d
INFO  13:02:07,530 - #35 =
INFO  13:02:07,530 - #46 5
INFO  13:02:07,530 - #36 ;
INFO  13:02:07,531 - #8 const
INFO  13:02:07,532 - #49 bool
INFO  13:02:07,533 - #49 a
INFO  13:02:07,533 - #35 =
INFO  13:02:07,533 - #47 true
INFO  13:02:07,535 - #38 ,
INFO  13:02:07,535 - #49 b
INFO  13:02:07,536 - #35 =
INFO  13:02:07,536 - #47 false
INFO  13:02:07,536 - #36 ;
INFO  13:02:07,536 - #8 const
INFO  13:02:07,536 - #49 char
INFO  13:02:07,536 - #49 f
INFO  13:02:07,536 - #35 =
INFO  13:02:07,537 - #48 a
INFO  13:02:07,537 - #36 ;
INFO  13:02:07,537 - #49 int
INFO  13:02:07,537 - #49 arr
INFO  13:02:07,537 - #42 [
INFO  13:02:07,537 - #43 ]
INFO  13:02:07,540 - #38 ,
INFO  13:02:07,544 - #49 i
INFO  13:02:07,544 - #36 ;
INFO  13:02:07,546 - #49 int
INFO  13:02:07,547 - #49 aa
INFO  13:02:07,547 - #38 ,
INFO  13:02:07,547 - #49 bb
INFO  13:02:07,547 - #38 ,
INFO  13:02:07,547 - #49 cc
INFO  13:02:07,547 - #38 ,
INFO  13:02:07,547 - #49 dd
INFO  13:02:07,547 - #36 ;
INFO  13:02:07,547 - #49 bool
INFO  13:02:07,548 - #49 o
INFO  13:02:07,548 - #38 ,
INFO  13:02:07,548 - #49 g
INFO  13:02:07,548 - #38 ,
INFO  13:02:07,548 - #49 h
INFO  13:02:07,548 - #36 ;
INFO  13:02:07,548 - #49 char
INFO  13:02:07,548 - #49 n
INFO  13:02:07,548 - #38 ,
INFO  13:02:07,549 - #49 j
INFO  13:02:07,549 - #38 ,
INFO  13:02:07,549 - #49 k
INFO  13:02:07,549 - #36 ;
INFO  13:02:07,549 - #44 {
INFO  13:02:07,549 - #12 void
INFO  13:02:07,551 - #49 fa
INFO  13:02:07,552 - #40 (
INFO  13:02:07,554 - #49 char
INFO  13:02:07,554 - #49 ch
INFO  13:02:07,554 - #38 ,
INFO  13:02:07,555 - #49 int
INFO  13:02:07,555 - #49 arg
INFO  13:02:07,555 - #41 )
INFO  13:02:07,555 - #49 int
INFO  13:02:07,557 - #49 c
INFO  13:02:07,557 - #36 ;
INFO  13:02:07,557 - #44 {
INFO  13:02:07,559 - #49 x
INFO  13:02:07,560 - #35 =
INFO  13:02:07,562 - #49 arg
INFO  13:02:07,564 - #39 .
INFO  13:02:07,564 - #49 a
INFO  13:02:07,565 - #39 .
INFO  13:02:07,565 - #49 b
INFO  13:02:07,565 - #39 .
INFO  13:02:07,565 - #49 c
INFO  13:02:07,565 - #36 ;
INFO  13:02:07,571 - #49 x
INFO  13:02:07,572 - #35 =
INFO  13:02:07,572 - #49 arr
INFO  13:02:07,572 - #42 [
INFO  13:02:07,572 - #46 1
INFO  13:02:07,572 - #43 ]
INFO  13:02:07,572 - #36 ;
INFO  13:02:07,572 - #14 do
INFO  13:02:07,572 - #44 {
INFO  13:02:07,574 - #19 break
INFO  13:02:07,574 - #36 ;
INFO  13:02:07,574 - #45 }
INFO  13:02:07,576 - #15 while
INFO  13:02:07,576 - #40 (
INFO  13:02:07,576 - #49 i
INFO  13:02:07,576 - #31 <
INFO  13:02:07,576 - #49 tableSize
INFO  13:02:07,579 - #38 ,
INFO  13:02:07,584 - #49 i
INFO  13:02:07,584 - #25 ++
INFO  13:02:07,584 - #41 )
INFO  13:02:07,585 - #36 ;
INFO  13:02:07,585 - #45 }
INFO  13:02:07,586 - #12 void
INFO  13:02:07,587 - #49 fa2
INFO  13:02:07,587 - #40 (
INFO  13:02:07,587 - #49 char
INFO  13:02:07,588 - #49 ch
INFO  13:02:07,588 - #38 ,
INFO  13:02:07,588 - #49 int
INFO  13:02:07,588 - #49 j
INFO  13:02:07,588 - #42 [
INFO  13:02:07,588 - #43 ]
INFO  13:02:07,588 - #38 ,
INFO  13:02:07,588 - #49 int
INFO  13:02:07,588 - #49 arg
INFO  13:02:07,589 - #41 )
INFO  13:02:07,589 - #49 int
INFO  13:02:07,589 - #49 c
INFO  13:02:07,589 - #36 ;
INFO  13:02:07,590 - #44 {
INFO  13:02:07,590 - #49 x
INFO  13:02:07,590 - #35 =
INFO  13:02:07,590 - #49 arg
INFO  13:02:07,590 - #39 .
INFO  13:02:07,590 - #49 a
INFO  13:02:07,590 - #39 .
INFO  13:02:07,590 - #49 b
INFO  13:02:07,590 - #39 .
INFO  13:02:07,590 - #49 c
INFO  13:02:07,590 - #36 ;
INFO  13:02:07,591 - #49 x
INFO  13:02:07,591 - #35 =
INFO  13:02:07,591 - #49 arr
INFO  13:02:07,591 - #42 [
INFO  13:02:07,591 - #46 1
INFO  13:02:07,591 - #43 ]
INFO  13:02:07,591 - #36 ;
INFO  13:02:07,591 - #14 do
INFO  13:02:07,592 - #44 {
INFO  13:02:07,592 - #19 break
INFO  13:02:07,592 - #36 ;
INFO  13:02:07,592 - #45 }
INFO  13:02:07,592 - #15 while
INFO  13:02:07,592 - #40 (
INFO  13:02:07,592 - #49 i
INFO  13:02:07,592 - #31 <
INFO  13:02:07,592 - #49 tableSize
INFO  13:02:07,592 - #38 ,
INFO  13:02:07,593 - #49 i
INFO  13:02:07,593 - #25 ++
INFO  13:02:07,593 - #41 )
INFO  13:02:07,593 - #36 ;
INFO  13:02:07,593 - #45 }
INFO  13:02:07,593 - #12 void
INFO  13:02:07,593 - #49 main
INFO  13:02:07,593 - #40 (
INFO  13:02:07,593 - #41 )
INFO  13:02:07,593 - #49 int
INFO  13:02:07,595 - #49 b
INFO  13:02:07,595 - #42 [
INFO  13:02:07,595 - #43 ]
INFO  13:02:07,595 - #36 ;
INFO  13:02:07,595 - #44 {
INFO  13:02:07,595 - #9 print
INFO  13:02:07,595 - #40 (
INFO  13:02:07,595 - #49 b
INFO  13:02:07,595 - #42 [
INFO  13:02:07,595 - #43 ]
ERROR 13:02:07,595 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  13:02:07,595 - #41 )
INFO  13:02:07,596 - #36 ;
INFO  13:02:07,596 - #45 }
INFO  13:02:07,597 - #45 }
ERROR 13:02:07,597 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
