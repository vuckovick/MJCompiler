INFO  16:31:19,072 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  16:31:19,184 - #2 program
INFO  16:31:19,184 - #49 p
INFO  16:31:19,184 - #8 const
INFO  16:31:19,185 - #49 int
INFO  16:31:19,185 - #49 tableSize
INFO  16:31:19,185 - #35 =
INFO  16:31:19,185 - #46 10
INFO  16:31:19,185 - #36 ;
INFO  16:31:19,186 - #49 set
INFO  16:31:19,186 - #49 s1
INFO  16:31:19,186 - #36 ;
INFO  16:31:19,188 - #3 class
INFO  16:31:19,189 - #49 Table
INFO  16:31:19,189 - #44 {
INFO  16:31:19,189 - #49 int
INFO  16:31:19,190 - #49 pos
INFO  16:31:19,190 - #42 [
INFO  16:31:19,190 - #43 ]
INFO  16:31:19,190 - #38 ,
INFO  16:31:19,191 - #49 a
INFO  16:31:19,191 - #20 +
ERROR 16:31:19,193 - 
Sintaksna greska na liniji 5, na koloni 12
INFO  16:31:19,193 - #38 ,
INFO  16:31:19,194 - #49 b
INFO  16:31:19,194 - #38 ,
INFO  16:31:19,197 - #49 c
INFO  16:31:19,197 - #36 ;
INFO  16:31:19,197 - #44 {
INFO  16:31:19,197 - #12 void
INFO  16:31:19,197 - #49 setfactor
INFO  16:31:19,197 - #40 (
INFO  16:31:19,197 - #49 int
INFO  16:31:19,197 - #49 factor
INFO  16:31:19,197 - #41 )
INFO  16:31:19,197 - #44 {
INFO  16:31:19,197 - #49 this
INFO  16:31:19,199 - #39 .
INFO  16:31:19,199 - #49 factor
INFO  16:31:19,199 - #35 =
INFO  16:31:19,199 - #49 factor
INFO  16:31:19,199 - #36 ;
INFO  16:31:19,200 - #45 }
INFO  16:31:19,200 - #12 void
INFO  16:31:19,200 - #49 putp
INFO  16:31:19,200 - #40 (
INFO  16:31:19,200 - #49 int
INFO  16:31:19,200 - #49 a
INFO  16:31:19,200 - #38 ,
INFO  16:31:19,200 - #49 int
INFO  16:31:19,200 - #49 idx
INFO  16:31:19,200 - #41 )
INFO  16:31:19,200 - #44 {
INFO  16:31:19,200 - #49 this
INFO  16:31:19,200 - #39 .
INFO  16:31:19,200 - #49 pos
INFO  16:31:19,200 - #42 [
INFO  16:31:19,201 - #49 idx
INFO  16:31:19,201 - #43 ]
INFO  16:31:19,201 - #35 =
INFO  16:31:19,201 - #49 a
INFO  16:31:19,201 - #36 ;
INFO  16:31:19,201 - #45 }
INFO  16:31:19,201 - #12 void
INFO  16:31:19,201 - #49 putn
INFO  16:31:19,201 - #40 (
INFO  16:31:19,201 - #49 int
INFO  16:31:19,201 - #49 a
INFO  16:31:19,201 - #38 ,
INFO  16:31:19,201 - #49 int
INFO  16:31:19,202 - #49 idx
INFO  16:31:19,202 - #41 )
INFO  16:31:19,202 - #44 {
INFO  16:31:19,202 - #49 this
INFO  16:31:19,202 - #39 .
INFO  16:31:19,202 - #49 neg
INFO  16:31:19,202 - #42 [
INFO  16:31:19,202 - #49 idx
INFO  16:31:19,202 - #43 ]
INFO  16:31:19,202 - #35 =
INFO  16:31:19,202 - #49 a
INFO  16:31:19,202 - #36 ;
INFO  16:31:19,202 - #45 }
INFO  16:31:19,202 - #49 int
INFO  16:31:19,202 - #49 getp
INFO  16:31:19,202 - #40 (
INFO  16:31:19,203 - #49 int
INFO  16:31:19,203 - #49 idx
INFO  16:31:19,203 - #41 )
INFO  16:31:19,203 - #44 {
INFO  16:31:19,203 - #13 return
INFO  16:31:19,203 - #49 pos
INFO  16:31:19,203 - #42 [
INFO  16:31:19,203 - #49 idx
INFO  16:31:19,203 - #43 ]
INFO  16:31:19,203 - #36 ;
INFO  16:31:19,203 - #45 }
INFO  16:31:19,203 - #49 int
INFO  16:31:19,204 - #49 getn
INFO  16:31:19,204 - #40 (
INFO  16:31:19,204 - #49 int
INFO  16:31:19,204 - #49 idx
INFO  16:31:19,204 - #41 )
INFO  16:31:19,204 - #44 {
INFO  16:31:19,204 - #13 return
INFO  16:31:19,204 - #49 neg
INFO  16:31:19,204 - #42 [
INFO  16:31:19,205 - #49 idx
INFO  16:31:19,205 - #43 ]
INFO  16:31:19,205 - #36 ;
INFO  16:31:19,205 - #45 }
INFO  16:31:19,205 - #45 }
INFO  16:31:19,205 - #45 }
INFO  16:31:19,205 - #49 Table
INFO  16:31:19,205 - #49 val
INFO  16:31:19,205 - #36 ;
INFO  16:31:19,205 - #49 int
INFO  16:31:19,205 - #49 rows
INFO  16:31:19,205 - #38 ,
INFO  16:31:19,205 - #49 columns
INFO  16:31:19,205 - #36 ;
INFO  16:31:19,205 - #44 {
INFO  16:31:19,205 - #12 void
INFO  16:31:19,205 - #49 f
INFO  16:31:19,205 - #40 (
INFO  16:31:19,205 - #49 char
INFO  16:31:19,206 - #49 ch
INFO  16:31:19,206 - #38 ,
INFO  16:31:19,206 - #49 int
INFO  16:31:19,206 - #49 a
INFO  16:31:19,206 - #38 ,
INFO  16:31:19,206 - #49 int
INFO  16:31:19,206 - #49 arg
INFO  16:31:19,206 - #41 )
INFO  16:31:19,206 - #49 int
INFO  16:31:19,206 - #49 x
INFO  16:31:19,206 - #36 ;
INFO  16:31:19,206 - #44 {
INFO  16:31:19,206 - #49 x
INFO  16:31:19,206 - #35 =
INFO  16:31:19,206 - #49 arg
INFO  16:31:19,206 - #36 ;
INFO  16:31:19,206 - #45 }
INFO  16:31:19,206 - #12 void
INFO  16:31:19,206 - #49 main
INFO  16:31:19,207 - #40 (
INFO  16:31:19,207 - #41 )
INFO  16:31:19,207 - #49 int
INFO  16:31:19,207 - #49 x
INFO  16:31:19,207 - #38 ,
INFO  16:31:19,207 - #49 i
INFO  16:31:19,207 - #36 ;
INFO  16:31:19,207 - #49 char
INFO  16:31:19,207 - #49 c
INFO  16:31:19,207 - #36 ;
INFO  16:31:19,207 - #49 int
INFO  16:31:19,207 - #49 arr
INFO  16:31:19,207 - #42 [
INFO  16:31:19,207 - #43 ]
INFO  16:31:19,207 - #36 ;
INFO  16:31:19,207 - #44 {
INFO  16:31:19,207 - #49 val
INFO  16:31:19,207 - #35 =
INFO  16:31:19,207 - #11 new
INFO  16:31:19,207 - #49 Table
INFO  16:31:19,207 - #40 (
INFO  16:31:19,208 - #41 )
INFO  16:31:19,208 - #36 ;
INFO  16:31:19,208 - #49 val
INFO  16:31:19,208 - #39 .
INFO  16:31:19,208 - #49 setfactor
INFO  16:31:19,208 - #40 (
INFO  16:31:19,208 - #46 2
INFO  16:31:19,208 - #41 )
INFO  16:31:19,208 - #36 ;
INFO  16:31:19,208 - #49 s1
INFO  16:31:19,208 - #35 =
INFO  16:31:19,208 - #11 new
INFO  16:31:19,208 - #49 set
INFO  16:31:19,208 - #42 [
INFO  16:31:19,208 - #46 5
INFO  16:31:19,208 - #43 ]
INFO  16:31:19,208 - #36 ;
INFO  16:31:19,208 - #49 s1
INFO  16:31:19,208 - #39 .
INFO  16:31:19,208 - #49 add
INFO  16:31:19,208 - #40 (
INFO  16:31:19,209 - #46 5
INFO  16:31:19,209 - #41 )
INFO  16:31:19,209 - #36 ;
INFO  16:31:19,209 - #49 s1
INFO  16:31:19,209 - #39 .
INFO  16:31:19,209 - #49 add
INFO  16:31:19,209 - #40 (
INFO  16:31:19,209 - #46 10
INFO  16:31:19,209 - #41 )
INFO  16:31:19,209 - #36 ;
INFO  16:31:19,209 - #9 print
INFO  16:31:19,209 - #40 (
INFO  16:31:19,209 - #49 s1
INFO  16:31:19,209 - #41 )
INFO  16:31:19,209 - #36 ;
INFO  16:31:19,209 - #49 arr
INFO  16:31:19,209 - #35 =
INFO  16:31:19,209 - #11 new
INFO  16:31:19,209 - #49 int
INFO  16:31:19,209 - #42 [
INFO  16:31:19,209 - #46 3
INFO  16:31:19,210 - #43 ]
INFO  16:31:19,210 - #36 ;
INFO  16:31:19,210 - #49 i
INFO  16:31:19,210 - #35 =
INFO  16:31:19,210 - #46 0
INFO  16:31:19,210 - #36 ;
INFO  16:31:19,210 - #14 do
INFO  16:31:19,211 - #49 arr
INFO  16:31:19,211 - #42 [
INFO  16:31:19,211 - #49 i
INFO  16:31:19,211 - #43 ]
INFO  16:31:19,211 - #35 =
INFO  16:31:19,211 - #49 i
INFO  16:31:19,211 - #36 ;
INFO  16:31:19,211 - #15 while
INFO  16:31:19,211 - #40 (
INFO  16:31:19,211 - #49 i
INFO  16:31:19,211 - #31 <
INFO  16:31:19,211 - #46 3
INFO  16:31:19,211 - #38 ,
INFO  16:31:19,211 - #49 i
INFO  16:31:19,211 - #25 ++
INFO  16:31:19,211 - #41 )
INFO  16:31:19,211 - #36 ;
INFO  16:31:19,211 - #49 i
INFO  16:31:19,211 - #35 =
INFO  16:31:19,212 - #46 0
INFO  16:31:19,212 - #36 ;
INFO  16:31:19,212 - #14 do
INFO  16:31:19,212 - #9 print
INFO  16:31:19,212 - #40 (
INFO  16:31:19,212 - #49 arr
INFO  16:31:19,212 - #42 [
INFO  16:31:19,212 - #49 i
INFO  16:31:19,212 - #43 ]
INFO  16:31:19,212 - #41 )
INFO  16:31:19,212 - #36 ;
INFO  16:31:19,212 - #15 while
INFO  16:31:19,212 - #40 (
INFO  16:31:19,212 - #49 i
INFO  16:31:19,212 - #31 <
INFO  16:31:19,212 - #46 3
INFO  16:31:19,212 - #38 ,
INFO  16:31:19,212 - #49 i
INFO  16:31:19,212 - #25 ++
INFO  16:31:19,212 - #41 )
INFO  16:31:19,212 - #36 ;
INFO  16:31:19,213 - #49 val
INFO  16:31:19,213 - #39 .
INFO  16:31:19,213 - #49 pos
INFO  16:31:19,213 - #35 =
INFO  16:31:19,213 - #11 new
INFO  16:31:19,213 - #49 int
INFO  16:31:19,213 - #42 [
INFO  16:31:19,213 - #49 tableSize
INFO  16:31:19,213 - #43 ]
INFO  16:31:19,213 - #36 ;
INFO  16:31:19,213 - #49 val
INFO  16:31:19,213 - #39 .
INFO  16:31:19,213 - #49 neg
INFO  16:31:19,213 - #35 =
INFO  16:31:19,213 - #11 new
INFO  16:31:19,213 - #49 int
INFO  16:31:19,213 - #42 [
INFO  16:31:19,213 - #49 tableSize
INFO  16:31:19,213 - #43 ]
INFO  16:31:19,213 - #36 ;
INFO  16:31:19,213 - #10 read
INFO  16:31:19,213 - #40 (
INFO  16:31:19,213 - #49 x
INFO  16:31:19,214 - #41 )
INFO  16:31:19,214 - #36 ;
INFO  16:31:19,214 - #49 i
INFO  16:31:19,214 - #35 =
INFO  16:31:19,214 - #46 0
INFO  16:31:19,214 - #36 ;
INFO  16:31:19,214 - #14 do
INFO  16:31:19,214 - #44 {
INFO  16:31:19,214 - #49 val
INFO  16:31:19,214 - #39 .
INFO  16:31:19,214 - #49 putp
INFO  16:31:19,214 - #40 (
INFO  16:31:19,214 - #46 0
INFO  16:31:19,214 - #38 ,
INFO  16:31:19,214 - #49 i
INFO  16:31:19,214 - #41 )
INFO  16:31:19,214 - #36 ;
INFO  16:31:19,214 - #49 val
INFO  16:31:19,214 - #39 .
INFO  16:31:19,214 - #49 putn
INFO  16:31:19,214 - #40 (
INFO  16:31:19,214 - #46 0
INFO  16:31:19,214 - #38 ,
INFO  16:31:19,214 - #49 i
INFO  16:31:19,214 - #41 )
INFO  16:31:19,214 - #36 ;
INFO  16:31:19,214 - #45 }
INFO  16:31:19,214 - #15 while
INFO  16:31:19,214 - #40 (
INFO  16:31:19,214 - #49 i
INFO  16:31:19,214 - #31 <
INFO  16:31:19,214 - #49 tableSize
INFO  16:31:19,214 - #38 ,
INFO  16:31:19,215 - #49 i
INFO  16:31:19,215 - #25 ++
INFO  16:31:19,215 - #41 )
INFO  16:31:19,215 - #36 ;
INFO  16:31:19,215 - #49 f
INFO  16:31:19,215 - #40 (
INFO  16:31:19,215 - #49 c
INFO  16:31:19,215 - #38 ,
INFO  16:31:19,215 - #49 x
INFO  16:31:19,215 - #38 ,
INFO  16:31:19,215 - #49 i
INFO  16:31:19,215 - #41 )
INFO  16:31:19,215 - #36 ;
INFO  16:31:19,215 - #10 read
INFO  16:31:19,215 - #40 (
INFO  16:31:19,215 - #49 rows
INFO  16:31:19,215 - #41 )
INFO  16:31:19,215 - #36 ;
INFO  16:31:19,215 - #49 x
INFO  16:31:19,215 - #35 =
INFO  16:31:19,215 - #49 rows
INFO  16:31:19,215 - #36 ;
INFO  16:31:19,216 - #14 do
INFO  16:31:19,216 - #44 {
INFO  16:31:19,216 - #16 if
INFO  16:31:19,216 - #40 (
INFO  16:31:19,216 - #49 x
INFO  16:31:19,216 - #32 <=
INFO  16:31:19,216 - #46 0
INFO  16:31:19,216 - #41 )
INFO  16:31:19,216 - #19 break
INFO  16:31:19,216 - #36 ;
INFO  16:31:19,216 - #16 if
INFO  16:31:19,216 - #40 (
INFO  16:31:19,216 - #46 0
INFO  16:31:19,216 - #32 <=
INFO  16:31:19,216 - #49 x
INFO  16:31:19,216 - #33 &&
INFO  16:31:19,216 - #49 x
INFO  16:31:19,216 - #31 <
INFO  16:31:19,216 - #49 tableSize
INFO  16:31:19,216 - #41 )
INFO  16:31:19,216 - #44 {
INFO  16:31:19,216 - #49 val
INFO  16:31:19,216 - #39 .
INFO  16:31:19,216 - #49 putp
INFO  16:31:19,217 - #40 (
INFO  16:31:19,217 - #49 val
INFO  16:31:19,217 - #39 .
INFO  16:31:19,217 - #49 getp
INFO  16:31:19,217 - #40 (
INFO  16:31:19,217 - #49 x
INFO  16:31:19,217 - #41 )
INFO  16:31:19,217 - #20 +
INFO  16:31:19,217 - #46 1
INFO  16:31:19,217 - #41 )
INFO  16:31:19,217 - #36 ;
INFO  16:31:19,217 - #45 }
INFO  16:31:19,217 - #17 else
INFO  16:31:19,217 - #16 if
INFO  16:31:19,217 - #40 (
INFO  16:31:19,217 - #21 -
INFO  16:31:19,217 - #49 tableSize
INFO  16:31:19,217 - #31 <
INFO  16:31:19,217 - #49 x
INFO  16:31:19,217 - #33 &&
INFO  16:31:19,217 - #49 x
INFO  16:31:19,217 - #31 <
INFO  16:31:19,217 - #46 0
INFO  16:31:19,217 - #41 )
INFO  16:31:19,217 - #44 {
INFO  16:31:19,218 - #49 val
INFO  16:31:19,218 - #39 .
INFO  16:31:19,218 - #49 putn
INFO  16:31:19,218 - #40 (
INFO  16:31:19,218 - #49 val
INFO  16:31:19,218 - #39 .
INFO  16:31:19,218 - #49 getn
INFO  16:31:19,218 - #40 (
INFO  16:31:19,218 - #21 -
INFO  16:31:19,218 - #49 x
INFO  16:31:19,218 - #41 )
INFO  16:31:19,218 - #20 +
INFO  16:31:19,218 - #46 1
INFO  16:31:19,218 - #41 )
INFO  16:31:19,218 - #36 ;
INFO  16:31:19,218 - #45 }
INFO  16:31:19,218 - #10 read
INFO  16:31:19,218 - #40 (
INFO  16:31:19,218 - #49 x
INFO  16:31:19,218 - #41 )
INFO  16:31:19,218 - #36 ;
INFO  16:31:19,218 - #45 }
INFO  16:31:19,218 - #15 while
INFO  16:31:19,218 - #40 (
INFO  16:31:19,218 - #41 )
INFO  16:31:19,218 - #36 ;
INFO  16:31:19,218 - #45 }
INFO  16:31:19,218 - #45 }
ERROR 16:31:19,219 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
