INFO  12:58:20,944 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  12:58:21,103 - #2 program
INFO  12:58:21,103 - #49 prog
INFO  12:58:21,103 - #8 const
INFO  12:58:21,107 - #49 int
INFO  12:58:21,107 - #49 tableSize
INFO  12:58:21,108 - #35 =
INFO  12:58:21,109 - #46 10
INFO  12:58:21,109 - #38 ,
INFO  12:58:21,111 - #49 c
INFO  12:58:21,111 - #35 =
INFO  12:58:21,111 - #46 3
INFO  12:58:21,111 - #38 ,
INFO  12:58:21,111 - #49 d
INFO  12:58:21,111 - #35 =
INFO  12:58:21,111 - #46 5
INFO  12:58:21,112 - #36 ;
INFO  12:58:21,112 - #8 const
INFO  12:58:21,114 - #49 bool
INFO  12:58:21,114 - #49 a
INFO  12:58:21,114 - #35 =
INFO  12:58:21,114 - #47 true
INFO  12:58:21,117 - #38 ,
INFO  12:58:21,117 - #49 b
INFO  12:58:21,117 - #35 =
INFO  12:58:21,117 - #47 false
INFO  12:58:21,117 - #36 ;
INFO  12:58:21,117 - #8 const
INFO  12:58:21,117 - #49 char
INFO  12:58:21,117 - #49 f
INFO  12:58:21,117 - #35 =
INFO  12:58:21,118 - #48 a
INFO  12:58:21,118 - #36 ;
INFO  12:58:21,118 - #49 int
INFO  12:58:21,118 - #49 arr
INFO  12:58:21,118 - #42 [
INFO  12:58:21,119 - #43 ]
INFO  12:58:21,122 - #38 ,
INFO  12:58:21,126 - #49 i
INFO  12:58:21,126 - #36 ;
INFO  12:58:21,127 - #49 int
INFO  12:58:21,128 - #49 aa
INFO  12:58:21,128 - #38 ,
INFO  12:58:21,128 - #49 bb
INFO  12:58:21,128 - #38 ,
INFO  12:58:21,128 - #49 cc
INFO  12:58:21,129 - #38 ,
INFO  12:58:21,129 - #49 dd
INFO  12:58:21,129 - #36 ;
INFO  12:58:21,129 - #49 bool
INFO  12:58:21,129 - #49 o
INFO  12:58:21,129 - #38 ,
INFO  12:58:21,130 - #49 g
INFO  12:58:21,130 - #38 ,
INFO  12:58:21,130 - #49 h
INFO  12:58:21,130 - #36 ;
INFO  12:58:21,130 - #49 char
INFO  12:58:21,130 - #49 n
INFO  12:58:21,130 - #38 ,
INFO  12:58:21,130 - #49 j
INFO  12:58:21,130 - #38 ,
INFO  12:58:21,130 - #49 k
INFO  12:58:21,131 - #36 ;
INFO  12:58:21,131 - #44 {
INFO  12:58:21,131 - #12 void
INFO  12:58:21,133 - #49 fa
INFO  12:58:21,135 - #40 (
INFO  12:58:21,136 - #49 char
INFO  12:58:21,136 - #49 ch
INFO  12:58:21,137 - #38 ,
INFO  12:58:21,138 - #49 int
INFO  12:58:21,138 - #49 arg
INFO  12:58:21,138 - #41 )
INFO  12:58:21,138 - #49 int
INFO  12:58:21,140 - #49 c
INFO  12:58:21,140 - #36 ;
INFO  12:58:21,140 - #44 {
INFO  12:58:21,141 - #49 x
INFO  12:58:21,142 - #35 =
INFO  12:58:21,144 - #49 arg
INFO  12:58:21,145 - #39 .
INFO  12:58:21,146 - #49 a
INFO  12:58:21,146 - #39 .
INFO  12:58:21,146 - #49 b
INFO  12:58:21,146 - #39 .
INFO  12:58:21,146 - #49 c
INFO  12:58:21,146 - #36 ;
INFO  12:58:21,150 - #49 x
INFO  12:58:21,151 - #35 =
INFO  12:58:21,151 - #49 arr
INFO  12:58:21,151 - #42 [
INFO  12:58:21,151 - #46 1
INFO  12:58:21,151 - #43 ]
INFO  12:58:21,151 - #36 ;
INFO  12:58:21,151 - #14 do
INFO  12:58:21,152 - #44 {
INFO  12:58:21,154 - #19 break
INFO  12:58:21,154 - #36 ;
INFO  12:58:21,154 - #45 }
INFO  12:58:21,155 - #15 while
INFO  12:58:21,155 - #40 (
INFO  12:58:21,155 - #49 i
INFO  12:58:21,155 - #31 <
INFO  12:58:21,155 - #49 tableSize
INFO  12:58:21,158 - #38 ,
INFO  12:58:21,163 - #49 i
INFO  12:58:21,163 - #25 ++
INFO  12:58:21,163 - #41 )
INFO  12:58:21,164 - #36 ;
INFO  12:58:21,165 - #45 }
INFO  12:58:21,165 - #12 void
INFO  12:58:21,168 - #49 fa2
INFO  12:58:21,168 - #40 (
INFO  12:58:21,168 - #49 char
INFO  12:58:21,168 - #49 ch
INFO  12:58:21,168 - #38 ,
INFO  12:58:21,168 - #49 int
INFO  12:58:21,168 - #49 j
INFO  12:58:21,168 - #42 [
INFO  12:58:21,168 - #43 ]
INFO  12:58:21,168 - #38 ,
INFO  12:58:21,168 - #49 int
INFO  12:58:21,169 - #49 arg
INFO  12:58:21,169 - #41 )
INFO  12:58:21,169 - #49 int
INFO  12:58:21,169 - #49 c
INFO  12:58:21,169 - #36 ;
INFO  12:58:21,169 - #44 {
INFO  12:58:21,169 - #49 x
INFO  12:58:21,169 - #35 =
INFO  12:58:21,170 - #49 arg
INFO  12:58:21,170 - #39 .
INFO  12:58:21,170 - #49 a
INFO  12:58:21,170 - #39 .
INFO  12:58:21,170 - #49 b
INFO  12:58:21,170 - #39 .
INFO  12:58:21,170 - #49 c
INFO  12:58:21,170 - #36 ;
INFO  12:58:21,170 - #49 x
INFO  12:58:21,171 - #35 =
INFO  12:58:21,171 - #49 arr
INFO  12:58:21,171 - #42 [
INFO  12:58:21,171 - #46 1
INFO  12:58:21,171 - #43 ]
INFO  12:58:21,171 - #36 ;
INFO  12:58:21,171 - #14 do
INFO  12:58:21,171 - #44 {
INFO  12:58:21,171 - #19 break
INFO  12:58:21,171 - #36 ;
INFO  12:58:21,171 - #45 }
INFO  12:58:21,171 - #15 while
INFO  12:58:21,172 - #40 (
INFO  12:58:21,172 - #49 i
INFO  12:58:21,172 - #31 <
INFO  12:58:21,172 - #49 tableSize
INFO  12:58:21,172 - #38 ,
INFO  12:58:21,172 - #49 i
INFO  12:58:21,172 - #25 ++
INFO  12:58:21,172 - #41 )
INFO  12:58:21,172 - #36 ;
INFO  12:58:21,173 - #45 }
INFO  12:58:21,173 - #12 void
INFO  12:58:21,173 - #49 main
INFO  12:58:21,173 - #40 (
INFO  12:58:21,173 - #41 )
INFO  12:58:21,173 - #49 int
INFO  12:58:21,175 - #49 b
INFO  12:58:21,175 - #42 [
INFO  12:58:21,175 - #43 ]
INFO  12:58:21,175 - #36 ;
INFO  12:58:21,175 - #44 {
INFO  12:58:21,175 - #9 print
INFO  12:58:21,175 - #40 (
INFO  12:58:21,175 - #49 b
INFO  12:58:21,175 - #42 [
INFO  12:58:21,175 - #43 ]
ERROR 12:58:21,175 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  12:58:21,176 - #42 [
INFO  12:58:21,176 - #43 ]
INFO  12:58:21,176 - #41 )
INFO  12:58:21,177 - #36 ;
INFO  12:58:21,177 - #45 }
INFO  12:58:21,177 - #45 }
ERROR 12:58:21,177 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
