INFO  20:41:02,385 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  20:41:02,570 - #2 program
INFO  20:41:02,571 - #49 p
INFO  20:41:02,571 - #8 const
INFO  20:41:02,572 - #49 int
INFO  20:41:02,572 - #49 tableSize
INFO  20:41:02,572 - #35 =
INFO  20:41:02,572 - #46 10
INFO  20:41:02,572 - #36 ;
INFO  20:41:02,574 - #49 set
INFO  20:41:02,575 - #49 s1
INFO  20:41:02,575 - #36 ;
INFO  20:41:02,580 - #3 class
INFO  20:41:02,580 - #49 Table
INFO  20:41:02,580 - #44 {
INFO  20:41:02,582 - #49 int
INFO  20:41:02,583 - #49 pos
INFO  20:41:02,583 - #42 [
INFO  20:41:02,583 - #43 ]
INFO  20:41:02,585 - #38 ,
INFO  20:41:02,586 - #36 ;
ERROR 20:41:02,586 - 
Sintaksna greska na liniji 5, na koloni 10
INFO  20:41:02,589 - #44 {
INFO  20:41:02,589 - #12 void
INFO  20:41:02,589 - #49 setfactor
INFO  20:41:02,594 - #40 (
INFO  20:41:02,594 - #49 int
INFO  20:41:02,594 - #49 factor
INFO  20:41:02,594 - #41 )
INFO  20:41:02,594 - #44 {
INFO  20:41:02,594 - #49 this
INFO  20:41:02,594 - #39 .
INFO  20:41:02,594 - #49 factor
INFO  20:41:02,594 - #35 =
INFO  20:41:02,594 - #49 factor
INFO  20:41:02,594 - #36 ;
INFO  20:41:02,594 - #45 }
INFO  20:41:02,599 - #12 void
INFO  20:41:02,599 - #49 putp
INFO  20:41:02,599 - #40 (
INFO  20:41:02,599 - #49 int
INFO  20:41:02,599 - #49 a
INFO  20:41:02,599 - #38 ,
INFO  20:41:02,599 - #49 int
INFO  20:41:02,599 - #49 idx
INFO  20:41:02,599 - #41 )
INFO  20:41:02,599 - #44 {
INFO  20:41:02,599 - #49 this
INFO  20:41:02,599 - #39 .
INFO  20:41:02,599 - #49 pos
INFO  20:41:02,599 - #42 [
INFO  20:41:02,600 - #49 idx
INFO  20:41:02,600 - #43 ]
INFO  20:41:02,600 - #35 =
INFO  20:41:02,600 - #49 a
INFO  20:41:02,600 - #36 ;
INFO  20:41:02,600 - #45 }
INFO  20:41:02,600 - #12 void
INFO  20:41:02,600 - #49 putn
INFO  20:41:02,600 - #40 (
INFO  20:41:02,600 - #49 int
INFO  20:41:02,600 - #49 a
INFO  20:41:02,600 - #38 ,
INFO  20:41:02,600 - #49 int
INFO  20:41:02,601 - #49 idx
INFO  20:41:02,601 - #41 )
INFO  20:41:02,601 - #44 {
INFO  20:41:02,601 - #49 this
INFO  20:41:02,601 - #39 .
INFO  20:41:02,601 - #49 neg
INFO  20:41:02,601 - #42 [
INFO  20:41:02,602 - #49 idx
INFO  20:41:02,602 - #43 ]
INFO  20:41:02,602 - #35 =
INFO  20:41:02,602 - #49 a
INFO  20:41:02,602 - #36 ;
INFO  20:41:02,602 - #45 }
INFO  20:41:02,602 - #49 int
INFO  20:41:02,602 - #49 getp
INFO  20:41:02,602 - #40 (
INFO  20:41:02,602 - #49 int
INFO  20:41:02,603 - #49 idx
INFO  20:41:02,603 - #41 )
INFO  20:41:02,603 - #44 {
INFO  20:41:02,603 - #13 return
INFO  20:41:02,603 - #49 pos
INFO  20:41:02,603 - #42 [
INFO  20:41:02,603 - #49 idx
INFO  20:41:02,603 - #43 ]
INFO  20:41:02,604 - #36 ;
INFO  20:41:02,604 - #45 }
INFO  20:41:02,604 - #49 int
INFO  20:41:02,604 - #49 getn
INFO  20:41:02,604 - #40 (
INFO  20:41:02,604 - #49 int
INFO  20:41:02,604 - #49 idx
INFO  20:41:02,604 - #41 )
INFO  20:41:02,605 - #44 {
INFO  20:41:02,605 - #13 return
INFO  20:41:02,605 - #49 neg
INFO  20:41:02,605 - #42 [
INFO  20:41:02,605 - #49 idx
INFO  20:41:02,605 - #43 ]
INFO  20:41:02,605 - #36 ;
INFO  20:41:02,606 - #45 }
INFO  20:41:02,606 - #45 }
INFO  20:41:02,606 - #45 }
INFO  20:41:02,606 - #49 Table
INFO  20:41:02,606 - #49 val
INFO  20:41:02,607 - #36 ;
INFO  20:41:02,607 - #49 int
INFO  20:41:02,607 - #49 rows
INFO  20:41:02,607 - #38 ,
INFO  20:41:02,607 - #49 columns
INFO  20:41:02,607 - #36 ;
INFO  20:41:02,607 - #44 {
INFO  20:41:02,608 - #12 void
INFO  20:41:02,608 - #49 f
INFO  20:41:02,608 - #40 (
INFO  20:41:02,608 - #49 char
INFO  20:41:02,608 - #49 ch
INFO  20:41:02,608 - #38 ,
INFO  20:41:02,608 - #49 int
INFO  20:41:02,608 - #49 a
INFO  20:41:02,608 - #38 ,
INFO  20:41:02,609 - #49 int
INFO  20:41:02,609 - #49 arg
INFO  20:41:02,609 - #41 )
INFO  20:41:02,609 - #49 int
INFO  20:41:02,609 - #49 x
INFO  20:41:02,609 - #36 ;
INFO  20:41:02,609 - #44 {
INFO  20:41:02,609 - #49 x
INFO  20:41:02,609 - #35 =
INFO  20:41:02,609 - #49 arg
INFO  20:41:02,610 - #36 ;
INFO  20:41:02,610 - #45 }
INFO  20:41:02,610 - #12 void
INFO  20:41:02,610 - #49 main
INFO  20:41:02,610 - #40 (
INFO  20:41:02,610 - #41 )
INFO  20:41:02,610 - #49 int
INFO  20:41:02,610 - #49 x
INFO  20:41:02,610 - #38 ,
INFO  20:41:02,611 - #49 i
INFO  20:41:02,611 - #36 ;
INFO  20:41:02,611 - #49 char
INFO  20:41:02,611 - #49 c
INFO  20:41:02,611 - #36 ;
INFO  20:41:02,611 - #49 int
INFO  20:41:02,611 - #49 arr
INFO  20:41:02,611 - #42 [
INFO  20:41:02,611 - #43 ]
INFO  20:41:02,612 - #36 ;
INFO  20:41:02,612 - #44 {
INFO  20:41:02,612 - #49 val
INFO  20:41:02,612 - #35 =
INFO  20:41:02,612 - #11 new
INFO  20:41:02,612 - #49 Table
INFO  20:41:02,612 - #40 (
INFO  20:41:02,612 - #41 )
INFO  20:41:02,612 - #36 ;
INFO  20:41:02,612 - #49 val
INFO  20:41:02,613 - #39 .
INFO  20:41:02,613 - #49 setfactor
INFO  20:41:02,613 - #40 (
INFO  20:41:02,613 - #46 2
INFO  20:41:02,613 - #41 )
INFO  20:41:02,613 - #36 ;
INFO  20:41:02,613 - #49 s1
INFO  20:41:02,613 - #35 =
INFO  20:41:02,613 - #11 new
INFO  20:41:02,613 - #49 set
INFO  20:41:02,613 - #42 [
INFO  20:41:02,613 - #46 5
INFO  20:41:02,614 - #43 ]
INFO  20:41:02,614 - #36 ;
INFO  20:41:02,614 - #49 s1
INFO  20:41:02,614 - #39 .
INFO  20:41:02,614 - #49 add
INFO  20:41:02,614 - #40 (
INFO  20:41:02,615 - #46 5
INFO  20:41:02,615 - #41 )
INFO  20:41:02,615 - #36 ;
INFO  20:41:02,615 - #49 s1
INFO  20:41:02,615 - #39 .
INFO  20:41:02,615 - #49 add
INFO  20:41:02,615 - #40 (
INFO  20:41:02,616 - #46 10
INFO  20:41:02,616 - #41 )
INFO  20:41:02,616 - #36 ;
INFO  20:41:02,616 - #9 print
INFO  20:41:02,616 - #40 (
INFO  20:41:02,616 - #49 s1
INFO  20:41:02,616 - #41 )
INFO  20:41:02,617 - #36 ;
INFO  20:41:02,617 - #49 arr
INFO  20:41:02,617 - #35 =
INFO  20:41:02,617 - #11 new
INFO  20:41:02,617 - #49 int
INFO  20:41:02,617 - #42 [
INFO  20:41:02,617 - #46 3
INFO  20:41:02,617 - #43 ]
INFO  20:41:02,617 - #36 ;
INFO  20:41:02,617 - #49 i
INFO  20:41:02,617 - #35 =
INFO  20:41:02,618 - #46 0
INFO  20:41:02,618 - #36 ;
INFO  20:41:02,618 - #14 do
INFO  20:41:02,618 - #49 arr
INFO  20:41:02,618 - #42 [
INFO  20:41:02,618 - #49 i
INFO  20:41:02,618 - #43 ]
INFO  20:41:02,618 - #35 =
INFO  20:41:02,618 - #49 i
INFO  20:41:02,618 - #36 ;
INFO  20:41:02,618 - #15 while
INFO  20:41:02,618 - #40 (
INFO  20:41:02,618 - #49 i
INFO  20:41:02,618 - #31 <
INFO  20:41:02,619 - #46 3
INFO  20:41:02,619 - #38 ,
INFO  20:41:02,619 - #49 i
INFO  20:41:02,619 - #25 ++
INFO  20:41:02,619 - #41 )
INFO  20:41:02,619 - #36 ;
INFO  20:41:02,619 - #49 i
INFO  20:41:02,619 - #35 =
INFO  20:41:02,619 - #46 0
INFO  20:41:02,619 - #36 ;
INFO  20:41:02,619 - #14 do
INFO  20:41:02,620 - #9 print
INFO  20:41:02,620 - #40 (
INFO  20:41:02,620 - #49 arr
INFO  20:41:02,620 - #42 [
INFO  20:41:02,620 - #49 i
INFO  20:41:02,620 - #43 ]
INFO  20:41:02,620 - #41 )
INFO  20:41:02,620 - #36 ;
INFO  20:41:02,620 - #15 while
INFO  20:41:02,620 - #40 (
INFO  20:41:02,620 - #49 i
INFO  20:41:02,621 - #31 <
INFO  20:41:02,621 - #46 3
INFO  20:41:02,621 - #38 ,
INFO  20:41:02,621 - #49 i
INFO  20:41:02,621 - #25 ++
INFO  20:41:02,621 - #41 )
INFO  20:41:02,621 - #36 ;
INFO  20:41:02,622 - #49 val
INFO  20:41:02,622 - #39 .
INFO  20:41:02,622 - #49 pos
INFO  20:41:02,622 - #35 =
INFO  20:41:02,622 - #11 new
INFO  20:41:02,622 - #49 int
INFO  20:41:02,622 - #42 [
INFO  20:41:02,623 - #49 tableSize
INFO  20:41:02,623 - #43 ]
INFO  20:41:02,623 - #36 ;
INFO  20:41:02,623 - #49 val
INFO  20:41:02,623 - #39 .
INFO  20:41:02,623 - #49 neg
INFO  20:41:02,623 - #35 =
INFO  20:41:02,623 - #11 new
INFO  20:41:02,623 - #49 int
INFO  20:41:02,623 - #42 [
INFO  20:41:02,623 - #49 tableSize
INFO  20:41:02,623 - #43 ]
INFO  20:41:02,623 - #36 ;
INFO  20:41:02,624 - #10 read
INFO  20:41:02,624 - #40 (
INFO  20:41:02,624 - #49 x
INFO  20:41:02,624 - #41 )
INFO  20:41:02,624 - #36 ;
INFO  20:41:02,624 - #49 i
INFO  20:41:02,624 - #35 =
INFO  20:41:02,624 - #46 0
INFO  20:41:02,624 - #36 ;
INFO  20:41:02,624 - #14 do
INFO  20:41:02,624 - #44 {
INFO  20:41:02,624 - #49 val
INFO  20:41:02,624 - #39 .
INFO  20:41:02,625 - #49 putp
INFO  20:41:02,625 - #40 (
INFO  20:41:02,625 - #46 0
INFO  20:41:02,625 - #38 ,
INFO  20:41:02,625 - #49 i
INFO  20:41:02,625 - #41 )
INFO  20:41:02,625 - #36 ;
INFO  20:41:02,625 - #49 val
INFO  20:41:02,625 - #39 .
INFO  20:41:02,625 - #49 putn
INFO  20:41:02,625 - #40 (
INFO  20:41:02,625 - #46 0
INFO  20:41:02,625 - #38 ,
INFO  20:41:02,625 - #49 i
INFO  20:41:02,626 - #41 )
INFO  20:41:02,626 - #36 ;
INFO  20:41:02,626 - #45 }
INFO  20:41:02,626 - #15 while
INFO  20:41:02,626 - #40 (
INFO  20:41:02,626 - #49 i
INFO  20:41:02,626 - #31 <
INFO  20:41:02,626 - #49 tableSize
INFO  20:41:02,626 - #38 ,
INFO  20:41:02,626 - #49 i
INFO  20:41:02,626 - #25 ++
INFO  20:41:02,626 - #41 )
INFO  20:41:02,626 - #36 ;
INFO  20:41:02,627 - #49 f
INFO  20:41:02,627 - #40 (
INFO  20:41:02,627 - #49 c
INFO  20:41:02,627 - #38 ,
INFO  20:41:02,627 - #49 x
INFO  20:41:02,627 - #38 ,
INFO  20:41:02,627 - #49 i
INFO  20:41:02,627 - #41 )
INFO  20:41:02,627 - #36 ;
INFO  20:41:02,627 - #10 read
INFO  20:41:02,627 - #40 (
INFO  20:41:02,627 - #49 rows
INFO  20:41:02,628 - #41 )
INFO  20:41:02,628 - #36 ;
INFO  20:41:02,628 - #49 x
INFO  20:41:02,628 - #35 =
INFO  20:41:02,628 - #49 rows
INFO  20:41:02,628 - #36 ;
INFO  20:41:02,628 - #14 do
INFO  20:41:02,628 - #44 {
INFO  20:41:02,628 - #16 if
INFO  20:41:02,628 - #40 (
INFO  20:41:02,628 - #49 x
INFO  20:41:02,628 - #32 <=
INFO  20:41:02,628 - #46 0
INFO  20:41:02,628 - #41 )
INFO  20:41:02,629 - #19 break
INFO  20:41:02,629 - #36 ;
INFO  20:41:02,629 - #16 if
INFO  20:41:02,629 - #40 (
INFO  20:41:02,629 - #46 0
INFO  20:41:02,629 - #32 <=
INFO  20:41:02,629 - #49 x
INFO  20:41:02,629 - #33 &&
INFO  20:41:02,629 - #49 x
INFO  20:41:02,629 - #31 <
INFO  20:41:02,629 - #49 tableSize
INFO  20:41:02,629 - #41 )
INFO  20:41:02,629 - #44 {
INFO  20:41:02,629 - #49 val
INFO  20:41:02,629 - #39 .
INFO  20:41:02,629 - #49 putp
INFO  20:41:02,630 - #40 (
INFO  20:41:02,630 - #49 val
INFO  20:41:02,630 - #39 .
INFO  20:41:02,630 - #49 getp
INFO  20:41:02,630 - #40 (
INFO  20:41:02,630 - #49 x
INFO  20:41:02,630 - #41 )
INFO  20:41:02,630 - #20 +
INFO  20:41:02,631 - #46 1
INFO  20:41:02,631 - #41 )
INFO  20:41:02,631 - #36 ;
INFO  20:41:02,631 - #45 }
INFO  20:41:02,631 - #17 else
INFO  20:41:02,631 - #16 if
INFO  20:41:02,631 - #40 (
INFO  20:41:02,631 - #21 -
INFO  20:41:02,631 - #49 tableSize
INFO  20:41:02,631 - #31 <
INFO  20:41:02,631 - #49 x
INFO  20:41:02,631 - #33 &&
INFO  20:41:02,631 - #49 x
INFO  20:41:02,631 - #31 <
INFO  20:41:02,631 - #46 0
INFO  20:41:02,631 - #41 )
INFO  20:41:02,631 - #44 {
INFO  20:41:02,631 - #49 val
INFO  20:41:02,631 - #39 .
INFO  20:41:02,631 - #49 putn
INFO  20:41:02,632 - #40 (
INFO  20:41:02,632 - #49 val
INFO  20:41:02,632 - #39 .
INFO  20:41:02,632 - #49 getn
INFO  20:41:02,632 - #40 (
INFO  20:41:02,632 - #21 -
INFO  20:41:02,632 - #49 x
INFO  20:41:02,632 - #41 )
INFO  20:41:02,632 - #20 +
INFO  20:41:02,632 - #46 1
INFO  20:41:02,632 - #41 )
INFO  20:41:02,632 - #36 ;
INFO  20:41:02,632 - #45 }
INFO  20:41:02,633 - #10 read
INFO  20:41:02,633 - #40 (
INFO  20:41:02,633 - #49 x
INFO  20:41:02,633 - #41 )
INFO  20:41:02,633 - #36 ;
INFO  20:41:02,633 - #45 }
INFO  20:41:02,633 - #15 while
INFO  20:41:02,633 - #40 (
INFO  20:41:02,633 - #41 )
INFO  20:41:02,633 - #36 ;
INFO  20:41:02,633 - #45 }
INFO  20:41:02,633 - #45 }
ERROR 20:41:02,633 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
