INFO  19:50:57,266 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  19:50:57,439 - #2 program
INFO  19:50:57,439 - #49 p
INFO  19:50:57,439 - #8 const
INFO  19:50:57,441 - #49 int
INFO  19:50:57,441 - #49 tableSize
INFO  19:50:57,442 - #35 =
INFO  19:50:57,442 - #46 10
INFO  19:50:57,442 - #36 ;
INFO  19:50:57,444 - #49 set
INFO  19:50:57,444 - #49 s1
INFO  19:50:57,444 - #36 ;
INFO  19:50:57,447 - #3 class
INFO  19:50:57,447 - #49 Table
INFO  19:50:57,448 - #44 {
INFO  19:50:57,449 - #49 int
INFO  19:50:57,450 - #49 pos
INFO  19:50:57,450 - #42 [
INFO  19:50:57,450 - #43 ]
INFO  19:50:57,450 - #49 neg
ERROR 19:50:57,450 - 
Sintaksna greska na liniji 5
INFO  19:50:57,452 - #42 [
INFO  19:50:57,452 - #43 ]
INFO  19:50:57,452 - #38 ,
INFO  19:50:57,457 - #49 factor
INFO  19:50:57,457 - #36 ;
INFO  19:50:57,457 - #44 {
INFO  19:50:57,457 - #12 void
INFO  19:50:57,457 - #49 setfactor
ERROR 19:50:57,458 - Izvresn oporavak greska pri definiciji globalne promenljive do ; u liniji 5
INFO  19:50:57,463 - #40 (
INFO  19:50:57,463 - #49 int
INFO  19:50:57,463 - #49 factor
INFO  19:50:57,463 - #41 )
INFO  19:50:57,466 - #44 {
INFO  19:50:57,466 - #49 this
INFO  19:50:57,468 - #39 .
INFO  19:50:57,474 - #49 factor
INFO  19:50:57,474 - #35 =
INFO  19:50:57,475 - #49 factor
INFO  19:50:57,478 - #36 ;
INFO  19:50:57,485 - #45 }
INFO  19:50:57,486 - #12 void
INFO  19:50:57,487 - #49 putp
INFO  19:50:57,487 - #40 (
INFO  19:50:57,487 - #49 int
INFO  19:50:57,487 - #49 a
INFO  19:50:57,487 - #38 ,
INFO  19:50:57,488 - #49 int
INFO  19:50:57,488 - #49 idx
INFO  19:50:57,489 - #41 )
INFO  19:50:57,489 - #44 {
INFO  19:50:57,489 - #49 this
INFO  19:50:57,489 - #39 .
INFO  19:50:57,490 - #49 pos
INFO  19:50:57,490 - #42 [
INFO  19:50:57,490 - #49 idx
INFO  19:50:57,490 - #43 ]
INFO  19:50:57,490 - #35 =
INFO  19:50:57,491 - #49 a
INFO  19:50:57,491 - #36 ;
INFO  19:50:57,492 - #45 }
INFO  19:50:57,492 - #12 void
INFO  19:50:57,493 - #49 putn
INFO  19:50:57,493 - #40 (
INFO  19:50:57,493 - #49 int
INFO  19:50:57,494 - #49 a
INFO  19:50:57,494 - #38 ,
INFO  19:50:57,494 - #49 int
INFO  19:50:57,494 - #49 idx
INFO  19:50:57,494 - #41 )
INFO  19:50:57,494 - #44 {
INFO  19:50:57,495 - #49 this
INFO  19:50:57,495 - #39 .
INFO  19:50:57,495 - #49 neg
INFO  19:50:57,495 - #42 [
INFO  19:50:57,495 - #49 idx
INFO  19:50:57,495 - #43 ]
INFO  19:50:57,495 - #35 =
INFO  19:50:57,495 - #49 a
INFO  19:50:57,496 - #20 +
INFO  19:50:57,496 - #36 ;
ERROR 19:50:57,496 - 
Sintaksna greska na liniji 9
INFO  19:50:57,496 - #45 }
INFO  19:50:57,496 - #49 int
INFO  19:50:57,496 - #49 getp
INFO  19:50:57,496 - #40 (
INFO  19:50:57,497 - #49 int
INFO  19:50:57,497 - #49 idx
INFO  19:50:57,497 - #41 )
INFO  19:50:57,497 - #44 {
INFO  19:50:57,497 - #13 return
INFO  19:50:57,497 - #49 pos
INFO  19:50:57,498 - #42 [
INFO  19:50:57,498 - #49 idx
INFO  19:50:57,498 - #43 ]
INFO  19:50:57,498 - #36 ;
INFO  19:50:57,498 - #45 }
INFO  19:50:57,498 - #49 int
INFO  19:50:57,498 - #49 getn
INFO  19:50:57,499 - #40 (
INFO  19:50:57,499 - #49 int
INFO  19:50:57,499 - #49 idx
INFO  19:50:57,499 - #41 )
INFO  19:50:57,499 - #44 {
INFO  19:50:57,499 - #13 return
INFO  19:50:57,499 - #49 neg
INFO  19:50:57,499 - #42 [
INFO  19:50:57,499 - #49 idx
INFO  19:50:57,499 - #43 ]
INFO  19:50:57,499 - #36 ;
INFO  19:50:57,500 - #45 }
INFO  19:50:57,500 - #45 }
INFO  19:50:57,500 - #45 }
INFO  19:50:57,500 - #49 Table
INFO  19:50:57,500 - #49 val
INFO  19:50:57,500 - #36 ;
INFO  19:50:57,500 - #49 int
INFO  19:50:57,500 - #49 rows
INFO  19:50:57,500 - #38 ,
INFO  19:50:57,500 - #49 columns
INFO  19:50:57,500 - #36 ;
INFO  19:50:57,500 - #44 {
INFO  19:50:57,501 - #12 void
INFO  19:50:57,501 - #49 f
INFO  19:50:57,501 - #40 (
INFO  19:50:57,501 - #49 char
INFO  19:50:57,501 - #49 ch
INFO  19:50:57,501 - #38 ,
INFO  19:50:57,501 - #49 int
INFO  19:50:57,501 - #49 a
INFO  19:50:57,502 - #38 ,
INFO  19:50:57,502 - #49 int
INFO  19:50:57,502 - #49 arg
INFO  19:50:57,502 - #41 )
INFO  19:50:57,502 - #49 int
INFO  19:50:57,502 - #49 x
INFO  19:50:57,503 - #36 ;
INFO  19:50:57,503 - #44 {
INFO  19:50:57,503 - #49 x
INFO  19:50:57,503 - #35 =
INFO  19:50:57,503 - #49 arg
INFO  19:50:57,503 - #36 ;
INFO  19:50:57,503 - #45 }
INFO  19:50:57,503 - #12 void
INFO  19:50:57,503 - #49 main
INFO  19:50:57,503 - #40 (
INFO  19:50:57,503 - #41 )
INFO  19:50:57,504 - #49 int
INFO  19:50:57,504 - #49 x
INFO  19:50:57,504 - #38 ,
INFO  19:50:57,504 - #49 i
INFO  19:50:57,505 - #36 ;
INFO  19:50:57,505 - #49 char
INFO  19:50:57,505 - #49 c
INFO  19:50:57,505 - #36 ;
INFO  19:50:57,505 - #49 int
INFO  19:50:57,505 - #49 arr
INFO  19:50:57,505 - #42 [
INFO  19:50:57,505 - #43 ]
INFO  19:50:57,505 - #36 ;
INFO  19:50:57,506 - #44 {
INFO  19:50:57,506 - #49 val
INFO  19:50:57,506 - #35 =
INFO  19:50:57,506 - #11 new
INFO  19:50:57,506 - #49 Table
INFO  19:50:57,506 - #40 (
INFO  19:50:57,506 - #41 )
INFO  19:50:57,506 - #36 ;
INFO  19:50:57,506 - #49 val
INFO  19:50:57,506 - #39 .
INFO  19:50:57,506 - #49 setfactor
INFO  19:50:57,507 - #40 (
INFO  19:50:57,507 - #46 2
INFO  19:50:57,507 - #41 )
INFO  19:50:57,507 - #36 ;
INFO  19:50:57,507 - #49 s1
INFO  19:50:57,507 - #35 =
INFO  19:50:57,507 - #11 new
INFO  19:50:57,507 - #49 set
INFO  19:50:57,507 - #42 [
INFO  19:50:57,507 - #46 5
INFO  19:50:57,507 - #43 ]
INFO  19:50:57,508 - #36 ;
INFO  19:50:57,508 - #49 s1
INFO  19:50:57,508 - #39 .
INFO  19:50:57,508 - #49 add
INFO  19:50:57,508 - #40 (
INFO  19:50:57,508 - #46 5
INFO  19:50:57,508 - #41 )
INFO  19:50:57,508 - #36 ;
INFO  19:50:57,508 - #49 s1
INFO  19:50:57,508 - #39 .
INFO  19:50:57,508 - #49 add
INFO  19:50:57,509 - #40 (
INFO  19:50:57,509 - #46 10
INFO  19:50:57,509 - #41 )
INFO  19:50:57,509 - #36 ;
INFO  19:50:57,509 - #9 print
INFO  19:50:57,509 - #40 (
INFO  19:50:57,509 - #49 s1
INFO  19:50:57,509 - #41 )
INFO  19:50:57,509 - #36 ;
INFO  19:50:57,509 - #49 arr
INFO  19:50:57,509 - #35 =
INFO  19:50:57,510 - #11 new
INFO  19:50:57,510 - #49 int
INFO  19:50:57,510 - #42 [
INFO  19:50:57,510 - #46 3
INFO  19:50:57,510 - #43 ]
INFO  19:50:57,510 - #36 ;
INFO  19:50:57,510 - #49 i
INFO  19:50:57,510 - #35 =
INFO  19:50:57,510 - #46 0
INFO  19:50:57,511 - #36 ;
INFO  19:50:57,511 - #14 do
INFO  19:50:57,511 - #49 arr
INFO  19:50:57,511 - #42 [
INFO  19:50:57,511 - #49 i
INFO  19:50:57,511 - #43 ]
INFO  19:50:57,511 - #35 =
INFO  19:50:57,511 - #49 i
INFO  19:50:57,511 - #36 ;
INFO  19:50:57,511 - #15 while
INFO  19:50:57,511 - #40 (
INFO  19:50:57,511 - #49 i
INFO  19:50:57,511 - #31 <
INFO  19:50:57,511 - #46 3
INFO  19:50:57,512 - #38 ,
INFO  19:50:57,512 - #49 i
INFO  19:50:57,513 - #25 ++
INFO  19:50:57,513 - #41 )
INFO  19:50:57,513 - #36 ;
INFO  19:50:57,513 - #49 i
INFO  19:50:57,513 - #35 =
INFO  19:50:57,513 - #46 0
INFO  19:50:57,514 - #36 ;
INFO  19:50:57,514 - #14 do
INFO  19:50:57,514 - #9 print
INFO  19:50:57,514 - #40 (
INFO  19:50:57,514 - #49 arr
INFO  19:50:57,514 - #42 [
INFO  19:50:57,514 - #49 i
INFO  19:50:57,514 - #43 ]
INFO  19:50:57,514 - #41 )
INFO  19:50:57,515 - #36 ;
INFO  19:50:57,515 - #15 while
INFO  19:50:57,515 - #40 (
INFO  19:50:57,515 - #49 i
INFO  19:50:57,515 - #31 <
INFO  19:50:57,515 - #46 3
INFO  19:50:57,515 - #38 ,
INFO  19:50:57,515 - #49 i
INFO  19:50:57,515 - #25 ++
INFO  19:50:57,515 - #41 )
INFO  19:50:57,516 - #36 ;
INFO  19:50:57,516 - #49 val
INFO  19:50:57,516 - #39 .
INFO  19:50:57,516 - #49 pos
INFO  19:50:57,516 - #35 =
INFO  19:50:57,516 - #11 new
INFO  19:50:57,516 - #49 int
INFO  19:50:57,516 - #42 [
INFO  19:50:57,517 - #49 tableSize
INFO  19:50:57,517 - #43 ]
INFO  19:50:57,517 - #36 ;
INFO  19:50:57,517 - #49 val
INFO  19:50:57,517 - #39 .
INFO  19:50:57,517 - #49 neg
INFO  19:50:57,517 - #35 =
INFO  19:50:57,517 - #11 new
INFO  19:50:57,517 - #49 int
INFO  19:50:57,517 - #42 [
INFO  19:50:57,517 - #49 tableSize
INFO  19:50:57,517 - #43 ]
INFO  19:50:57,517 - #36 ;
INFO  19:50:57,517 - #10 read
INFO  19:50:57,518 - #40 (
INFO  19:50:57,518 - #49 x
INFO  19:50:57,518 - #41 )
INFO  19:50:57,518 - #36 ;
INFO  19:50:57,518 - #49 i
INFO  19:50:57,518 - #35 =
INFO  19:50:57,518 - #46 0
INFO  19:50:57,518 - #36 ;
INFO  19:50:57,518 - #14 do
INFO  19:50:57,518 - #44 {
INFO  19:50:57,518 - #49 val
INFO  19:50:57,518 - #39 .
INFO  19:50:57,518 - #49 putp
INFO  19:50:57,518 - #40 (
INFO  19:50:57,519 - #46 0
INFO  19:50:57,519 - #38 ,
INFO  19:50:57,519 - #49 i
INFO  19:50:57,519 - #41 )
INFO  19:50:57,519 - #36 ;
INFO  19:50:57,520 - #49 val
INFO  19:50:57,520 - #39 .
INFO  19:50:57,520 - #49 putn
INFO  19:50:57,520 - #40 (
INFO  19:50:57,520 - #46 0
INFO  19:50:57,520 - #38 ,
INFO  19:50:57,521 - #49 i
INFO  19:50:57,521 - #41 )
INFO  19:50:57,521 - #36 ;
INFO  19:50:57,521 - #45 }
INFO  19:50:57,521 - #15 while
INFO  19:50:57,521 - #40 (
INFO  19:50:57,521 - #49 i
INFO  19:50:57,521 - #31 <
INFO  19:50:57,521 - #49 tableSize
INFO  19:50:57,521 - #38 ,
INFO  19:50:57,522 - #49 i
INFO  19:50:57,522 - #25 ++
INFO  19:50:57,522 - #41 )
INFO  19:50:57,522 - #36 ;
INFO  19:50:57,522 - #49 f
INFO  19:50:57,522 - #40 (
INFO  19:50:57,522 - #49 c
INFO  19:50:57,523 - #38 ,
INFO  19:50:57,523 - #49 x
INFO  19:50:57,523 - #38 ,
INFO  19:50:57,523 - #49 i
INFO  19:50:57,523 - #41 )
INFO  19:50:57,523 - #36 ;
INFO  19:50:57,523 - #10 read
INFO  19:50:57,523 - #40 (
INFO  19:50:57,524 - #49 rows
INFO  19:50:57,524 - #41 )
INFO  19:50:57,524 - #36 ;
INFO  19:50:57,524 - #49 x
INFO  19:50:57,524 - #35 =
INFO  19:50:57,524 - #49 rows
INFO  19:50:57,524 - #36 ;
INFO  19:50:57,524 - #14 do
INFO  19:50:57,524 - #44 {
INFO  19:50:57,524 - #16 if
INFO  19:50:57,524 - #40 (
INFO  19:50:57,524 - #49 x
INFO  19:50:57,524 - #32 <=
INFO  19:50:57,525 - #46 0
INFO  19:50:57,525 - #41 )
INFO  19:50:57,525 - #19 break
INFO  19:50:57,525 - #36 ;
INFO  19:50:57,525 - #16 if
INFO  19:50:57,525 - #40 (
INFO  19:50:57,525 - #46 0
INFO  19:50:57,525 - #32 <=
INFO  19:50:57,525 - #49 x
INFO  19:50:57,525 - #33 &&
INFO  19:50:57,525 - #49 x
INFO  19:50:57,525 - #31 <
INFO  19:50:57,525 - #49 tableSize
INFO  19:50:57,525 - #41 )
INFO  19:50:57,526 - #44 {
INFO  19:50:57,526 - #49 val
INFO  19:50:57,526 - #39 .
INFO  19:50:57,526 - #49 putp
INFO  19:50:57,526 - #40 (
INFO  19:50:57,526 - #49 val
INFO  19:50:57,526 - #39 .
INFO  19:50:57,526 - #49 getp
INFO  19:50:57,526 - #40 (
INFO  19:50:57,526 - #49 x
INFO  19:50:57,526 - #41 )
INFO  19:50:57,526 - #20 +
INFO  19:50:57,527 - #46 1
INFO  19:50:57,527 - #41 )
INFO  19:50:57,527 - #36 ;
INFO  19:50:57,527 - #45 }
INFO  19:50:57,527 - #17 else
INFO  19:50:57,527 - #16 if
INFO  19:50:57,527 - #40 (
INFO  19:50:57,527 - #21 -
INFO  19:50:57,527 - #49 tableSize
INFO  19:50:57,527 - #31 <
INFO  19:50:57,528 - #49 x
INFO  19:50:57,528 - #33 &&
INFO  19:50:57,528 - #49 x
INFO  19:50:57,528 - #31 <
INFO  19:50:57,528 - #46 0
INFO  19:50:57,528 - #41 )
INFO  19:50:57,528 - #44 {
INFO  19:50:57,528 - #49 val
INFO  19:50:57,529 - #39 .
INFO  19:50:57,529 - #49 putn
INFO  19:50:57,529 - #40 (
INFO  19:50:57,529 - #49 val
INFO  19:50:57,529 - #39 .
INFO  19:50:57,529 - #49 getn
INFO  19:50:57,530 - #40 (
INFO  19:50:57,530 - #21 -
INFO  19:50:57,530 - #49 x
INFO  19:50:57,530 - #41 )
INFO  19:50:57,530 - #20 +
INFO  19:50:57,530 - #46 1
INFO  19:50:57,530 - #41 )
INFO  19:50:57,531 - #36 ;
INFO  19:50:57,531 - #45 }
INFO  19:50:57,531 - #10 read
INFO  19:50:57,531 - #40 (
INFO  19:50:57,531 - #49 x
INFO  19:50:57,531 - #41 )
INFO  19:50:57,531 - #36 ;
INFO  19:50:57,531 - #45 }
INFO  19:50:57,531 - #15 while
INFO  19:50:57,531 - #40 (
INFO  19:50:57,532 - #41 )
INFO  19:50:57,532 - #36 ;
INFO  19:50:57,532 - #45 }
INFO  19:50:57,532 - #45 }
ERROR 19:50:57,532 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62
