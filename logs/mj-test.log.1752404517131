INFO  13:01:41,425 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:01:41,692 - #2 program
INFO  13:01:41,692 - #49 prog
INFO  13:01:41,692 - #8 const
INFO  13:01:41,696 - #49 int
INFO  13:01:41,696 - #49 tableSize
INFO  13:01:41,697 - #35 =
INFO  13:01:41,697 - #46 10
INFO  13:01:41,698 - #38 ,
INFO  13:01:41,699 - #49 c
INFO  13:01:41,699 - #35 =
INFO  13:01:41,699 - #46 3
INFO  13:01:41,699 - #38 ,
INFO  13:01:41,699 - #49 d
INFO  13:01:41,700 - #35 =
INFO  13:01:41,700 - #46 5
INFO  13:01:41,700 - #36 ;
INFO  13:01:41,700 - #8 const
INFO  13:01:41,701 - #49 bool
INFO  13:01:41,702 - #49 a
INFO  13:01:41,702 - #35 =
INFO  13:01:41,702 - #47 true
INFO  13:01:41,704 - #38 ,
INFO  13:01:41,704 - #49 b
INFO  13:01:41,704 - #35 =
INFO  13:01:41,704 - #47 false
INFO  13:01:41,704 - #36 ;
INFO  13:01:41,704 - #8 const
INFO  13:01:41,704 - #49 char
INFO  13:01:41,704 - #49 f
INFO  13:01:41,704 - #35 =
INFO  13:01:41,705 - #48 a
INFO  13:01:41,705 - #36 ;
INFO  13:01:41,705 - #49 int
INFO  13:01:41,705 - #49 arr
INFO  13:01:41,705 - #42 [
INFO  13:01:41,705 - #43 ]
INFO  13:01:41,709 - #38 ,
INFO  13:01:41,713 - #49 i
INFO  13:01:41,713 - #36 ;
INFO  13:01:41,715 - #49 int
INFO  13:01:41,716 - #49 aa
INFO  13:01:41,716 - #38 ,
INFO  13:01:41,716 - #49 bb
INFO  13:01:41,716 - #38 ,
INFO  13:01:41,716 - #49 cc
INFO  13:01:41,716 - #38 ,
INFO  13:01:41,716 - #49 dd
INFO  13:01:41,716 - #36 ;
INFO  13:01:41,717 - #49 bool
INFO  13:01:41,717 - #49 o
INFO  13:01:41,717 - #38 ,
INFO  13:01:41,717 - #49 g
INFO  13:01:41,717 - #38 ,
INFO  13:01:41,718 - #49 h
INFO  13:01:41,718 - #36 ;
INFO  13:01:41,718 - #49 char
INFO  13:01:41,718 - #49 n
INFO  13:01:41,718 - #38 ,
INFO  13:01:41,718 - #49 j
INFO  13:01:41,718 - #38 ,
INFO  13:01:41,718 - #49 k
INFO  13:01:41,718 - #36 ;
INFO  13:01:41,719 - #44 {
INFO  13:01:41,719 - #12 void
INFO  13:01:41,721 - #49 fa
INFO  13:01:41,723 - #40 (
INFO  13:01:41,725 - #49 char
INFO  13:01:41,725 - #49 ch
INFO  13:01:41,725 - #38 ,
INFO  13:01:41,728 - #49 int
INFO  13:01:41,728 - #49 arg
INFO  13:01:41,728 - #41 )
INFO  13:01:41,728 - #49 int
INFO  13:01:41,730 - #49 c
INFO  13:01:41,730 - #36 ;
INFO  13:01:41,730 - #44 {
INFO  13:01:41,731 - #49 x
INFO  13:01:41,733 - #35 =
INFO  13:01:41,735 - #49 arg
INFO  13:01:41,738 - #39 .
INFO  13:01:41,738 - #49 a
INFO  13:01:41,738 - #39 .
INFO  13:01:41,739 - #49 b
INFO  13:01:41,739 - #39 .
INFO  13:01:41,739 - #49 c
INFO  13:01:41,739 - #36 ;
INFO  13:01:41,745 - #49 x
INFO  13:01:41,746 - #35 =
INFO  13:01:41,746 - #49 arr
INFO  13:01:41,746 - #42 [
INFO  13:01:41,746 - #46 1
INFO  13:01:41,746 - #43 ]
INFO  13:01:41,747 - #36 ;
INFO  13:01:41,747 - #14 do
INFO  13:01:41,747 - #44 {
INFO  13:01:41,748 - #19 break
INFO  13:01:41,748 - #36 ;
INFO  13:01:41,748 - #45 }
INFO  13:01:41,750 - #15 while
INFO  13:01:41,750 - #40 (
INFO  13:01:41,750 - #49 i
INFO  13:01:41,750 - #31 <
INFO  13:01:41,750 - #49 tableSize
INFO  13:01:41,753 - #38 ,
INFO  13:01:41,758 - #49 i
INFO  13:01:41,759 - #25 ++
INFO  13:01:41,759 - #41 )
INFO  13:01:41,760 - #36 ;
INFO  13:01:41,761 - #45 }
INFO  13:01:41,762 - #12 void
INFO  13:01:41,764 - #49 fa2
INFO  13:01:41,764 - #40 (
INFO  13:01:41,764 - #49 char
INFO  13:01:41,764 - #49 ch
INFO  13:01:41,764 - #38 ,
INFO  13:01:41,764 - #49 int
INFO  13:01:41,764 - #49 j
INFO  13:01:41,764 - #42 [
INFO  13:01:41,764 - #43 ]
INFO  13:01:41,764 - #38 ,
INFO  13:01:41,764 - #49 int
INFO  13:01:41,764 - #49 arg
INFO  13:01:41,764 - #41 )
INFO  13:01:41,764 - #49 int
INFO  13:01:41,765 - #49 c
INFO  13:01:41,765 - #36 ;
INFO  13:01:41,765 - #44 {
INFO  13:01:41,765 - #49 x
INFO  13:01:41,765 - #35 =
INFO  13:01:41,765 - #49 arg
INFO  13:01:41,765 - #39 .
INFO  13:01:41,765 - #49 a
INFO  13:01:41,765 - #39 .
INFO  13:01:41,765 - #49 b
INFO  13:01:41,765 - #39 .
INFO  13:01:41,765 - #49 c
INFO  13:01:41,765 - #36 ;
INFO  13:01:41,766 - #49 x
INFO  13:01:41,766 - #35 =
INFO  13:01:41,766 - #49 arr
INFO  13:01:41,766 - #42 [
INFO  13:01:41,766 - #46 1
INFO  13:01:41,766 - #43 ]
INFO  13:01:41,766 - #36 ;
INFO  13:01:41,766 - #14 do
INFO  13:01:41,766 - #44 {
INFO  13:01:41,766 - #19 break
INFO  13:01:41,766 - #36 ;
INFO  13:01:41,766 - #45 }
INFO  13:01:41,766 - #15 while
INFO  13:01:41,766 - #40 (
INFO  13:01:41,766 - #49 i
INFO  13:01:41,766 - #31 <
INFO  13:01:41,767 - #49 tableSize
INFO  13:01:41,767 - #38 ,
INFO  13:01:41,767 - #49 i
INFO  13:01:41,767 - #25 ++
INFO  13:01:41,767 - #41 )
INFO  13:01:41,767 - #36 ;
INFO  13:01:41,767 - #45 }
INFO  13:01:41,767 - #12 void
INFO  13:01:41,767 - #49 main
INFO  13:01:41,767 - #40 (
INFO  13:01:41,767 - #41 )
INFO  13:01:41,767 - #49 int
INFO  13:01:41,769 - #49 b
INFO  13:01:41,769 - #42 [
INFO  13:01:41,769 - #43 ]
INFO  13:01:41,770 - #36 ;
INFO  13:01:41,770 - #44 {
INFO  13:01:41,770 - #9 print
INFO  13:01:41,770 - #40 (
INFO  13:01:41,770 - #49 b
INFO  13:01:41,771 - #42 [
INFO  13:01:41,771 - #43 ]
ERROR 13:01:41,771 - 
Sintaksna greska na liniji 36, na koloni 16
INFO  13:01:41,771 - #42 [
INFO  13:01:41,771 - #43 ]
INFO  13:01:41,771 - #41 )
INFO  13:01:41,772 - #36 ;
INFO  13:01:41,773 - #45 }
INFO  13:01:41,773 - #45 }
ERROR 13:01:41,773 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 38, na koloni 1
