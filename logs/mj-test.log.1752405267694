INFO  13:14:18,608 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  13:14:18,743 - #2 program
INFO  13:14:18,744 - #49 prog
INFO  13:14:18,744 - #8 const
INFO  13:14:18,747 - #49 int
INFO  13:14:18,747 - #49 tableSize
INFO  13:14:18,749 - #35 =
INFO  13:14:18,749 - #46 10
INFO  13:14:18,749 - #38 ,
INFO  13:14:18,751 - #49 c
INFO  13:14:18,751 - #35 =
INFO  13:14:18,751 - #46 3
INFO  13:14:18,751 - #38 ,
INFO  13:14:18,751 - #49 d
INFO  13:14:18,751 - #35 =
INFO  13:14:18,751 - #46 5
INFO  13:14:18,751 - #36 ;
INFO  13:14:18,751 - #8 const
INFO  13:14:18,753 - #49 bool
INFO  13:14:18,753 - #49 a
INFO  13:14:18,753 - #35 =
INFO  13:14:18,753 - #47 true
INFO  13:14:18,755 - #38 ,
INFO  13:14:18,755 - #49 b
INFO  13:14:18,756 - #35 =
INFO  13:14:18,756 - #47 false
INFO  13:14:18,756 - #36 ;
INFO  13:14:18,756 - #8 const
INFO  13:14:18,756 - #49 char
INFO  13:14:18,756 - #49 f
INFO  13:14:18,756 - #35 =
INFO  13:14:18,756 - #48 a
INFO  13:14:18,756 - #36 ;
INFO  13:14:18,757 - #49 int
INFO  13:14:18,757 - #49 arr
INFO  13:14:18,757 - #42 [
INFO  13:14:18,757 - #43 ]
INFO  13:14:18,759 - #38 ,
INFO  13:14:18,764 - #49 i
INFO  13:14:18,764 - #36 ;
INFO  13:14:18,766 - #49 int
INFO  13:14:18,766 - #49 aa
INFO  13:14:18,766 - #38 ,
INFO  13:14:18,767 - #49 bb
INFO  13:14:18,767 - #38 ,
INFO  13:14:18,767 - #49 cc
INFO  13:14:18,767 - #38 ,
INFO  13:14:18,767 - #49 dd
INFO  13:14:18,767 - #36 ;
INFO  13:14:18,767 - #49 bool
INFO  13:14:18,767 - #49 o
INFO  13:14:18,768 - #38 ,
INFO  13:14:18,768 - #49 g
INFO  13:14:18,768 - #38 ,
INFO  13:14:18,768 - #49 h
INFO  13:14:18,768 - #36 ;
INFO  13:14:18,768 - #49 char
INFO  13:14:18,768 - #49 n
INFO  13:14:18,768 - #38 ,
INFO  13:14:18,768 - #49 j
INFO  13:14:18,768 - #38 ,
INFO  13:14:18,768 - #49 k
INFO  13:14:18,768 - #36 ;
INFO  13:14:18,768 - #44 {
INFO  13:14:18,769 - #12 void
INFO  13:14:18,770 - #49 fa
INFO  13:14:18,772 - #40 (
INFO  13:14:18,773 - #49 char
INFO  13:14:18,773 - #49 ch
INFO  13:14:18,773 - #38 ,
INFO  13:14:18,775 - #49 int
INFO  13:14:18,775 - #49 arg
INFO  13:14:18,775 - #41 )
INFO  13:14:18,775 - #49 int
INFO  13:14:18,777 - #49 c
INFO  13:14:18,777 - #36 ;
INFO  13:14:18,777 - #44 {
INFO  13:14:18,780 - #49 x
INFO  13:14:18,782 - #35 =
INFO  13:14:18,784 - #49 arg
INFO  13:14:18,786 - #39 .
INFO  13:14:18,787 - #49 a
INFO  13:14:18,787 - #39 .
INFO  13:14:18,787 - #49 b
INFO  13:14:18,787 - #39 .
INFO  13:14:18,787 - #49 c
INFO  13:14:18,787 - #36 ;
INFO  13:14:18,793 - #49 x
INFO  13:14:18,794 - #35 =
INFO  13:14:18,794 - #49 arr
INFO  13:14:18,794 - #42 [
INFO  13:14:18,794 - #46 1
INFO  13:14:18,794 - #43 ]
INFO  13:14:18,794 - #36 ;
INFO  13:14:18,794 - #14 do
INFO  13:14:18,794 - #44 {
INFO  13:14:18,796 - #19 break
INFO  13:14:18,796 - #36 ;
INFO  13:14:18,796 - #45 }
INFO  13:14:18,798 - #15 while
INFO  13:14:18,799 - #40 (
INFO  13:14:18,799 - #49 i
INFO  13:14:18,799 - #31 <
INFO  13:14:18,799 - #49 tableSize
INFO  13:14:18,801 - #38 ,
INFO  13:14:18,807 - #49 i
INFO  13:14:18,807 - #25 ++
INFO  13:14:18,807 - #41 )
INFO  13:14:18,808 - #36 ;
INFO  13:14:18,809 - #45 }
INFO  13:14:18,809 - #12 void
INFO  13:14:18,811 - #49 fa2
INFO  13:14:18,812 - #40 (
INFO  13:14:18,812 - #49 char
INFO  13:14:18,812 - #49 ch
INFO  13:14:18,812 - #38 ,
INFO  13:14:18,812 - #49 int
INFO  13:14:18,812 - #49 j
INFO  13:14:18,812 - #42 [
INFO  13:14:18,812 - #43 ]
INFO  13:14:18,812 - #38 ,
INFO  13:14:18,812 - #49 int
INFO  13:14:18,812 - #49 arg
INFO  13:14:18,813 - #41 )
INFO  13:14:18,813 - #49 int
INFO  13:14:18,813 - #49 c
INFO  13:14:18,813 - #36 ;
INFO  13:14:18,813 - #44 {
INFO  13:14:18,813 - #49 x
INFO  13:14:18,813 - #35 =
INFO  13:14:18,813 - #49 arg
INFO  13:14:18,813 - #39 .
INFO  13:14:18,813 - #49 a
INFO  13:14:18,813 - #39 .
INFO  13:14:18,813 - #49 b
INFO  13:14:18,813 - #39 .
INFO  13:14:18,814 - #49 c
INFO  13:14:18,814 - #36 ;
INFO  13:14:18,814 - #49 x
INFO  13:14:18,814 - #35 =
INFO  13:14:18,814 - #49 arr
INFO  13:14:18,814 - #42 [
INFO  13:14:18,814 - #46 1
INFO  13:14:18,814 - #43 ]
INFO  13:14:18,814 - #36 ;
INFO  13:14:18,814 - #14 do
INFO  13:14:18,814 - #44 {
INFO  13:14:18,814 - #19 break
INFO  13:14:18,814 - #36 ;
INFO  13:14:18,814 - #45 }
INFO  13:14:18,814 - #15 while
INFO  13:14:18,814 - #40 (
INFO  13:14:18,814 - #49 i
INFO  13:14:18,815 - #31 <
INFO  13:14:18,815 - #49 tableSize
INFO  13:14:18,815 - #38 ,
INFO  13:14:18,815 - #49 i
INFO  13:14:18,815 - #25 ++
INFO  13:14:18,815 - #41 )
INFO  13:14:18,815 - #36 ;
INFO  13:14:18,815 - #45 }
INFO  13:14:18,815 - #12 void
INFO  13:14:18,815 - #49 main
INFO  13:14:18,815 - #40 (
INFO  13:14:18,815 - #41 )
INFO  13:14:18,815 - #49 int
INFO  13:14:18,817 - #49 b
INFO  13:14:18,817 - #42 [
INFO  13:14:18,817 - #43 ]
INFO  13:14:18,817 - #36 ;
INFO  13:14:18,817 - #44 {
INFO  13:14:18,817 - #9 print
INFO  13:14:18,817 - #40 (
INFO  13:14:18,817 - #49 b
INFO  13:14:18,817 - #42 [
INFO  13:14:18,817 - #42 [
ERROR 13:14:18,817 - 
Sintaksna greska na liniji 37, na koloni 16
INFO  13:14:18,817 - #43 ]
INFO  13:14:18,817 - #43 ]
INFO  13:14:18,817 - #41 )
INFO  13:14:18,818 - #36 ;
INFO  13:14:18,818 - #45 }
INFO  13:14:18,818 - #45 }
ERROR 13:14:18,818 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39, na koloni 1
