INFO  20:21:28,220 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  20:21:28,382 - #2 program
INFO  20:21:28,382 - #49 p
INFO  20:21:28,382 - #8 const
INFO  20:21:28,384 - #49 int
INFO  20:21:28,384 - #49 tableSize
INFO  20:21:28,384 - #35 =
INFO  20:21:28,384 - #46 10
INFO  20:21:28,384 - #36 ;
INFO  20:21:28,386 - #49 set
INFO  20:21:28,387 - #49 s1
INFO  20:21:28,387 - #36 ;
INFO  20:21:28,391 - #3 class
INFO  20:21:28,391 - #49 Table
INFO  20:21:28,391 - #44 {
INFO  20:21:28,392 - #49 int
INFO  20:21:28,393 - #49 pos
INFO  20:21:28,393 - #42 [
INFO  20:21:28,393 - #43 ]
INFO  20:21:28,393 - #38 ,
INFO  20:21:28,394 - #38 ,
ERROR 20:21:28,394 - 
Sintaksna greska na liniji 5, na koloni 10
INFO  20:21:28,396 - #49 neg
INFO  20:21:28,396 - #42 [
INFO  20:21:28,396 - #43 ]
INFO  20:21:28,399 - #38 ,
INFO  20:21:28,399 - #49 factor
INFO  20:21:28,399 - #36 ;
INFO  20:21:28,399 - #44 {
INFO  20:21:28,399 - #12 void
INFO  20:21:28,399 - #49 setfactor
INFO  20:21:28,399 - #40 (
INFO  20:21:28,399 - #49 int
INFO  20:21:28,400 - #49 factor
INFO  20:21:28,400 - #41 )
INFO  20:21:28,400 - #44 {
INFO  20:21:28,400 - #49 this
INFO  20:21:28,402 - #39 .
INFO  20:21:28,402 - #49 factor
INFO  20:21:28,402 - #35 =
INFO  20:21:28,402 - #49 factor
INFO  20:21:28,402 - #36 ;
INFO  20:21:28,402 - #45 }
INFO  20:21:28,402 - #12 void
INFO  20:21:28,402 - #49 putp
INFO  20:21:28,403 - #40 (
INFO  20:21:28,403 - #49 int
INFO  20:21:28,403 - #49 a
INFO  20:21:28,403 - #38 ,
INFO  20:21:28,403 - #49 int
INFO  20:21:28,403 - #49 idx
INFO  20:21:28,403 - #41 )
INFO  20:21:28,403 - #44 {
INFO  20:21:28,403 - #49 this
INFO  20:21:28,403 - #39 .
INFO  20:21:28,403 - #49 pos
INFO  20:21:28,403 - #42 [
INFO  20:21:28,403 - #49 idx
INFO  20:21:28,403 - #43 ]
INFO  20:21:28,403 - #35 =
INFO  20:21:28,403 - #49 a
INFO  20:21:28,405 - #36 ;
INFO  20:21:28,405 - #45 }
INFO  20:21:28,405 - #12 void
INFO  20:21:28,405 - #49 putn
INFO  20:21:28,405 - #40 (
INFO  20:21:28,405 - #49 int
INFO  20:21:28,405 - #49 a
INFO  20:21:28,405 - #38 ,
INFO  20:21:28,405 - #49 int
INFO  20:21:28,405 - #49 idx
INFO  20:21:28,405 - #41 )
INFO  20:21:28,405 - #44 {
INFO  20:21:28,405 - #49 this
INFO  20:21:28,406 - #39 .
INFO  20:21:28,406 - #49 neg
INFO  20:21:28,406 - #42 [
INFO  20:21:28,406 - #49 idx
INFO  20:21:28,406 - #43 ]
INFO  20:21:28,406 - #35 =
INFO  20:21:28,406 - #49 a
INFO  20:21:28,406 - #36 ;
INFO  20:21:28,406 - #45 }
INFO  20:21:28,406 - #49 int
INFO  20:21:28,406 - #49 getp
INFO  20:21:28,406 - #40 (
INFO  20:21:28,406 - #49 int
INFO  20:21:28,406 - #49 idx
INFO  20:21:28,406 - #41 )
INFO  20:21:28,406 - #44 {
INFO  20:21:28,406 - #13 return
INFO  20:21:28,406 - #49 pos
INFO  20:21:28,406 - #42 [
INFO  20:21:28,407 - #49 idx
INFO  20:21:28,407 - #43 ]
INFO  20:21:28,407 - #36 ;
INFO  20:21:28,407 - #45 }
INFO  20:21:28,407 - #49 int
INFO  20:21:28,407 - #49 getn
INFO  20:21:28,407 - #40 (
INFO  20:21:28,407 - #49 int
INFO  20:21:28,407 - #49 idx
INFO  20:21:28,407 - #41 )
INFO  20:21:28,407 - #44 {
INFO  20:21:28,407 - #13 return
INFO  20:21:28,407 - #49 neg
INFO  20:21:28,407 - #42 [
INFO  20:21:28,408 - #49 idx
INFO  20:21:28,408 - #43 ]
INFO  20:21:28,408 - #36 ;
INFO  20:21:28,408 - #45 }
INFO  20:21:28,408 - #45 }
INFO  20:21:28,408 - #45 }
INFO  20:21:28,408 - #49 Table
INFO  20:21:28,408 - #49 val
INFO  20:21:28,408 - #36 ;
INFO  20:21:28,408 - #49 int
INFO  20:21:28,408 - #49 rows
INFO  20:21:28,409 - #38 ,
INFO  20:21:28,409 - #49 columns
INFO  20:21:28,409 - #36 ;
INFO  20:21:28,409 - #44 {
INFO  20:21:28,409 - #12 void
INFO  20:21:28,409 - #49 f
INFO  20:21:28,409 - #40 (
INFO  20:21:28,409 - #49 char
INFO  20:21:28,409 - #49 ch
INFO  20:21:28,409 - #38 ,
INFO  20:21:28,410 - #49 int
INFO  20:21:28,410 - #49 a
INFO  20:21:28,410 - #38 ,
INFO  20:21:28,411 - #49 int
INFO  20:21:28,411 - #49 arg
INFO  20:21:28,411 - #41 )
INFO  20:21:28,411 - #49 int
INFO  20:21:28,411 - #49 x
INFO  20:21:28,411 - #36 ;
INFO  20:21:28,411 - #44 {
INFO  20:21:28,411 - #49 x
INFO  20:21:28,411 - #35 =
INFO  20:21:28,411 - #49 arg
INFO  20:21:28,411 - #36 ;
INFO  20:21:28,411 - #45 }
INFO  20:21:28,412 - #12 void
INFO  20:21:28,412 - #49 main
INFO  20:21:28,412 - #40 (
INFO  20:21:28,412 - #41 )
INFO  20:21:28,412 - #49 int
INFO  20:21:28,412 - #49 x
INFO  20:21:28,412 - #38 ,
INFO  20:21:28,412 - #49 i
INFO  20:21:28,412 - #36 ;
INFO  20:21:28,412 - #49 char
INFO  20:21:28,412 - #49 c
INFO  20:21:28,412 - #36 ;
INFO  20:21:28,412 - #49 int
INFO  20:21:28,412 - #49 arr
INFO  20:21:28,413 - #42 [
INFO  20:21:28,413 - #43 ]
INFO  20:21:28,413 - #36 ;
INFO  20:21:28,413 - #44 {
INFO  20:21:28,413 - #49 val
INFO  20:21:28,413 - #35 =
INFO  20:21:28,413 - #11 new
INFO  20:21:28,413 - #49 Table
INFO  20:21:28,413 - #40 (
INFO  20:21:28,413 - #41 )
INFO  20:21:28,413 - #36 ;
INFO  20:21:28,413 - #49 val
INFO  20:21:28,413 - #39 .
INFO  20:21:28,413 - #49 setfactor
INFO  20:21:28,414 - #40 (
INFO  20:21:28,414 - #46 2
INFO  20:21:28,414 - #41 )
INFO  20:21:28,414 - #36 ;
INFO  20:21:28,414 - #49 s1
INFO  20:21:28,414 - #35 =
INFO  20:21:28,414 - #11 new
INFO  20:21:28,414 - #49 set
INFO  20:21:28,414 - #42 [
INFO  20:21:28,414 - #46 5
INFO  20:21:28,414 - #43 ]
INFO  20:21:28,414 - #36 ;
INFO  20:21:28,414 - #49 s1
INFO  20:21:28,415 - #39 .
INFO  20:21:28,415 - #49 add
INFO  20:21:28,415 - #40 (
INFO  20:21:28,415 - #46 5
INFO  20:21:28,415 - #41 )
INFO  20:21:28,415 - #36 ;
INFO  20:21:28,415 - #49 s1
INFO  20:21:28,416 - #39 .
INFO  20:21:28,416 - #49 add
INFO  20:21:28,416 - #40 (
INFO  20:21:28,416 - #46 10
INFO  20:21:28,416 - #41 )
INFO  20:21:28,416 - #36 ;
INFO  20:21:28,416 - #9 print
INFO  20:21:28,416 - #40 (
INFO  20:21:28,416 - #49 s1
INFO  20:21:28,416 - #41 )
INFO  20:21:28,416 - #36 ;
INFO  20:21:28,417 - #49 arr
INFO  20:21:28,417 - #35 =
INFO  20:21:28,417 - #11 new
INFO  20:21:28,417 - #49 int
INFO  20:21:28,417 - #42 [
INFO  20:21:28,417 - #46 3
INFO  20:21:28,417 - #43 ]
INFO  20:21:28,417 - #36 ;
INFO  20:21:28,417 - #49 i
INFO  20:21:28,418 - #35 =
INFO  20:21:28,418 - #46 0
INFO  20:21:28,418 - #36 ;
INFO  20:21:28,418 - #14 do
INFO  20:21:28,418 - #49 arr
INFO  20:21:28,418 - #42 [
INFO  20:21:28,418 - #49 i
INFO  20:21:28,418 - #43 ]
INFO  20:21:28,418 - #35 =
INFO  20:21:28,418 - #49 i
INFO  20:21:28,418 - #36 ;
INFO  20:21:28,419 - #15 while
INFO  20:21:28,419 - #40 (
INFO  20:21:28,419 - #49 i
INFO  20:21:28,419 - #31 <
INFO  20:21:28,419 - #46 3
INFO  20:21:28,419 - #38 ,
INFO  20:21:28,419 - #49 i
INFO  20:21:28,419 - #25 ++
INFO  20:21:28,419 - #41 )
INFO  20:21:28,419 - #36 ;
INFO  20:21:28,419 - #49 i
INFO  20:21:28,419 - #35 =
INFO  20:21:28,419 - #46 0
INFO  20:21:28,420 - #36 ;
INFO  20:21:28,420 - #14 do
INFO  20:21:28,420 - #9 print
INFO  20:21:28,420 - #40 (
INFO  20:21:28,420 - #49 arr
INFO  20:21:28,420 - #42 [
INFO  20:21:28,420 - #49 i
INFO  20:21:28,420 - #43 ]
INFO  20:21:28,420 - #41 )
INFO  20:21:28,420 - #36 ;
INFO  20:21:28,420 - #15 while
INFO  20:21:28,420 - #40 (
INFO  20:21:28,420 - #49 i
INFO  20:21:28,420 - #31 <
INFO  20:21:28,420 - #46 3
INFO  20:21:28,420 - #38 ,
INFO  20:21:28,421 - #49 i
INFO  20:21:28,421 - #25 ++
INFO  20:21:28,421 - #41 )
INFO  20:21:28,421 - #36 ;
INFO  20:21:28,421 - #49 val
INFO  20:21:28,421 - #39 .
INFO  20:21:28,421 - #49 pos
INFO  20:21:28,421 - #35 =
INFO  20:21:28,421 - #11 new
INFO  20:21:28,421 - #49 int
INFO  20:21:28,422 - #42 [
INFO  20:21:28,422 - #49 tableSize
INFO  20:21:28,422 - #43 ]
INFO  20:21:28,422 - #36 ;
INFO  20:21:28,422 - #49 val
INFO  20:21:28,422 - #39 .
INFO  20:21:28,422 - #49 neg
INFO  20:21:28,422 - #35 =
INFO  20:21:28,422 - #11 new
INFO  20:21:28,422 - #49 int
INFO  20:21:28,422 - #42 [
INFO  20:21:28,422 - #49 tableSize
INFO  20:21:28,422 - #43 ]
INFO  20:21:28,422 - #36 ;
INFO  20:21:28,422 - #10 read
INFO  20:21:28,423 - #40 (
INFO  20:21:28,423 - #49 x
INFO  20:21:28,423 - #41 )
INFO  20:21:28,423 - #36 ;
INFO  20:21:28,423 - #49 i
INFO  20:21:28,423 - #35 =
INFO  20:21:28,423 - #46 0
INFO  20:21:28,423 - #36 ;
INFO  20:21:28,423 - #14 do
INFO  20:21:28,423 - #44 {
INFO  20:21:28,424 - #49 val
INFO  20:21:28,424 - #39 .
INFO  20:21:28,424 - #49 putp
INFO  20:21:28,424 - #40 (
INFO  20:21:28,424 - #46 0
INFO  20:21:28,424 - #38 ,
INFO  20:21:28,424 - #49 i
INFO  20:21:28,424 - #41 )
INFO  20:21:28,424 - #36 ;
INFO  20:21:28,424 - #49 val
INFO  20:21:28,424 - #39 .
INFO  20:21:28,424 - #49 putn
INFO  20:21:28,424 - #40 (
INFO  20:21:28,424 - #46 0
INFO  20:21:28,424 - #38 ,
INFO  20:21:28,424 - #49 i
INFO  20:21:28,424 - #41 )
INFO  20:21:28,424 - #36 ;
INFO  20:21:28,424 - #45 }
INFO  20:21:28,424 - #15 while
INFO  20:21:28,424 - #40 (
INFO  20:21:28,425 - #49 i
INFO  20:21:28,425 - #31 <
INFO  20:21:28,425 - #49 tableSize
INFO  20:21:28,425 - #38 ,
INFO  20:21:28,425 - #49 i
INFO  20:21:28,425 - #25 ++
INFO  20:21:28,425 - #41 )
INFO  20:21:28,425 - #36 ;
INFO  20:21:28,425 - #49 f
INFO  20:21:28,425 - #40 (
INFO  20:21:28,425 - #49 c
INFO  20:21:28,425 - #38 ,
INFO  20:21:28,425 - #49 x
INFO  20:21:28,425 - #38 ,
INFO  20:21:28,425 - #49 i
INFO  20:21:28,425 - #41 )
INFO  20:21:28,425 - #36 ;
INFO  20:21:28,425 - #10 read
INFO  20:21:28,425 - #40 (
INFO  20:21:28,425 - #49 rows
INFO  20:21:28,425 - #41 )
INFO  20:21:28,425 - #36 ;
INFO  20:21:28,425 - #49 x
INFO  20:21:28,425 - #35 =
INFO  20:21:28,425 - #49 rows
INFO  20:21:28,426 - #36 ;
INFO  20:21:28,426 - #14 do
INFO  20:21:28,426 - #44 {
INFO  20:21:28,426 - #16 if
INFO  20:21:28,426 - #40 (
INFO  20:21:28,426 - #49 x
INFO  20:21:28,426 - #32 <=
INFO  20:21:28,426 - #46 0
INFO  20:21:28,426 - #41 )
INFO  20:21:28,426 - #19 break
INFO  20:21:28,426 - #36 ;
INFO  20:21:28,426 - #16 if
INFO  20:21:28,426 - #40 (
INFO  20:21:28,426 - #46 0
INFO  20:21:28,426 - #32 <=
INFO  20:21:28,426 - #49 x
INFO  20:21:28,427 - #33 &&
INFO  20:21:28,427 - #49 x
INFO  20:21:28,427 - #31 <
INFO  20:21:28,427 - #49 tableSize
INFO  20:21:28,427 - #41 )
INFO  20:21:28,427 - #44 {
INFO  20:21:28,427 - #49 val
INFO  20:21:28,427 - #39 .
INFO  20:21:28,427 - #49 putp
INFO  20:21:28,427 - #40 (
INFO  20:21:28,427 - #49 val
INFO  20:21:28,427 - #39 .
INFO  20:21:28,427 - #49 getp
INFO  20:21:28,427 - #40 (
INFO  20:21:28,427 - #49 x
INFO  20:21:28,427 - #41 )
INFO  20:21:28,427 - #20 +
INFO  20:21:28,427 - #46 1
INFO  20:21:28,427 - #41 )
INFO  20:21:28,429 - #36 ;
INFO  20:21:28,429 - #45 }
INFO  20:21:28,429 - #17 else
INFO  20:21:28,429 - #16 if
INFO  20:21:28,429 - #40 (
INFO  20:21:28,429 - #21 -
INFO  20:21:28,429 - #49 tableSize
INFO  20:21:28,429 - #31 <
INFO  20:21:28,429 - #49 x
INFO  20:21:28,429 - #33 &&
INFO  20:21:28,429 - #49 x
INFO  20:21:28,429 - #31 <
INFO  20:21:28,429 - #46 0
INFO  20:21:28,429 - #41 )
INFO  20:21:28,430 - #44 {
INFO  20:21:28,430 - #49 val
INFO  20:21:28,430 - #39 .
INFO  20:21:28,430 - #49 putn
INFO  20:21:28,430 - #40 (
INFO  20:21:28,430 - #49 val
INFO  20:21:28,430 - #39 .
INFO  20:21:28,430 - #49 getn
INFO  20:21:28,430 - #40 (
INFO  20:21:28,430 - #21 -
INFO  20:21:28,430 - #49 x
INFO  20:21:28,430 - #41 )
INFO  20:21:28,430 - #20 +
INFO  20:21:28,430 - #46 1
INFO  20:21:28,430 - #41 )
INFO  20:21:28,430 - #36 ;
INFO  20:21:28,430 - #45 }
INFO  20:21:28,430 - #10 read
INFO  20:21:28,430 - #40 (
INFO  20:21:28,430 - #49 x
INFO  20:21:28,430 - #41 )
INFO  20:21:28,431 - #36 ;
INFO  20:21:28,431 - #45 }
INFO  20:21:28,431 - #15 while
INFO  20:21:28,431 - #40 (
INFO  20:21:28,431 - #41 )
INFO  20:21:28,431 - #36 ;
INFO  20:21:28,431 - #45 }
INFO  20:21:28,431 - #45 }
ERROR 20:21:28,432 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
