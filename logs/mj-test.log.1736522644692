INFO  16:22:41,884 - Compiling source file: C:\Users\kokan\Konstantin Vuckovic\si\PP1\MJCompiler\MJCompiler\test\program.mj
INFO  16:22:41,992 - #2 program
INFO  16:22:41,992 - #49 p
INFO  16:22:41,992 - #8 const
INFO  16:22:41,993 - #49 int
INFO  16:22:41,994 - #49 tableSize
INFO  16:22:41,994 - #35 =
INFO  16:22:41,994 - #46 10
INFO  16:22:41,994 - #36 ;
INFO  16:22:41,995 - #49 set
INFO  16:22:41,996 - #49 s1
INFO  16:22:41,996 - #36 ;
INFO  16:22:41,998 - #3 class
INFO  16:22:41,999 - #49 Table
INFO  16:22:41,999 - #44 {
INFO  16:22:42,000 - #49 int
INFO  16:22:42,001 - #49 pos
INFO  16:22:42,001 - #42 [
INFO  16:22:42,001 - #43 ]
INFO  16:22:42,001 - #38 ,
INFO  16:22:42,001 - #49 a
INFO  16:22:42,002 - #20 +
ERROR 16:22:42,004 - 
Sintaksna greska na liniji 5, na koloni 12
INFO  16:22:42,004 - #38 ,
INFO  16:22:42,004 - #49 b
INFO  16:22:42,004 - #36 ;
INFO  16:22:42,007 - #44 {
INFO  16:22:42,007 - #12 void
INFO  16:22:42,008 - #49 setfactor
INFO  16:22:42,008 - #40 (
INFO  16:22:42,008 - #49 int
INFO  16:22:42,008 - #49 factor
INFO  16:22:42,008 - #41 )
INFO  16:22:42,008 - #44 {
INFO  16:22:42,008 - #49 this
INFO  16:22:42,008 - #39 .
INFO  16:22:42,008 - #49 factor
INFO  16:22:42,010 - #35 =
INFO  16:22:42,011 - #49 factor
INFO  16:22:42,011 - #36 ;
INFO  16:22:42,011 - #45 }
INFO  16:22:42,011 - #12 void
INFO  16:22:42,011 - #49 putp
INFO  16:22:42,011 - #40 (
INFO  16:22:42,011 - #49 int
INFO  16:22:42,011 - #49 a
INFO  16:22:42,011 - #38 ,
INFO  16:22:42,011 - #49 int
INFO  16:22:42,011 - #49 idx
INFO  16:22:42,011 - #41 )
INFO  16:22:42,011 - #44 {
INFO  16:22:42,011 - #49 this
INFO  16:22:42,011 - #39 .
INFO  16:22:42,011 - #49 pos
INFO  16:22:42,011 - #42 [
INFO  16:22:42,011 - #49 idx
INFO  16:22:42,012 - #43 ]
INFO  16:22:42,012 - #35 =
INFO  16:22:42,012 - #49 a
INFO  16:22:42,012 - #36 ;
INFO  16:22:42,012 - #45 }
INFO  16:22:42,012 - #12 void
INFO  16:22:42,012 - #49 putn
INFO  16:22:42,012 - #40 (
INFO  16:22:42,012 - #49 int
INFO  16:22:42,012 - #49 a
INFO  16:22:42,012 - #38 ,
INFO  16:22:42,012 - #49 int
INFO  16:22:42,012 - #49 idx
INFO  16:22:42,012 - #41 )
INFO  16:22:42,012 - #44 {
INFO  16:22:42,012 - #49 this
INFO  16:22:42,012 - #39 .
INFO  16:22:42,012 - #49 neg
INFO  16:22:42,012 - #42 [
INFO  16:22:42,012 - #49 idx
INFO  16:22:42,012 - #43 ]
INFO  16:22:42,013 - #35 =
INFO  16:22:42,013 - #49 a
INFO  16:22:42,013 - #36 ;
INFO  16:22:42,013 - #45 }
INFO  16:22:42,013 - #49 int
INFO  16:22:42,013 - #49 getp
INFO  16:22:42,013 - #40 (
INFO  16:22:42,013 - #49 int
INFO  16:22:42,013 - #49 idx
INFO  16:22:42,013 - #41 )
INFO  16:22:42,013 - #44 {
INFO  16:22:42,013 - #13 return
INFO  16:22:42,013 - #49 pos
INFO  16:22:42,013 - #42 [
INFO  16:22:42,013 - #49 idx
INFO  16:22:42,013 - #43 ]
INFO  16:22:42,013 - #36 ;
INFO  16:22:42,013 - #45 }
INFO  16:22:42,013 - #49 int
INFO  16:22:42,013 - #49 getn
INFO  16:22:42,013 - #40 (
INFO  16:22:42,013 - #49 int
INFO  16:22:42,013 - #49 idx
INFO  16:22:42,014 - #41 )
INFO  16:22:42,014 - #44 {
INFO  16:22:42,014 - #13 return
INFO  16:22:42,014 - #49 neg
INFO  16:22:42,014 - #42 [
INFO  16:22:42,014 - #49 idx
INFO  16:22:42,014 - #43 ]
INFO  16:22:42,014 - #36 ;
INFO  16:22:42,014 - #45 }
INFO  16:22:42,014 - #45 }
INFO  16:22:42,014 - #45 }
INFO  16:22:42,014 - #49 Table
INFO  16:22:42,014 - #49 val
INFO  16:22:42,014 - #36 ;
INFO  16:22:42,014 - #49 int
INFO  16:22:42,014 - #49 rows
INFO  16:22:42,014 - #38 ,
INFO  16:22:42,014 - #49 columns
INFO  16:22:42,014 - #36 ;
INFO  16:22:42,014 - #44 {
INFO  16:22:42,014 - #12 void
INFO  16:22:42,014 - #49 f
INFO  16:22:42,014 - #40 (
INFO  16:22:42,015 - #49 char
INFO  16:22:42,015 - #49 ch
INFO  16:22:42,015 - #38 ,
INFO  16:22:42,015 - #49 int
INFO  16:22:42,015 - #49 a
INFO  16:22:42,015 - #38 ,
INFO  16:22:42,015 - #49 int
INFO  16:22:42,015 - #49 arg
INFO  16:22:42,015 - #41 )
INFO  16:22:42,015 - #49 int
INFO  16:22:42,015 - #49 x
INFO  16:22:42,015 - #36 ;
INFO  16:22:42,015 - #44 {
INFO  16:22:42,015 - #49 x
INFO  16:22:42,015 - #35 =
INFO  16:22:42,015 - #49 arg
INFO  16:22:42,015 - #36 ;
INFO  16:22:42,015 - #45 }
INFO  16:22:42,015 - #12 void
INFO  16:22:42,015 - #49 main
INFO  16:22:42,016 - #40 (
INFO  16:22:42,016 - #41 )
INFO  16:22:42,016 - #49 int
INFO  16:22:42,016 - #49 x
INFO  16:22:42,016 - #38 ,
INFO  16:22:42,016 - #49 i
INFO  16:22:42,016 - #36 ;
INFO  16:22:42,016 - #49 char
INFO  16:22:42,016 - #49 c
INFO  16:22:42,016 - #36 ;
INFO  16:22:42,016 - #49 int
INFO  16:22:42,016 - #49 arr
INFO  16:22:42,016 - #42 [
INFO  16:22:42,016 - #43 ]
INFO  16:22:42,016 - #36 ;
INFO  16:22:42,016 - #44 {
INFO  16:22:42,016 - #49 val
INFO  16:22:42,016 - #35 =
INFO  16:22:42,016 - #11 new
INFO  16:22:42,016 - #49 Table
INFO  16:22:42,017 - #40 (
INFO  16:22:42,017 - #41 )
INFO  16:22:42,017 - #36 ;
INFO  16:22:42,017 - #49 val
INFO  16:22:42,017 - #39 .
INFO  16:22:42,017 - #49 setfactor
INFO  16:22:42,017 - #40 (
INFO  16:22:42,017 - #46 2
INFO  16:22:42,017 - #41 )
INFO  16:22:42,017 - #36 ;
INFO  16:22:42,017 - #49 s1
INFO  16:22:42,017 - #35 =
INFO  16:22:42,017 - #11 new
INFO  16:22:42,017 - #49 set
INFO  16:22:42,017 - #42 [
INFO  16:22:42,017 - #46 5
INFO  16:22:42,017 - #43 ]
INFO  16:22:42,017 - #36 ;
INFO  16:22:42,017 - #49 s1
INFO  16:22:42,017 - #39 .
INFO  16:22:42,018 - #49 add
INFO  16:22:42,018 - #40 (
INFO  16:22:42,018 - #46 5
INFO  16:22:42,018 - #41 )
INFO  16:22:42,018 - #36 ;
INFO  16:22:42,018 - #49 s1
INFO  16:22:42,018 - #39 .
INFO  16:22:42,018 - #49 add
INFO  16:22:42,018 - #40 (
INFO  16:22:42,018 - #46 10
INFO  16:22:42,018 - #41 )
INFO  16:22:42,018 - #36 ;
INFO  16:22:42,018 - #9 print
INFO  16:22:42,018 - #40 (
INFO  16:22:42,018 - #49 s1
INFO  16:22:42,018 - #41 )
INFO  16:22:42,018 - #36 ;
INFO  16:22:42,018 - #49 arr
INFO  16:22:42,018 - #35 =
INFO  16:22:42,018 - #11 new
INFO  16:22:42,018 - #49 int
INFO  16:22:42,019 - #42 [
INFO  16:22:42,019 - #46 3
INFO  16:22:42,019 - #43 ]
INFO  16:22:42,019 - #36 ;
INFO  16:22:42,019 - #49 i
INFO  16:22:42,019 - #35 =
INFO  16:22:42,019 - #46 0
INFO  16:22:42,019 - #36 ;
INFO  16:22:42,019 - #14 do
INFO  16:22:42,019 - #49 arr
INFO  16:22:42,019 - #42 [
INFO  16:22:42,019 - #49 i
INFO  16:22:42,019 - #43 ]
INFO  16:22:42,019 - #35 =
INFO  16:22:42,019 - #49 i
INFO  16:22:42,019 - #36 ;
INFO  16:22:42,019 - #15 while
INFO  16:22:42,019 - #40 (
INFO  16:22:42,019 - #49 i
INFO  16:22:42,019 - #31 <
INFO  16:22:42,019 - #46 3
INFO  16:22:42,019 - #38 ,
INFO  16:22:42,019 - #49 i
INFO  16:22:42,019 - #25 ++
INFO  16:22:42,019 - #41 )
INFO  16:22:42,020 - #36 ;
INFO  16:22:42,020 - #49 i
INFO  16:22:42,020 - #35 =
INFO  16:22:42,020 - #46 0
INFO  16:22:42,020 - #36 ;
INFO  16:22:42,020 - #14 do
INFO  16:22:42,020 - #9 print
INFO  16:22:42,020 - #40 (
INFO  16:22:42,020 - #49 arr
INFO  16:22:42,020 - #42 [
INFO  16:22:42,020 - #49 i
INFO  16:22:42,020 - #43 ]
INFO  16:22:42,020 - #41 )
INFO  16:22:42,020 - #36 ;
INFO  16:22:42,020 - #15 while
INFO  16:22:42,020 - #40 (
INFO  16:22:42,020 - #49 i
INFO  16:22:42,020 - #31 <
INFO  16:22:42,020 - #46 3
INFO  16:22:42,020 - #38 ,
INFO  16:22:42,020 - #49 i
INFO  16:22:42,020 - #25 ++
INFO  16:22:42,020 - #41 )
INFO  16:22:42,020 - #36 ;
INFO  16:22:42,020 - #49 val
INFO  16:22:42,020 - #39 .
INFO  16:22:42,020 - #49 pos
INFO  16:22:42,021 - #35 =
INFO  16:22:42,021 - #11 new
INFO  16:22:42,021 - #49 int
INFO  16:22:42,021 - #42 [
INFO  16:22:42,021 - #49 tableSize
INFO  16:22:42,021 - #43 ]
INFO  16:22:42,021 - #36 ;
INFO  16:22:42,021 - #49 val
INFO  16:22:42,021 - #39 .
INFO  16:22:42,021 - #49 neg
INFO  16:22:42,021 - #35 =
INFO  16:22:42,021 - #11 new
INFO  16:22:42,021 - #49 int
INFO  16:22:42,021 - #42 [
INFO  16:22:42,021 - #49 tableSize
INFO  16:22:42,021 - #43 ]
INFO  16:22:42,021 - #36 ;
INFO  16:22:42,021 - #10 read
INFO  16:22:42,021 - #40 (
INFO  16:22:42,021 - #49 x
INFO  16:22:42,021 - #41 )
INFO  16:22:42,021 - #36 ;
INFO  16:22:42,021 - #49 i
INFO  16:22:42,021 - #35 =
INFO  16:22:42,021 - #46 0
INFO  16:22:42,021 - #36 ;
INFO  16:22:42,022 - #14 do
INFO  16:22:42,022 - #44 {
INFO  16:22:42,022 - #49 val
INFO  16:22:42,022 - #39 .
INFO  16:22:42,022 - #49 putp
INFO  16:22:42,022 - #40 (
INFO  16:22:42,022 - #46 0
INFO  16:22:42,022 - #38 ,
INFO  16:22:42,022 - #49 i
INFO  16:22:42,022 - #41 )
INFO  16:22:42,022 - #36 ;
INFO  16:22:42,022 - #49 val
INFO  16:22:42,022 - #39 .
INFO  16:22:42,022 - #49 putn
INFO  16:22:42,022 - #40 (
INFO  16:22:42,022 - #46 0
INFO  16:22:42,022 - #38 ,
INFO  16:22:42,022 - #49 i
INFO  16:22:42,022 - #41 )
INFO  16:22:42,022 - #36 ;
INFO  16:22:42,022 - #45 }
INFO  16:22:42,022 - #15 while
INFO  16:22:42,022 - #40 (
INFO  16:22:42,022 - #49 i
INFO  16:22:42,022 - #31 <
INFO  16:22:42,022 - #49 tableSize
INFO  16:22:42,022 - #38 ,
INFO  16:22:42,023 - #49 i
INFO  16:22:42,023 - #25 ++
INFO  16:22:42,023 - #41 )
INFO  16:22:42,023 - #36 ;
INFO  16:22:42,023 - #49 f
INFO  16:22:42,023 - #40 (
INFO  16:22:42,023 - #49 c
INFO  16:22:42,023 - #38 ,
INFO  16:22:42,023 - #49 x
INFO  16:22:42,023 - #38 ,
INFO  16:22:42,023 - #49 i
INFO  16:22:42,023 - #41 )
INFO  16:22:42,023 - #36 ;
INFO  16:22:42,023 - #10 read
INFO  16:22:42,023 - #40 (
INFO  16:22:42,023 - #49 rows
INFO  16:22:42,023 - #41 )
INFO  16:22:42,023 - #36 ;
INFO  16:22:42,023 - #49 x
INFO  16:22:42,023 - #35 =
INFO  16:22:42,023 - #49 rows
INFO  16:22:42,023 - #36 ;
INFO  16:22:42,023 - #14 do
INFO  16:22:42,023 - #44 {
INFO  16:22:42,023 - #16 if
INFO  16:22:42,023 - #40 (
INFO  16:22:42,023 - #49 x
INFO  16:22:42,023 - #32 <=
INFO  16:22:42,023 - #46 0
INFO  16:22:42,024 - #41 )
INFO  16:22:42,024 - #19 break
INFO  16:22:42,024 - #36 ;
INFO  16:22:42,024 - #16 if
INFO  16:22:42,024 - #40 (
INFO  16:22:42,024 - #46 0
INFO  16:22:42,024 - #32 <=
INFO  16:22:42,024 - #49 x
INFO  16:22:42,024 - #33 &&
INFO  16:22:42,024 - #49 x
INFO  16:22:42,024 - #31 <
INFO  16:22:42,024 - #49 tableSize
INFO  16:22:42,024 - #41 )
INFO  16:22:42,024 - #44 {
INFO  16:22:42,024 - #49 val
INFO  16:22:42,024 - #39 .
INFO  16:22:42,024 - #49 putp
INFO  16:22:42,024 - #40 (
INFO  16:22:42,024 - #49 val
INFO  16:22:42,024 - #39 .
INFO  16:22:42,024 - #49 getp
INFO  16:22:42,024 - #40 (
INFO  16:22:42,024 - #49 x
INFO  16:22:42,024 - #41 )
INFO  16:22:42,024 - #20 +
INFO  16:22:42,024 - #46 1
INFO  16:22:42,024 - #41 )
INFO  16:22:42,024 - #36 ;
INFO  16:22:42,025 - #45 }
INFO  16:22:42,025 - #17 else
INFO  16:22:42,025 - #16 if
INFO  16:22:42,025 - #40 (
INFO  16:22:42,025 - #21 -
INFO  16:22:42,025 - #49 tableSize
INFO  16:22:42,025 - #31 <
INFO  16:22:42,025 - #49 x
INFO  16:22:42,025 - #33 &&
INFO  16:22:42,025 - #49 x
INFO  16:22:42,025 - #31 <
INFO  16:22:42,025 - #46 0
INFO  16:22:42,025 - #41 )
INFO  16:22:42,025 - #44 {
INFO  16:22:42,025 - #49 val
INFO  16:22:42,025 - #39 .
INFO  16:22:42,025 - #49 putn
INFO  16:22:42,025 - #40 (
INFO  16:22:42,025 - #49 val
INFO  16:22:42,025 - #39 .
INFO  16:22:42,025 - #49 getn
INFO  16:22:42,025 - #40 (
INFO  16:22:42,025 - #21 -
INFO  16:22:42,025 - #49 x
INFO  16:22:42,026 - #41 )
INFO  16:22:42,026 - #20 +
INFO  16:22:42,026 - #46 1
INFO  16:22:42,026 - #41 )
INFO  16:22:42,026 - #36 ;
INFO  16:22:42,026 - #45 }
INFO  16:22:42,026 - #10 read
INFO  16:22:42,026 - #40 (
INFO  16:22:42,026 - #49 x
INFO  16:22:42,026 - #41 )
INFO  16:22:42,026 - #36 ;
INFO  16:22:42,026 - #45 }
INFO  16:22:42,026 - #15 while
INFO  16:22:42,026 - #40 (
INFO  16:22:42,026 - #41 )
INFO  16:22:42,026 - #36 ;
INFO  16:22:42,026 - #45 }
INFO  16:22:42,026 - #45 }
ERROR 16:22:42,026 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 62, na koloni 1
